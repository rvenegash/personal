//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OER_CargaDatos.OerProd {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FlashlineRegistrySoapBinding", Namespace="http://service.openapi.registry.flashline.com/v300")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OpenAPIException))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(EntityArtifactRule))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ISearchElement))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SearchTermGroup))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SearchTerm))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ISortableEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AssetMetadataTableElement))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IHtmlSelectItem))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IData))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SFIDCandidate))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SFIDAttribute))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Question))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Choice))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SettingValue))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AcceptableValue))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RelatedEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProjectSummary))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Decision))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AssetUsageType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProjectAssetValueSummaryItem))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Answer))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ExtractionDownload))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LogEntry))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AssetSummary))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ExtractionLogEvent))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SubmissionFileInfo))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PolicyAssertion))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PolicyAssertionResult))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AssignedUser))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactStoreBean))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(NameValue))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TabTypeBean))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AssetMetadataElement))]
    public partial class FlashlineRegistryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback assetReadTabMetadataOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTypeTabsReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTabApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTabUnapproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback notificationCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback notificationSubstitutionsReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback artifactStoreQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback authTokenCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback authTokenCreateWithLicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback authTokenDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback authTokenValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetCreateFromXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetReadXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetReadCustomDataStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetReadCustomDataNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetReadArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetReadArrayFromSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetAddCategorizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetGetUnacceptedFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetAcceptFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetDeleteFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetUpdateCustomDataStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetUpdateCustomDataStringArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetUpdateCustomDataNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetUpdateCustomDataNodeFromStringArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetUploadFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetAddRegistrarNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetReadRegistrarNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetUnRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetAcceptOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetUnAcceptOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetSubmitOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetUnSubmitOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetActivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetDeactivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetRetireOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTabsReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTabReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetQuerySummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetQueryCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetReadAppliedToProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetReadAppliedPoliciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetUpdateAppliedPoliciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetEvaluateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetEvaluateAgainstAllPoliciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetEvaluateAgainstPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetApplyToProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetRemoveAppliedToProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback repositoryFileTranslatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationTypeCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationTypeReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationTypeUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationTypeDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationTypeQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationChildCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationReadByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationChildReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationUpdateArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationDeactivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback categorizationReactivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback contactCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback contactReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback contactUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback contactDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback contactQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionGetHiddenAssetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionCreateForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionTentativelyAcceptOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionStillEvaluatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionRejectOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionUpdateSurveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionUpdateSurveyForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionReadByProjectAndAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionReadUserExtractionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionReadAssetExtractionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionReadProjectExtractionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionReadExtractionDownloadsOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionReadFileInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionReadRelatedAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionReadRejectionReasonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionReadExtractionStatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback extractionResetDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectAssetValueReadForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectAssetValueReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectAssetValueReadSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectAssetValueReadTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectAssetValueUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadArrayFromSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadMemberIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadLeadersOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadLeaderIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReassignExtractionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReassignUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadUserTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadParentProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadParentProjectIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadChildProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadChildProjectIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadExtractionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadExtractionAssetIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadPrescribedAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadAppliedComplianceTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadProducedAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectReadProducedAssetIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectQuerySummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback projectValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback departmentCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback departmentReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback departmentUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback departmentQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback acceptableValueListCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback acceptableValueListReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback acceptableValueListUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback acceptableValueListQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTypeCreateCloneOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTypeCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTypeCreateComplianceTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTypeReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTypeGetEntityArtifactRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTypeUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTypeDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTypeQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetTypeSchemaReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback configGetWebResourcePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback systemSettingsAddBundleOperationCompleted;
        
        private System.Threading.SendOrPostCallback systemSettingsQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback userCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback userReadByAuthTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback userUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userActivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userDeactivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback userLockoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback userUnapproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback userQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback userAddRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback userRemoveRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback unitTestUserResetDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback customAccessSettingNamesGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback customAccessSettingDefaultNamesGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback customAccessSettingTypesGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback rbacHasPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback roleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback relationshipTypeCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback relationshipTypeReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback relationshipTypeUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback relationshipTypeDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback relationshipTypeQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback surveyTakenReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback surveyReadQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback surveyTakenUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback vendorCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback vendorReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback vendorUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback vendorDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback vendorQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportListJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportGetAuditB64OperationCompleted;
        
        private System.Threading.SendOrPostCallback exportGetAuditDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportGetAuditSwAOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportGetLatestAuditMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback importGetAuditB64OperationCompleted;
        
        private System.Threading.SendOrPostCallback importGetAuditDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback importGetAuditSwAOperationCompleted;
        
        private System.Threading.SendOrPostCallback importGetLatestAuditMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportKillOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportGetResultsB64OperationCompleted;
        
        private System.Threading.SendOrPostCallback exportGetResultsDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportGetResultsSwAOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportCleanupOperationCompleted;
        
        private System.Threading.SendOrPostCallback importListJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback importExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback importStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback importKillOperationCompleted;
        
        private System.Threading.SendOrPostCallback importCheckPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportCheckPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback importCleanupOperationCompleted;
        
        private System.Threading.SendOrPostCallback testClearCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback testUpdateAssetDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback testUpdateTabStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback testCreateCustomAccessSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAssetMaxIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback testThrowOpenAPIExceptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback testSetSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback testGetSettingValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback testSetPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback testDeleteAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback testDeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback testDeleteProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback testDeleteAssetTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback testRestartJobMonitorOperationCompleted;
        
        private System.Threading.SendOrPostCallback testThrowImportExportExceptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback testGetLicenseStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback testDetermineDBPlatformOperationCompleted;
        
        private System.Threading.SendOrPostCallback testSetLicenseStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback testAcceptableValueListDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback testLogMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback testExtractionResetDatabaseForProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback testUpdateViewAssetSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback testCleanupNonRunningJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback testUpdateUserRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback testUpdateProjectAdminRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback testClearDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidAddToAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidRemoveAllFromAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidUpdateAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidReadValuesByProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidCandidateQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidGenerateOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidCandidateSubmitOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidReadValuesForAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidRegisterExtractionBySFIDValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidRegisterExtractionBySFIDValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidRegisterExtractionBySFIDCandidatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidRegisterExtractionBySFIDCandidatesLiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidRegisterExtractionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback sfidRegisterExtractionBySFIDValuesResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback reuseDTOReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetMetadataCreateDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetMetadataCreateSwAOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetMetadataReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetMetadataReadDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetMetadataReadSwAOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetMetadataUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetMetadataUpdateDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetMetadataUpdateSwAOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetMetadataEntryDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback assetMetadataAcceptOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryTypeCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryTypeReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryTypeUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryTypeDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryTypeQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryCreateDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryCreateSwAOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryReadDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryReadDIME1OperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryReadSwAOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryReadSwA1OperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryUpdateDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryUpdateSwAOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback metadataEntryQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback testCasDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback testCasCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback testRoleContextAddRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback testRoleContextSetPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback testRoleContextSetPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback testRoleContextApplySecuritySettingToExistingOperationCompleted;
        
        private System.Threading.SendOrPostCallback testRoleContextGetAllRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback testRoleContextGetPermissionFromRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback testRoleContextClearRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback testRoleContextRemoveRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback testDoSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback testHasSufficientAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback testDoSimpleQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscriptionCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscriptionDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscriptionReadSubscribedAssetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscriptionReadUsersSubscribedToAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveRootArtifactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveRootArtifactsWithCustomRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveLatestRootArtifactOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveArtifactCollectionAsDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveAndRecordUsageOfArtifactCollectionAsDIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveAndRecordUsageOfArtifactCollectionAsDIME1OperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveArtifactCollectionAsSwaOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveAndRecordUsageOfArtifactCollectionAsSwaOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveAndRecordUsageOfArtifactCollectionAsSwa1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getLatestArtifactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLatestArtifactsCustomRelationshipTypesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FlashlineRegistryService() {
            this.Url = global::OER_CargaDatos.Properties.Settings.Default.OER_CargaDatos_OerProd_FlashlineRegistryService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event assetReadTabMetadataCompletedEventHandler assetReadTabMetadataCompleted;
        
        /// <remarks/>
        public event assetTypeTabsReadCompletedEventHandler assetTypeTabsReadCompleted;
        
        /// <remarks/>
        public event assetTabApproveCompletedEventHandler assetTabApproveCompleted;
        
        /// <remarks/>
        public event assetTabUnapproveCompletedEventHandler assetTabUnapproveCompleted;
        
        /// <remarks/>
        public event notificationCreateCompletedEventHandler notificationCreateCompleted;
        
        /// <remarks/>
        public event notificationSubstitutionsReadCompletedEventHandler notificationSubstitutionsReadCompleted;
        
        /// <remarks/>
        public event artifactStoreQueryCompletedEventHandler artifactStoreQueryCompleted;
        
        /// <remarks/>
        public event authTokenCreateCompletedEventHandler authTokenCreateCompleted;
        
        /// <remarks/>
        public event authTokenCreateWithLicenseCompletedEventHandler authTokenCreateWithLicenseCompleted;
        
        /// <remarks/>
        public event authTokenDeleteCompletedEventHandler authTokenDeleteCompleted;
        
        /// <remarks/>
        public event authTokenValidateCompletedEventHandler authTokenValidateCompleted;
        
        /// <remarks/>
        public event assetCreateCompletedEventHandler assetCreateCompleted;
        
        /// <remarks/>
        public event assetCreateFromXMLCompletedEventHandler assetCreateFromXMLCompleted;
        
        /// <remarks/>
        public event assetReadCompletedEventHandler assetReadCompleted;
        
        /// <remarks/>
        public event assetReadXmlCompletedEventHandler assetReadXmlCompleted;
        
        /// <remarks/>
        public event assetReadCustomDataStringCompletedEventHandler assetReadCustomDataStringCompleted;
        
        /// <remarks/>
        public event assetReadCustomDataNodeCompletedEventHandler assetReadCustomDataNodeCompleted;
        
        /// <remarks/>
        public event assetReadArrayCompletedEventHandler assetReadArrayCompleted;
        
        /// <remarks/>
        public event assetReadArrayFromSummaryCompletedEventHandler assetReadArrayFromSummaryCompleted;
        
        /// <remarks/>
        public event assetUpdateCompletedEventHandler assetUpdateCompleted;
        
        /// <remarks/>
        public event assetAddCategorizationCompletedEventHandler assetAddCategorizationCompleted;
        
        /// <remarks/>
        public event assetGetUnacceptedFilesCompletedEventHandler assetGetUnacceptedFilesCompleted;
        
        /// <remarks/>
        public event assetAcceptFilesCompletedEventHandler assetAcceptFilesCompleted;
        
        /// <remarks/>
        public event assetDeleteFilesCompletedEventHandler assetDeleteFilesCompleted;
        
        /// <remarks/>
        public event assetUpdateCustomDataStringCompletedEventHandler assetUpdateCustomDataStringCompleted;
        
        /// <remarks/>
        public event assetUpdateCustomDataStringArrayCompletedEventHandler assetUpdateCustomDataStringArrayCompleted;
        
        /// <remarks/>
        public event assetUpdateCustomDataNodeCompletedEventHandler assetUpdateCustomDataNodeCompleted;
        
        /// <remarks/>
        public event assetUpdateCustomDataNodeFromStringArrayCompletedEventHandler assetUpdateCustomDataNodeFromStringArrayCompleted;
        
        /// <remarks/>
        public event assetUploadFilesCompletedEventHandler assetUploadFilesCompleted;
        
        /// <remarks/>
        public event assetAddRegistrarNoteCompletedEventHandler assetAddRegistrarNoteCompleted;
        
        /// <remarks/>
        public event assetReadRegistrarNotesCompletedEventHandler assetReadRegistrarNotesCompleted;
        
        /// <remarks/>
        public event assetRegisterCompletedEventHandler assetRegisterCompleted;
        
        /// <remarks/>
        public event assetUnRegisterCompletedEventHandler assetUnRegisterCompleted;
        
        /// <remarks/>
        public event assetAcceptCompletedEventHandler assetAcceptCompleted;
        
        /// <remarks/>
        public event assetUnAcceptCompletedEventHandler assetUnAcceptCompleted;
        
        /// <remarks/>
        public event assetSubmitCompletedEventHandler assetSubmitCompleted;
        
        /// <remarks/>
        public event assetUnSubmitCompletedEventHandler assetUnSubmitCompleted;
        
        /// <remarks/>
        public event assetActivateCompletedEventHandler assetActivateCompleted;
        
        /// <remarks/>
        public event assetDeactivateCompletedEventHandler assetDeactivateCompleted;
        
        /// <remarks/>
        public event assetRetireCompletedEventHandler assetRetireCompleted;
        
        /// <remarks/>
        public event assetDeleteCompletedEventHandler assetDeleteCompleted;
        
        /// <remarks/>
        public event assetTabsReadCompletedEventHandler assetTabsReadCompleted;
        
        /// <remarks/>
        public event assetTabReadCompletedEventHandler assetTabReadCompleted;
        
        /// <remarks/>
        public event assetQuerySummaryCompletedEventHandler assetQuerySummaryCompleted;
        
        /// <remarks/>
        public event assetQueryCompletedEventHandler assetQueryCompleted;
        
        /// <remarks/>
        public event assetQueryCountCompletedEventHandler assetQueryCountCompleted;
        
        /// <remarks/>
        public event assetReadAppliedToProjectsCompletedEventHandler assetReadAppliedToProjectsCompleted;
        
        /// <remarks/>
        public event assetReadAppliedPoliciesCompletedEventHandler assetReadAppliedPoliciesCompleted;
        
        /// <remarks/>
        public event assetUpdateAppliedPoliciesCompletedEventHandler assetUpdateAppliedPoliciesCompleted;
        
        /// <remarks/>
        public event assetEvaluateCompletedEventHandler assetEvaluateCompleted;
        
        /// <remarks/>
        public event assetEvaluateAgainstAllPoliciesCompletedEventHandler assetEvaluateAgainstAllPoliciesCompleted;
        
        /// <remarks/>
        public event assetEvaluateAgainstPolicyCompletedEventHandler assetEvaluateAgainstPolicyCompleted;
        
        /// <remarks/>
        public event assetApplyToProjectsCompletedEventHandler assetApplyToProjectsCompleted;
        
        /// <remarks/>
        public event assetRemoveAppliedToProjectsCompletedEventHandler assetRemoveAppliedToProjectsCompleted;
        
        /// <remarks/>
        public event repositoryFileTranslatorCompletedEventHandler repositoryFileTranslatorCompleted;
        
        /// <remarks/>
        public event categorizationTypeCreateCompletedEventHandler categorizationTypeCreateCompleted;
        
        /// <remarks/>
        public event categorizationTypeReadCompletedEventHandler categorizationTypeReadCompleted;
        
        /// <remarks/>
        public event categorizationTypeUpdateCompletedEventHandler categorizationTypeUpdateCompleted;
        
        /// <remarks/>
        public event categorizationTypeDeleteCompletedEventHandler categorizationTypeDeleteCompleted;
        
        /// <remarks/>
        public event categorizationTypeQueryCompletedEventHandler categorizationTypeQueryCompleted;
        
        /// <remarks/>
        public event categorizationCreateCompletedEventHandler categorizationCreateCompleted;
        
        /// <remarks/>
        public event categorizationChildCreateCompletedEventHandler categorizationChildCreateCompleted;
        
        /// <remarks/>
        public event categorizationReadCompletedEventHandler categorizationReadCompleted;
        
        /// <remarks/>
        public event categorizationReadByTypeCompletedEventHandler categorizationReadByTypeCompleted;
        
        /// <remarks/>
        public event categorizationChildReadCompletedEventHandler categorizationChildReadCompleted;
        
        /// <remarks/>
        public event categorizationUpdateCompletedEventHandler categorizationUpdateCompleted;
        
        /// <remarks/>
        public event categorizationUpdateArrayCompletedEventHandler categorizationUpdateArrayCompleted;
        
        /// <remarks/>
        public event categorizationDeactivateCompletedEventHandler categorizationDeactivateCompleted;
        
        /// <remarks/>
        public event categorizationReactivateCompletedEventHandler categorizationReactivateCompleted;
        
        /// <remarks/>
        public event contactCreateCompletedEventHandler contactCreateCompleted;
        
        /// <remarks/>
        public event contactReadCompletedEventHandler contactReadCompleted;
        
        /// <remarks/>
        public event contactUpdateCompletedEventHandler contactUpdateCompleted;
        
        /// <remarks/>
        public event contactDeleteCompletedEventHandler contactDeleteCompleted;
        
        /// <remarks/>
        public event contactQueryCompletedEventHandler contactQueryCompleted;
        
        /// <remarks/>
        public event extractionCreateCompletedEventHandler extractionCreateCompleted;
        
        /// <remarks/>
        public event extractionGetHiddenAssetUsersCompletedEventHandler extractionGetHiddenAssetUsersCompleted;
        
        /// <remarks/>
        public event extractionCreateForUserCompletedEventHandler extractionCreateForUserCompleted;
        
        /// <remarks/>
        public event extractionTentativelyAcceptCompletedEventHandler extractionTentativelyAcceptCompleted;
        
        /// <remarks/>
        public event extractionStillEvaluatingCompletedEventHandler extractionStillEvaluatingCompleted;
        
        /// <remarks/>
        public event extractionRejectCompletedEventHandler extractionRejectCompleted;
        
        /// <remarks/>
        public event extractionUpdateSurveyCompletedEventHandler extractionUpdateSurveyCompleted;
        
        /// <remarks/>
        public event extractionUpdateSurveyForUserCompletedEventHandler extractionUpdateSurveyForUserCompleted;
        
        /// <remarks/>
        public event extractionReadCompletedEventHandler extractionReadCompleted;
        
        /// <remarks/>
        public event extractionReadByProjectAndAssetCompletedEventHandler extractionReadByProjectAndAssetCompleted;
        
        /// <remarks/>
        public event extractionReadUserExtractionsCompletedEventHandler extractionReadUserExtractionsCompleted;
        
        /// <remarks/>
        public event extractionReadAssetExtractionsCompletedEventHandler extractionReadAssetExtractionsCompleted;
        
        /// <remarks/>
        public event extractionReadProjectExtractionsCompletedEventHandler extractionReadProjectExtractionsCompleted;
        
        /// <remarks/>
        public event extractionReadExtractionDownloadsCompletedEventHandler extractionReadExtractionDownloadsCompleted;
        
        /// <remarks/>
        public event extractionReadFileInfosCompletedEventHandler extractionReadFileInfosCompleted;
        
        /// <remarks/>
        public event extractionReadRelatedAssetsCompletedEventHandler extractionReadRelatedAssetsCompleted;
        
        /// <remarks/>
        public event extractionReadRejectionReasonsCompletedEventHandler extractionReadRejectionReasonsCompleted;
        
        /// <remarks/>
        public event extractionReadExtractionStatesCompletedEventHandler extractionReadExtractionStatesCompleted;
        
        /// <remarks/>
        public event extractionResetDatabaseCompletedEventHandler extractionResetDatabaseCompleted;
        
        /// <remarks/>
        public event projectAssetValueReadForUserCompletedEventHandler projectAssetValueReadForUserCompleted;
        
        /// <remarks/>
        public event projectAssetValueReadCompletedEventHandler projectAssetValueReadCompleted;
        
        /// <remarks/>
        public event projectAssetValueReadSummaryCompletedEventHandler projectAssetValueReadSummaryCompleted;
        
        /// <remarks/>
        public event projectAssetValueReadTypesCompletedEventHandler projectAssetValueReadTypesCompleted;
        
        /// <remarks/>
        public event projectAssetValueUpdateCompletedEventHandler projectAssetValueUpdateCompleted;
        
        /// <remarks/>
        public event projectCreateCompletedEventHandler projectCreateCompleted;
        
        /// <remarks/>
        public event projectReadCompletedEventHandler projectReadCompleted;
        
        /// <remarks/>
        public event projectReadArrayCompletedEventHandler projectReadArrayCompleted;
        
        /// <remarks/>
        public event projectReadArrayFromSummaryCompletedEventHandler projectReadArrayFromSummaryCompleted;
        
        /// <remarks/>
        public event projectUpdateCompletedEventHandler projectUpdateCompleted;
        
        /// <remarks/>
        public event projectReadMembersCompletedEventHandler projectReadMembersCompleted;
        
        /// <remarks/>
        public event projectReadMemberIDsCompletedEventHandler projectReadMemberIDsCompleted;
        
        /// <remarks/>
        public event projectReadLeadersCompletedEventHandler projectReadLeadersCompleted;
        
        /// <remarks/>
        public event projectReadLeaderIDsCompletedEventHandler projectReadLeaderIDsCompleted;
        
        /// <remarks/>
        public event projectReassignExtractionsCompletedEventHandler projectReassignExtractionsCompleted;
        
        /// <remarks/>
        public event projectReassignUsersCompletedEventHandler projectReassignUsersCompleted;
        
        /// <remarks/>
        public event projectReadUserTypesCompletedEventHandler projectReadUserTypesCompleted;
        
        /// <remarks/>
        public event projectReadParentProjectsCompletedEventHandler projectReadParentProjectsCompleted;
        
        /// <remarks/>
        public event projectReadParentProjectIDsCompletedEventHandler projectReadParentProjectIDsCompleted;
        
        /// <remarks/>
        public event projectReadChildProjectsCompletedEventHandler projectReadChildProjectsCompleted;
        
        /// <remarks/>
        public event projectReadChildProjectIDsCompletedEventHandler projectReadChildProjectIDsCompleted;
        
        /// <remarks/>
        public event projectReadExtractionsCompletedEventHandler projectReadExtractionsCompleted;
        
        /// <remarks/>
        public event projectReadExtractionAssetIDsCompletedEventHandler projectReadExtractionAssetIDsCompleted;
        
        /// <remarks/>
        public event projectReadAssetsCompletedEventHandler projectReadAssetsCompleted;
        
        /// <remarks/>
        public event projectReadPrescribedAssetsCompletedEventHandler projectReadPrescribedAssetsCompleted;
        
        /// <remarks/>
        public event projectReadAppliedComplianceTemplatesCompletedEventHandler projectReadAppliedComplianceTemplatesCompleted;
        
        /// <remarks/>
        public event projectReadProducedAssetsCompletedEventHandler projectReadProducedAssetsCompleted;
        
        /// <remarks/>
        public event projectReadProducedAssetIDsCompletedEventHandler projectReadProducedAssetIDsCompleted;
        
        /// <remarks/>
        public event projectQueryCompletedEventHandler projectQueryCompleted;
        
        /// <remarks/>
        public event projectQuerySummaryCompletedEventHandler projectQuerySummaryCompleted;
        
        /// <remarks/>
        public event projectValidateCompletedEventHandler projectValidateCompleted;
        
        /// <remarks/>
        public event departmentCreateCompletedEventHandler departmentCreateCompleted;
        
        /// <remarks/>
        public event departmentReadCompletedEventHandler departmentReadCompleted;
        
        /// <remarks/>
        public event departmentUpdateCompletedEventHandler departmentUpdateCompleted;
        
        /// <remarks/>
        public event departmentQueryCompletedEventHandler departmentQueryCompleted;
        
        /// <remarks/>
        public event acceptableValueListCreateCompletedEventHandler acceptableValueListCreateCompleted;
        
        /// <remarks/>
        public event acceptableValueListReadCompletedEventHandler acceptableValueListReadCompleted;
        
        /// <remarks/>
        public event acceptableValueListUpdateCompletedEventHandler acceptableValueListUpdateCompleted;
        
        /// <remarks/>
        public event acceptableValueListQueryCompletedEventHandler acceptableValueListQueryCompleted;
        
        /// <remarks/>
        public event assetTypeCreateCloneCompletedEventHandler assetTypeCreateCloneCompleted;
        
        /// <remarks/>
        public event assetTypeCreateCompletedEventHandler assetTypeCreateCompleted;
        
        /// <remarks/>
        public event assetTypeCreateComplianceTemplateCompletedEventHandler assetTypeCreateComplianceTemplateCompleted;
        
        /// <remarks/>
        public event assetTypeReadCompletedEventHandler assetTypeReadCompleted;
        
        /// <remarks/>
        public event assetTypeGetEntityArtifactRulesCompletedEventHandler assetTypeGetEntityArtifactRulesCompleted;
        
        /// <remarks/>
        public event assetTypeUpdateCompletedEventHandler assetTypeUpdateCompleted;
        
        /// <remarks/>
        public event assetTypeDeleteCompletedEventHandler assetTypeDeleteCompleted;
        
        /// <remarks/>
        public event assetTypeQueryCompletedEventHandler assetTypeQueryCompleted;
        
        /// <remarks/>
        public event assetTypeSchemaReadCompletedEventHandler assetTypeSchemaReadCompleted;
        
        /// <remarks/>
        public event configGetWebResourcePathCompletedEventHandler configGetWebResourcePathCompleted;
        
        /// <remarks/>
        public event systemSettingsAddBundleCompletedEventHandler systemSettingsAddBundleCompleted;
        
        /// <remarks/>
        public event systemSettingsQueryCompletedEventHandler systemSettingsQueryCompleted;
        
        /// <remarks/>
        public event userCreateCompletedEventHandler userCreateCompleted;
        
        /// <remarks/>
        public event userReadCompletedEventHandler userReadCompleted;
        
        /// <remarks/>
        public event userReadByAuthTokenCompletedEventHandler userReadByAuthTokenCompleted;
        
        /// <remarks/>
        public event userUpdateCompletedEventHandler userUpdateCompleted;
        
        /// <remarks/>
        public event userActivateCompletedEventHandler userActivateCompleted;
        
        /// <remarks/>
        public event userDeactivateCompletedEventHandler userDeactivateCompleted;
        
        /// <remarks/>
        public event userLockoutCompletedEventHandler userLockoutCompleted;
        
        /// <remarks/>
        public event userUnapproveCompletedEventHandler userUnapproveCompleted;
        
        /// <remarks/>
        public event userQueryCompletedEventHandler userQueryCompleted;
        
        /// <remarks/>
        public event userAddRoleCompletedEventHandler userAddRoleCompleted;
        
        /// <remarks/>
        public event userRemoveRoleCompletedEventHandler userRemoveRoleCompleted;
        
        /// <remarks/>
        public event unitTestUserResetDatabaseCompletedEventHandler unitTestUserResetDatabaseCompleted;
        
        /// <remarks/>
        public event customAccessSettingNamesGetCompletedEventHandler customAccessSettingNamesGetCompleted;
        
        /// <remarks/>
        public event customAccessSettingDefaultNamesGetCompletedEventHandler customAccessSettingDefaultNamesGetCompleted;
        
        /// <remarks/>
        public event customAccessSettingTypesGetCompletedEventHandler customAccessSettingTypesGetCompleted;
        
        /// <remarks/>
        public event rbacHasPermissionCompletedEventHandler rbacHasPermissionCompleted;
        
        /// <remarks/>
        public event roleCreateCompletedEventHandler roleCreateCompleted;
        
        /// <remarks/>
        public event roleReadCompletedEventHandler roleReadCompleted;
        
        /// <remarks/>
        public event roleUpdateCompletedEventHandler roleUpdateCompleted;
        
        /// <remarks/>
        public event roleDeleteCompletedEventHandler roleDeleteCompleted;
        
        /// <remarks/>
        public event roleQueryCompletedEventHandler roleQueryCompleted;
        
        /// <remarks/>
        public event relationshipTypeCreateCompletedEventHandler relationshipTypeCreateCompleted;
        
        /// <remarks/>
        public event relationshipTypeReadCompletedEventHandler relationshipTypeReadCompleted;
        
        /// <remarks/>
        public event relationshipTypeUpdateCompletedEventHandler relationshipTypeUpdateCompleted;
        
        /// <remarks/>
        public event relationshipTypeDeleteCompletedEventHandler relationshipTypeDeleteCompleted;
        
        /// <remarks/>
        public event relationshipTypeQueryCompletedEventHandler relationshipTypeQueryCompleted;
        
        /// <remarks/>
        public event surveyTakenReadCompletedEventHandler surveyTakenReadCompleted;
        
        /// <remarks/>
        public event surveyReadQuestionsCompletedEventHandler surveyReadQuestionsCompleted;
        
        /// <remarks/>
        public event surveyTakenUpdateCompletedEventHandler surveyTakenUpdateCompleted;
        
        /// <remarks/>
        public event vendorCreateCompletedEventHandler vendorCreateCompleted;
        
        /// <remarks/>
        public event vendorReadCompletedEventHandler vendorReadCompleted;
        
        /// <remarks/>
        public event vendorUpdateCompletedEventHandler vendorUpdateCompleted;
        
        /// <remarks/>
        public event vendorDeleteCompletedEventHandler vendorDeleteCompleted;
        
        /// <remarks/>
        public event vendorQueryCompletedEventHandler vendorQueryCompleted;
        
        /// <remarks/>
        public event exportListJobsCompletedEventHandler exportListJobsCompleted;
        
        /// <remarks/>
        public event exportExecuteCompletedEventHandler exportExecuteCompleted;
        
        /// <remarks/>
        public event exportGetAuditB64CompletedEventHandler exportGetAuditB64Completed;
        
        /// <remarks/>
        public event exportGetAuditDIMECompletedEventHandler exportGetAuditDIMECompleted;
        
        /// <remarks/>
        public event exportGetAuditSwACompletedEventHandler exportGetAuditSwACompleted;
        
        /// <remarks/>
        public event exportGetLatestAuditMsgCompletedEventHandler exportGetLatestAuditMsgCompleted;
        
        /// <remarks/>
        public event importGetAuditB64CompletedEventHandler importGetAuditB64Completed;
        
        /// <remarks/>
        public event importGetAuditDIMECompletedEventHandler importGetAuditDIMECompleted;
        
        /// <remarks/>
        public event importGetAuditSwACompletedEventHandler importGetAuditSwACompleted;
        
        /// <remarks/>
        public event importGetLatestAuditMsgCompletedEventHandler importGetLatestAuditMsgCompleted;
        
        /// <remarks/>
        public event exportStatusCompletedEventHandler exportStatusCompleted;
        
        /// <remarks/>
        public event exportKillCompletedEventHandler exportKillCompleted;
        
        /// <remarks/>
        public event exportGetResultsB64CompletedEventHandler exportGetResultsB64Completed;
        
        /// <remarks/>
        public event exportGetResultsDIMECompletedEventHandler exportGetResultsDIMECompleted;
        
        /// <remarks/>
        public event exportGetResultsSwACompletedEventHandler exportGetResultsSwACompleted;
        
        /// <remarks/>
        public event exportCleanupCompletedEventHandler exportCleanupCompleted;
        
        /// <remarks/>
        public event importListJobsCompletedEventHandler importListJobsCompleted;
        
        /// <remarks/>
        public event importExecuteCompletedEventHandler importExecuteCompleted;
        
        /// <remarks/>
        public event importStatusCompletedEventHandler importStatusCompleted;
        
        /// <remarks/>
        public event importKillCompletedEventHandler importKillCompleted;
        
        /// <remarks/>
        public event importCheckPermissionCompletedEventHandler importCheckPermissionCompleted;
        
        /// <remarks/>
        public event exportCheckPermissionCompletedEventHandler exportCheckPermissionCompleted;
        
        /// <remarks/>
        public event importCleanupCompletedEventHandler importCleanupCompleted;
        
        /// <remarks/>
        public event testClearCacheCompletedEventHandler testClearCacheCompleted;
        
        /// <remarks/>
        public event testUpdateAssetDateCompletedEventHandler testUpdateAssetDateCompleted;
        
        /// <remarks/>
        public event testUpdateTabStatusCompletedEventHandler testUpdateTabStatusCompleted;
        
        /// <remarks/>
        public event testCreateCustomAccessSettingCompletedEventHandler testCreateCustomAccessSettingCompleted;
        
        /// <remarks/>
        public event getAssetMaxIDCompletedEventHandler getAssetMaxIDCompleted;
        
        /// <remarks/>
        public event testThrowOpenAPIExceptionCompletedEventHandler testThrowOpenAPIExceptionCompleted;
        
        /// <remarks/>
        public event testSetSettingCompletedEventHandler testSetSettingCompleted;
        
        /// <remarks/>
        public event testGetSettingValueCompletedEventHandler testGetSettingValueCompleted;
        
        /// <remarks/>
        public event testSetPropertyCompletedEventHandler testSetPropertyCompleted;
        
        /// <remarks/>
        public event testDeleteAssetCompletedEventHandler testDeleteAssetCompleted;
        
        /// <remarks/>
        public event testDeleteUserCompletedEventHandler testDeleteUserCompleted;
        
        /// <remarks/>
        public event testDeleteProjectCompletedEventHandler testDeleteProjectCompleted;
        
        /// <remarks/>
        public event testDeleteAssetTypeCompletedEventHandler testDeleteAssetTypeCompleted;
        
        /// <remarks/>
        public event testRestartJobMonitorCompletedEventHandler testRestartJobMonitorCompleted;
        
        /// <remarks/>
        public event testThrowImportExportExceptionCompletedEventHandler testThrowImportExportExceptionCompleted;
        
        /// <remarks/>
        public event testGetLicenseStateCompletedEventHandler testGetLicenseStateCompleted;
        
        /// <remarks/>
        public event testDetermineDBPlatformCompletedEventHandler testDetermineDBPlatformCompleted;
        
        /// <remarks/>
        public event testSetLicenseStateCompletedEventHandler testSetLicenseStateCompleted;
        
        /// <remarks/>
        public event testAcceptableValueListDeleteCompletedEventHandler testAcceptableValueListDeleteCompleted;
        
        /// <remarks/>
        public event testLogMessageCompletedEventHandler testLogMessageCompleted;
        
        /// <remarks/>
        public event testExtractionResetDatabaseForProjectCompletedEventHandler testExtractionResetDatabaseForProjectCompleted;
        
        /// <remarks/>
        public event testUpdateViewAssetSettingCompletedEventHandler testUpdateViewAssetSettingCompleted;
        
        /// <remarks/>
        public event testCleanupNonRunningJobsCompletedEventHandler testCleanupNonRunningJobsCompleted;
        
        /// <remarks/>
        public event testUpdateUserRoleCompletedEventHandler testUpdateUserRoleCompleted;
        
        /// <remarks/>
        public event testUpdateProjectAdminRoleCompletedEventHandler testUpdateProjectAdminRoleCompleted;
        
        /// <remarks/>
        public event testClearDatabaseCompletedEventHandler testClearDatabaseCompleted;
        
        /// <remarks/>
        public event sfidAddToAssetCompletedEventHandler sfidAddToAssetCompleted;
        
        /// <remarks/>
        public event sfidRemoveAllFromAssetCompletedEventHandler sfidRemoveAllFromAssetCompleted;
        
        /// <remarks/>
        public event sfidUpdateAssetCompletedEventHandler sfidUpdateAssetCompleted;
        
        /// <remarks/>
        public event sfidReadValuesByProjectCompletedEventHandler sfidReadValuesByProjectCompleted;
        
        /// <remarks/>
        public event sfidQueryCompletedEventHandler sfidQueryCompleted;
        
        /// <remarks/>
        public event sfidCandidateQueryCompletedEventHandler sfidCandidateQueryCompleted;
        
        /// <remarks/>
        public event sfidGenerateCompletedEventHandler sfidGenerateCompleted;
        
        /// <remarks/>
        public event sfidCandidateSubmitCompletedEventHandler sfidCandidateSubmitCompleted;
        
        /// <remarks/>
        public event sfidReadValuesForAssetCompletedEventHandler sfidReadValuesForAssetCompleted;
        
        /// <remarks/>
        public event sfidRegisterExtractionBySFIDValueCompletedEventHandler sfidRegisterExtractionBySFIDValueCompleted;
        
        /// <remarks/>
        public event sfidRegisterExtractionBySFIDValuesCompletedEventHandler sfidRegisterExtractionBySFIDValuesCompleted;
        
        /// <remarks/>
        public event sfidRegisterExtractionBySFIDCandidatesCompletedEventHandler sfidRegisterExtractionBySFIDCandidatesCompleted;
        
        /// <remarks/>
        public event sfidRegisterExtractionBySFIDCandidatesLiteCompletedEventHandler sfidRegisterExtractionBySFIDCandidatesLiteCompleted;
        
        /// <remarks/>
        public event sfidRegisterExtractionsCompletedEventHandler sfidRegisterExtractionsCompleted;
        
        /// <remarks/>
        public event sfidRegisterExtractionBySFIDValuesResultsCompletedEventHandler sfidRegisterExtractionBySFIDValuesResultsCompleted;
        
        /// <remarks/>
        public event reuseDTOReadCompletedEventHandler reuseDTOReadCompleted;
        
        /// <remarks/>
        public event assetMetadataCreateDIMECompletedEventHandler assetMetadataCreateDIMECompleted;
        
        /// <remarks/>
        public event assetMetadataCreateSwACompletedEventHandler assetMetadataCreateSwACompleted;
        
        /// <remarks/>
        public event assetMetadataReadCompletedEventHandler assetMetadataReadCompleted;
        
        /// <remarks/>
        public event assetMetadataReadDIMECompletedEventHandler assetMetadataReadDIMECompleted;
        
        /// <remarks/>
        public event assetMetadataReadSwACompletedEventHandler assetMetadataReadSwACompleted;
        
        /// <remarks/>
        public event assetMetadataUpdateCompletedEventHandler assetMetadataUpdateCompleted;
        
        /// <remarks/>
        public event assetMetadataUpdateDIMECompletedEventHandler assetMetadataUpdateDIMECompleted;
        
        /// <remarks/>
        public event assetMetadataUpdateSwACompletedEventHandler assetMetadataUpdateSwACompleted;
        
        /// <remarks/>
        public event assetMetadataEntryDeleteCompletedEventHandler assetMetadataEntryDeleteCompleted;
        
        /// <remarks/>
        public event assetMetadataAcceptCompletedEventHandler assetMetadataAcceptCompleted;
        
        /// <remarks/>
        public event metadataEntryTypeCreateCompletedEventHandler metadataEntryTypeCreateCompleted;
        
        /// <remarks/>
        public event metadataEntryTypeReadCompletedEventHandler metadataEntryTypeReadCompleted;
        
        /// <remarks/>
        public event metadataEntryTypeUpdateCompletedEventHandler metadataEntryTypeUpdateCompleted;
        
        /// <remarks/>
        public event metadataEntryTypeDeleteCompletedEventHandler metadataEntryTypeDeleteCompleted;
        
        /// <remarks/>
        public event metadataEntryTypeQueryCompletedEventHandler metadataEntryTypeQueryCompleted;
        
        /// <remarks/>
        public event metadataEntryCreateDIMECompletedEventHandler metadataEntryCreateDIMECompleted;
        
        /// <remarks/>
        public event metadataEntryCreateSwACompletedEventHandler metadataEntryCreateSwACompleted;
        
        /// <remarks/>
        public event metadataEntryReadDIMECompletedEventHandler metadataEntryReadDIMECompleted;
        
        /// <remarks/>
        public event metadataEntryReadDIME1CompletedEventHandler metadataEntryReadDIME1Completed;
        
        /// <remarks/>
        public event metadataEntryReadSwACompletedEventHandler metadataEntryReadSwACompleted;
        
        /// <remarks/>
        public event metadataEntryReadSwA1CompletedEventHandler metadataEntryReadSwA1Completed;
        
        /// <remarks/>
        public event metadataEntryUpdateDIMECompletedEventHandler metadataEntryUpdateDIMECompleted;
        
        /// <remarks/>
        public event metadataEntryUpdateSwACompletedEventHandler metadataEntryUpdateSwACompleted;
        
        /// <remarks/>
        public event metadataEntryDeleteCompletedEventHandler metadataEntryDeleteCompleted;
        
        /// <remarks/>
        public event metadataEntryQueryCompletedEventHandler metadataEntryQueryCompleted;
        
        /// <remarks/>
        public event testCasDeleteCompletedEventHandler testCasDeleteCompleted;
        
        /// <remarks/>
        public event testCasCreateCompletedEventHandler testCasCreateCompleted;
        
        /// <remarks/>
        public event testRoleContextAddRoleCompletedEventHandler testRoleContextAddRoleCompleted;
        
        /// <remarks/>
        public event testRoleContextSetPermissionCompletedEventHandler testRoleContextSetPermissionCompleted;
        
        /// <remarks/>
        public event testRoleContextSetPermissionsCompletedEventHandler testRoleContextSetPermissionsCompleted;
        
        /// <remarks/>
        public event testRoleContextApplySecuritySettingToExistingCompletedEventHandler testRoleContextApplySecuritySettingToExistingCompleted;
        
        /// <remarks/>
        public event testRoleContextGetAllRolesCompletedEventHandler testRoleContextGetAllRolesCompleted;
        
        /// <remarks/>
        public event testRoleContextGetPermissionFromRoleCompletedEventHandler testRoleContextGetPermissionFromRoleCompleted;
        
        /// <remarks/>
        public event testRoleContextClearRolesCompletedEventHandler testRoleContextClearRolesCompleted;
        
        /// <remarks/>
        public event testRoleContextRemoveRoleCompletedEventHandler testRoleContextRemoveRoleCompleted;
        
        /// <remarks/>
        public event testDoSQLCompletedEventHandler testDoSQLCompleted;
        
        /// <remarks/>
        public event testHasSufficientAssetsCompletedEventHandler testHasSufficientAssetsCompleted;
        
        /// <remarks/>
        public event testDoSimpleQueryCompletedEventHandler testDoSimpleQueryCompleted;
        
        /// <remarks/>
        public event subscriptionCreateCompletedEventHandler subscriptionCreateCompleted;
        
        /// <remarks/>
        public event subscriptionDeleteCompletedEventHandler subscriptionDeleteCompleted;
        
        /// <remarks/>
        public event subscriptionReadSubscribedAssetsCompletedEventHandler subscriptionReadSubscribedAssetsCompleted;
        
        /// <remarks/>
        public event subscriptionReadUsersSubscribedToAssetCompletedEventHandler subscriptionReadUsersSubscribedToAssetCompleted;
        
        /// <remarks/>
        public event retrieveRootArtifactsCompletedEventHandler retrieveRootArtifactsCompleted;
        
        /// <remarks/>
        public event retrieveRootArtifactsWithCustomRelationshipCompletedEventHandler retrieveRootArtifactsWithCustomRelationshipCompleted;
        
        /// <remarks/>
        public event retrieveLatestRootArtifactCompletedEventHandler retrieveLatestRootArtifactCompleted;
        
        /// <remarks/>
        public event retrieveArtifactCollectionAsDIMECompletedEventHandler retrieveArtifactCollectionAsDIMECompleted;
        
        /// <remarks/>
        public event retrieveAndRecordUsageOfArtifactCollectionAsDIMECompletedEventHandler retrieveAndRecordUsageOfArtifactCollectionAsDIMECompleted;
        
        /// <remarks/>
        public event retrieveAndRecordUsageOfArtifactCollectionAsDIME1CompletedEventHandler retrieveAndRecordUsageOfArtifactCollectionAsDIME1Completed;
        
        /// <remarks/>
        public event retrieveArtifactCollectionAsSwaCompletedEventHandler retrieveArtifactCollectionAsSwaCompleted;
        
        /// <remarks/>
        public event retrieveAndRecordUsageOfArtifactCollectionAsSwaCompletedEventHandler retrieveAndRecordUsageOfArtifactCollectionAsSwaCompleted;
        
        /// <remarks/>
        public event retrieveAndRecordUsageOfArtifactCollectionAsSwa1CompletedEventHandler retrieveAndRecordUsageOfArtifactCollectionAsSwa1Completed;
        
        /// <remarks/>
        public event getLatestArtifactsCompletedEventHandler getLatestArtifactsCompleted;
        
        /// <remarks/>
        public event getLatestArtifactsCustomRelationshipTypesCompletedEventHandler getLatestArtifactsCustomRelationshipTypesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetReadTabMetadataReturn")]
        public AssetMetadataElement[] assetReadTabMetadata(AuthToken pAuthTokenBean, long pAssetId, string pTabName) {
            object[] results = this.Invoke("assetReadTabMetadata", new object[] {
                        pAuthTokenBean,
                        pAssetId,
                        pTabName});
            return ((AssetMetadataElement[])(results[0]));
        }
        
        /// <remarks/>
        public void assetReadTabMetadataAsync(AuthToken pAuthTokenBean, long pAssetId, string pTabName) {
            this.assetReadTabMetadataAsync(pAuthTokenBean, pAssetId, pTabName, null);
        }
        
        /// <remarks/>
        public void assetReadTabMetadataAsync(AuthToken pAuthTokenBean, long pAssetId, string pTabName, object userState) {
            if ((this.assetReadTabMetadataOperationCompleted == null)) {
                this.assetReadTabMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetReadTabMetadataOperationCompleted);
            }
            this.InvokeAsync("assetReadTabMetadata", new object[] {
                        pAuthTokenBean,
                        pAssetId,
                        pTabName}, this.assetReadTabMetadataOperationCompleted, userState);
        }
        
        private void OnassetReadTabMetadataOperationCompleted(object arg) {
            if ((this.assetReadTabMetadataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetReadTabMetadataCompleted(this, new assetReadTabMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTypeTabsReadReturn")]
        public TabTypeBean[] assetTypeTabsRead(AuthToken pAuthTokenBean, long pAssetTypeId) {
            object[] results = this.Invoke("assetTypeTabsRead", new object[] {
                        pAuthTokenBean,
                        pAssetTypeId});
            return ((TabTypeBean[])(results[0]));
        }
        
        /// <remarks/>
        public void assetTypeTabsReadAsync(AuthToken pAuthTokenBean, long pAssetTypeId) {
            this.assetTypeTabsReadAsync(pAuthTokenBean, pAssetTypeId, null);
        }
        
        /// <remarks/>
        public void assetTypeTabsReadAsync(AuthToken pAuthTokenBean, long pAssetTypeId, object userState) {
            if ((this.assetTypeTabsReadOperationCompleted == null)) {
                this.assetTypeTabsReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTypeTabsReadOperationCompleted);
            }
            this.InvokeAsync("assetTypeTabsRead", new object[] {
                        pAuthTokenBean,
                        pAssetTypeId}, this.assetTypeTabsReadOperationCompleted, userState);
        }
        
        private void OnassetTypeTabsReadOperationCompleted(object arg) {
            if ((this.assetTypeTabsReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTypeTabsReadCompleted(this, new assetTypeTabsReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetTabApprove(AuthToken pAuthTokenBean, long pAssetId, long pTabId) {
            this.Invoke("assetTabApprove", new object[] {
                        pAuthTokenBean,
                        pAssetId,
                        pTabId});
        }
        
        /// <remarks/>
        public void assetTabApproveAsync(AuthToken pAuthTokenBean, long pAssetId, long pTabId) {
            this.assetTabApproveAsync(pAuthTokenBean, pAssetId, pTabId, null);
        }
        
        /// <remarks/>
        public void assetTabApproveAsync(AuthToken pAuthTokenBean, long pAssetId, long pTabId, object userState) {
            if ((this.assetTabApproveOperationCompleted == null)) {
                this.assetTabApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTabApproveOperationCompleted);
            }
            this.InvokeAsync("assetTabApprove", new object[] {
                        pAuthTokenBean,
                        pAssetId,
                        pTabId}, this.assetTabApproveOperationCompleted, userState);
        }
        
        private void OnassetTabApproveOperationCompleted(object arg) {
            if ((this.assetTabApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTabApproveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetTabUnapprove(AuthToken pAuthTokeBean, long pAssetId, long pTabId) {
            this.Invoke("assetTabUnapprove", new object[] {
                        pAuthTokeBean,
                        pAssetId,
                        pTabId});
        }
        
        /// <remarks/>
        public void assetTabUnapproveAsync(AuthToken pAuthTokeBean, long pAssetId, long pTabId) {
            this.assetTabUnapproveAsync(pAuthTokeBean, pAssetId, pTabId, null);
        }
        
        /// <remarks/>
        public void assetTabUnapproveAsync(AuthToken pAuthTokeBean, long pAssetId, long pTabId, object userState) {
            if ((this.assetTabUnapproveOperationCompleted == null)) {
                this.assetTabUnapproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTabUnapproveOperationCompleted);
            }
            this.InvokeAsync("assetTabUnapprove", new object[] {
                        pAuthTokeBean,
                        pAssetId,
                        pTabId}, this.assetTabUnapproveOperationCompleted, userState);
        }
        
        private void OnassetTabUnapproveOperationCompleted(object arg) {
            if ((this.assetTabUnapproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTabUnapproveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void notificationCreate(AuthToken pAuthTokenBean, string pTemplateType, string[] pRecipients, NameValue[] pSubstitutions) {
            this.Invoke("notificationCreate", new object[] {
                        pAuthTokenBean,
                        pTemplateType,
                        pRecipients,
                        pSubstitutions});
        }
        
        /// <remarks/>
        public void notificationCreateAsync(AuthToken pAuthTokenBean, string pTemplateType, string[] pRecipients, NameValue[] pSubstitutions) {
            this.notificationCreateAsync(pAuthTokenBean, pTemplateType, pRecipients, pSubstitutions, null);
        }
        
        /// <remarks/>
        public void notificationCreateAsync(AuthToken pAuthTokenBean, string pTemplateType, string[] pRecipients, NameValue[] pSubstitutions, object userState) {
            if ((this.notificationCreateOperationCompleted == null)) {
                this.notificationCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnotificationCreateOperationCompleted);
            }
            this.InvokeAsync("notificationCreate", new object[] {
                        pAuthTokenBean,
                        pTemplateType,
                        pRecipients,
                        pSubstitutions}, this.notificationCreateOperationCompleted, userState);
        }
        
        private void OnnotificationCreateOperationCompleted(object arg) {
            if ((this.notificationCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.notificationCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("notificationSubstitutionsReadReturn")]
        public string[] notificationSubstitutionsRead(AuthToken pAuthTokenBean, string pTemplateType) {
            object[] results = this.Invoke("notificationSubstitutionsRead", new object[] {
                        pAuthTokenBean,
                        pTemplateType});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void notificationSubstitutionsReadAsync(AuthToken pAuthTokenBean, string pTemplateType) {
            this.notificationSubstitutionsReadAsync(pAuthTokenBean, pTemplateType, null);
        }
        
        /// <remarks/>
        public void notificationSubstitutionsReadAsync(AuthToken pAuthTokenBean, string pTemplateType, object userState) {
            if ((this.notificationSubstitutionsReadOperationCompleted == null)) {
                this.notificationSubstitutionsReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnotificationSubstitutionsReadOperationCompleted);
            }
            this.InvokeAsync("notificationSubstitutionsRead", new object[] {
                        pAuthTokenBean,
                        pTemplateType}, this.notificationSubstitutionsReadOperationCompleted, userState);
        }
        
        private void OnnotificationSubstitutionsReadOperationCompleted(object arg) {
            if ((this.notificationSubstitutionsReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.notificationSubstitutionsReadCompleted(this, new notificationSubstitutionsReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("artifactStoreQueryReturn")]
        public ArtifactStoreBean[] artifactStoreQuery(AuthToken pAuthTokenBean, ArtifactStoreCriteria pArtifactStoreCritera, bool pCreateIfMissing) {
            object[] results = this.Invoke("artifactStoreQuery", new object[] {
                        pAuthTokenBean,
                        pArtifactStoreCritera,
                        pCreateIfMissing});
            return ((ArtifactStoreBean[])(results[0]));
        }
        
        /// <remarks/>
        public void artifactStoreQueryAsync(AuthToken pAuthTokenBean, ArtifactStoreCriteria pArtifactStoreCritera, bool pCreateIfMissing) {
            this.artifactStoreQueryAsync(pAuthTokenBean, pArtifactStoreCritera, pCreateIfMissing, null);
        }
        
        /// <remarks/>
        public void artifactStoreQueryAsync(AuthToken pAuthTokenBean, ArtifactStoreCriteria pArtifactStoreCritera, bool pCreateIfMissing, object userState) {
            if ((this.artifactStoreQueryOperationCompleted == null)) {
                this.artifactStoreQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnartifactStoreQueryOperationCompleted);
            }
            this.InvokeAsync("artifactStoreQuery", new object[] {
                        pAuthTokenBean,
                        pArtifactStoreCritera,
                        pCreateIfMissing}, this.artifactStoreQueryOperationCompleted, userState);
        }
        
        private void OnartifactStoreQueryOperationCompleted(object arg) {
            if ((this.artifactStoreQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.artifactStoreQueryCompleted(this, new artifactStoreQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("authTokenCreateReturn")]
        public AuthToken authTokenCreate(string userName, string credential) {
            object[] results = this.Invoke("authTokenCreate", new object[] {
                        userName,
                        credential});
            return ((AuthToken)(results[0]));
        }
        
        /// <remarks/>
        public void authTokenCreateAsync(string userName, string credential) {
            this.authTokenCreateAsync(userName, credential, null);
        }
        
        /// <remarks/>
        public void authTokenCreateAsync(string userName, string credential, object userState) {
            if ((this.authTokenCreateOperationCompleted == null)) {
                this.authTokenCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthTokenCreateOperationCompleted);
            }
            this.InvokeAsync("authTokenCreate", new object[] {
                        userName,
                        credential}, this.authTokenCreateOperationCompleted, userState);
        }
        
        private void OnauthTokenCreateOperationCompleted(object arg) {
            if ((this.authTokenCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authTokenCreateCompleted(this, new authTokenCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("authTokenCreateWithLicenseReturn")]
        public AuthToken authTokenCreateWithLicense(string userName, string credential, string license) {
            object[] results = this.Invoke("authTokenCreateWithLicense", new object[] {
                        userName,
                        credential,
                        license});
            return ((AuthToken)(results[0]));
        }
        
        /// <remarks/>
        public void authTokenCreateWithLicenseAsync(string userName, string credential, string license) {
            this.authTokenCreateWithLicenseAsync(userName, credential, license, null);
        }
        
        /// <remarks/>
        public void authTokenCreateWithLicenseAsync(string userName, string credential, string license, object userState) {
            if ((this.authTokenCreateWithLicenseOperationCompleted == null)) {
                this.authTokenCreateWithLicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthTokenCreateWithLicenseOperationCompleted);
            }
            this.InvokeAsync("authTokenCreateWithLicense", new object[] {
                        userName,
                        credential,
                        license}, this.authTokenCreateWithLicenseOperationCompleted, userState);
        }
        
        private void OnauthTokenCreateWithLicenseOperationCompleted(object arg) {
            if ((this.authTokenCreateWithLicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authTokenCreateWithLicenseCompleted(this, new authTokenCreateWithLicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void authTokenDelete(AuthToken authToken) {
            this.Invoke("authTokenDelete", new object[] {
                        authToken});
        }
        
        /// <remarks/>
        public void authTokenDeleteAsync(AuthToken authToken) {
            this.authTokenDeleteAsync(authToken, null);
        }
        
        /// <remarks/>
        public void authTokenDeleteAsync(AuthToken authToken, object userState) {
            if ((this.authTokenDeleteOperationCompleted == null)) {
                this.authTokenDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthTokenDeleteOperationCompleted);
            }
            this.InvokeAsync("authTokenDelete", new object[] {
                        authToken}, this.authTokenDeleteOperationCompleted, userState);
        }
        
        private void OnauthTokenDeleteOperationCompleted(object arg) {
            if ((this.authTokenDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authTokenDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void authTokenValidate(AuthToken authToken) {
            this.Invoke("authTokenValidate", new object[] {
                        authToken});
        }
        
        /// <remarks/>
        public void authTokenValidateAsync(AuthToken authToken) {
            this.authTokenValidateAsync(authToken, null);
        }
        
        /// <remarks/>
        public void authTokenValidateAsync(AuthToken authToken, object userState) {
            if ((this.authTokenValidateOperationCompleted == null)) {
                this.authTokenValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthTokenValidateOperationCompleted);
            }
            this.InvokeAsync("authTokenValidate", new object[] {
                        authToken}, this.authTokenValidateOperationCompleted, userState);
        }
        
        private void OnauthTokenValidateOperationCompleted(object arg) {
            if ((this.authTokenValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authTokenValidateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetCreateReturn")]
        public Asset assetCreate(AuthToken pAuthToken, string pName, string pVersion, long pAssetTypeID) {
            object[] results = this.Invoke("assetCreate", new object[] {
                        pAuthToken,
                        pName,
                        pVersion,
                        pAssetTypeID});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void assetCreateAsync(AuthToken pAuthToken, string pName, string pVersion, long pAssetTypeID) {
            this.assetCreateAsync(pAuthToken, pName, pVersion, pAssetTypeID, null);
        }
        
        /// <remarks/>
        public void assetCreateAsync(AuthToken pAuthToken, string pName, string pVersion, long pAssetTypeID, object userState) {
            if ((this.assetCreateOperationCompleted == null)) {
                this.assetCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetCreateOperationCompleted);
            }
            this.InvokeAsync("assetCreate", new object[] {
                        pAuthToken,
                        pName,
                        pVersion,
                        pAssetTypeID}, this.assetCreateOperationCompleted, userState);
        }
        
        private void OnassetCreateOperationCompleted(object arg) {
            if ((this.assetCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetCreateCompleted(this, new assetCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetCreateFromXMLReturn")]
        public Asset assetCreateFromXML(AuthToken pAuthToken, string assetXML) {
            object[] results = this.Invoke("assetCreateFromXML", new object[] {
                        pAuthToken,
                        assetXML});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void assetCreateFromXMLAsync(AuthToken pAuthToken, string assetXML) {
            this.assetCreateFromXMLAsync(pAuthToken, assetXML, null);
        }
        
        /// <remarks/>
        public void assetCreateFromXMLAsync(AuthToken pAuthToken, string assetXML, object userState) {
            if ((this.assetCreateFromXMLOperationCompleted == null)) {
                this.assetCreateFromXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetCreateFromXMLOperationCompleted);
            }
            this.InvokeAsync("assetCreateFromXML", new object[] {
                        pAuthToken,
                        assetXML}, this.assetCreateFromXMLOperationCompleted, userState);
        }
        
        private void OnassetCreateFromXMLOperationCompleted(object arg) {
            if ((this.assetCreateFromXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetCreateFromXMLCompleted(this, new assetCreateFromXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetReadReturn")]
        public Asset assetRead(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("assetRead", new object[] {
                        pAuthToken,
                        pId});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void assetReadAsync(AuthToken pAuthToken, long pId) {
            this.assetReadAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void assetReadAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.assetReadOperationCompleted == null)) {
                this.assetReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetReadOperationCompleted);
            }
            this.InvokeAsync("assetRead", new object[] {
                        pAuthToken,
                        pId}, this.assetReadOperationCompleted, userState);
        }
        
        private void OnassetReadOperationCompleted(object arg) {
            if ((this.assetReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetReadCompleted(this, new assetReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetReadXmlReturn")]
        public string assetReadXml(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("assetReadXml", new object[] {
                        pAuthToken,
                        pId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void assetReadXmlAsync(AuthToken pAuthToken, long pId) {
            this.assetReadXmlAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void assetReadXmlAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.assetReadXmlOperationCompleted == null)) {
                this.assetReadXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetReadXmlOperationCompleted);
            }
            this.InvokeAsync("assetReadXml", new object[] {
                        pAuthToken,
                        pId}, this.assetReadXmlOperationCompleted, userState);
        }
        
        private void OnassetReadXmlOperationCompleted(object arg) {
            if ((this.assetReadXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetReadXmlCompleted(this, new assetReadXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetReadCustomDataStringReturn")]
        public string assetReadCustomDataString(AuthToken pAuthToken, long pId, string pPath) {
            object[] results = this.Invoke("assetReadCustomDataString", new object[] {
                        pAuthToken,
                        pId,
                        pPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void assetReadCustomDataStringAsync(AuthToken pAuthToken, long pId, string pPath) {
            this.assetReadCustomDataStringAsync(pAuthToken, pId, pPath, null);
        }
        
        /// <remarks/>
        public void assetReadCustomDataStringAsync(AuthToken pAuthToken, long pId, string pPath, object userState) {
            if ((this.assetReadCustomDataStringOperationCompleted == null)) {
                this.assetReadCustomDataStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetReadCustomDataStringOperationCompleted);
            }
            this.InvokeAsync("assetReadCustomDataString", new object[] {
                        pAuthToken,
                        pId,
                        pPath}, this.assetReadCustomDataStringOperationCompleted, userState);
        }
        
        private void OnassetReadCustomDataStringOperationCompleted(object arg) {
            if ((this.assetReadCustomDataStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetReadCustomDataStringCompleted(this, new assetReadCustomDataStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetReadCustomDataNodeReturn")]
        public string assetReadCustomDataNode(AuthToken pAuthToken, long pId, string pPath) {
            object[] results = this.Invoke("assetReadCustomDataNode", new object[] {
                        pAuthToken,
                        pId,
                        pPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void assetReadCustomDataNodeAsync(AuthToken pAuthToken, long pId, string pPath) {
            this.assetReadCustomDataNodeAsync(pAuthToken, pId, pPath, null);
        }
        
        /// <remarks/>
        public void assetReadCustomDataNodeAsync(AuthToken pAuthToken, long pId, string pPath, object userState) {
            if ((this.assetReadCustomDataNodeOperationCompleted == null)) {
                this.assetReadCustomDataNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetReadCustomDataNodeOperationCompleted);
            }
            this.InvokeAsync("assetReadCustomDataNode", new object[] {
                        pAuthToken,
                        pId,
                        pPath}, this.assetReadCustomDataNodeOperationCompleted, userState);
        }
        
        private void OnassetReadCustomDataNodeOperationCompleted(object arg) {
            if ((this.assetReadCustomDataNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetReadCustomDataNodeCompleted(this, new assetReadCustomDataNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetReadArrayReturn")]
        public Asset[] assetReadArray(AuthToken pAuthToken, long[] pIds) {
            object[] results = this.Invoke("assetReadArray", new object[] {
                        pAuthToken,
                        pIds});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void assetReadArrayAsync(AuthToken pAuthToken, long[] pIds) {
            this.assetReadArrayAsync(pAuthToken, pIds, null);
        }
        
        /// <remarks/>
        public void assetReadArrayAsync(AuthToken pAuthToken, long[] pIds, object userState) {
            if ((this.assetReadArrayOperationCompleted == null)) {
                this.assetReadArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetReadArrayOperationCompleted);
            }
            this.InvokeAsync("assetReadArray", new object[] {
                        pAuthToken,
                        pIds}, this.assetReadArrayOperationCompleted, userState);
        }
        
        private void OnassetReadArrayOperationCompleted(object arg) {
            if ((this.assetReadArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetReadArrayCompleted(this, new assetReadArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetReadArrayFromSummaryReturn")]
        public Asset[] assetReadArrayFromSummary(AuthToken pAuthToken, AssetSummary[] pAssetSummaries) {
            object[] results = this.Invoke("assetReadArrayFromSummary", new object[] {
                        pAuthToken,
                        pAssetSummaries});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void assetReadArrayFromSummaryAsync(AuthToken pAuthToken, AssetSummary[] pAssetSummaries) {
            this.assetReadArrayFromSummaryAsync(pAuthToken, pAssetSummaries, null);
        }
        
        /// <remarks/>
        public void assetReadArrayFromSummaryAsync(AuthToken pAuthToken, AssetSummary[] pAssetSummaries, object userState) {
            if ((this.assetReadArrayFromSummaryOperationCompleted == null)) {
                this.assetReadArrayFromSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetReadArrayFromSummaryOperationCompleted);
            }
            this.InvokeAsync("assetReadArrayFromSummary", new object[] {
                        pAuthToken,
                        pAssetSummaries}, this.assetReadArrayFromSummaryOperationCompleted, userState);
        }
        
        private void OnassetReadArrayFromSummaryOperationCompleted(object arg) {
            if ((this.assetReadArrayFromSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetReadArrayFromSummaryCompleted(this, new assetReadArrayFromSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetUpdateReturn")]
        public Asset assetUpdate(AuthToken pAuthToken, Asset pAsset) {
            object[] results = this.Invoke("assetUpdate", new object[] {
                        pAuthToken,
                        pAsset});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void assetUpdateAsync(AuthToken pAuthToken, Asset pAsset) {
            this.assetUpdateAsync(pAuthToken, pAsset, null);
        }
        
        /// <remarks/>
        public void assetUpdateAsync(AuthToken pAuthToken, Asset pAsset, object userState) {
            if ((this.assetUpdateOperationCompleted == null)) {
                this.assetUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetUpdateOperationCompleted);
            }
            this.InvokeAsync("assetUpdate", new object[] {
                        pAuthToken,
                        pAsset}, this.assetUpdateOperationCompleted, userState);
        }
        
        private void OnassetUpdateOperationCompleted(object arg) {
            if ((this.assetUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetUpdateCompleted(this, new assetUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetAddCategorizationReturn")]
        public Asset assetAddCategorization(AuthToken pAuthToken, long pAssetID, string pCategorizationType, string pCategorizationName) {
            object[] results = this.Invoke("assetAddCategorization", new object[] {
                        pAuthToken,
                        pAssetID,
                        pCategorizationType,
                        pCategorizationName});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void assetAddCategorizationAsync(AuthToken pAuthToken, long pAssetID, string pCategorizationType, string pCategorizationName) {
            this.assetAddCategorizationAsync(pAuthToken, pAssetID, pCategorizationType, pCategorizationName, null);
        }
        
        /// <remarks/>
        public void assetAddCategorizationAsync(AuthToken pAuthToken, long pAssetID, string pCategorizationType, string pCategorizationName, object userState) {
            if ((this.assetAddCategorizationOperationCompleted == null)) {
                this.assetAddCategorizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetAddCategorizationOperationCompleted);
            }
            this.InvokeAsync("assetAddCategorization", new object[] {
                        pAuthToken,
                        pAssetID,
                        pCategorizationType,
                        pCategorizationName}, this.assetAddCategorizationOperationCompleted, userState);
        }
        
        private void OnassetAddCategorizationOperationCompleted(object arg) {
            if ((this.assetAddCategorizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetAddCategorizationCompleted(this, new assetAddCategorizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetGetUnacceptedFilesReturn")]
        public SubmissionFileInfo[] assetGetUnacceptedFiles(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("assetGetUnacceptedFiles", new object[] {
                        pAuthToken,
                        pId});
            return ((SubmissionFileInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void assetGetUnacceptedFilesAsync(AuthToken pAuthToken, long pId) {
            this.assetGetUnacceptedFilesAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void assetGetUnacceptedFilesAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.assetGetUnacceptedFilesOperationCompleted == null)) {
                this.assetGetUnacceptedFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetGetUnacceptedFilesOperationCompleted);
            }
            this.InvokeAsync("assetGetUnacceptedFiles", new object[] {
                        pAuthToken,
                        pId}, this.assetGetUnacceptedFilesOperationCompleted, userState);
        }
        
        private void OnassetGetUnacceptedFilesOperationCompleted(object arg) {
            if ((this.assetGetUnacceptedFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetGetUnacceptedFilesCompleted(this, new assetGetUnacceptedFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetAcceptFiles(AuthToken pAuthToken, long pId, string[] pFilenames) {
            this.Invoke("assetAcceptFiles", new object[] {
                        pAuthToken,
                        pId,
                        pFilenames});
        }
        
        /// <remarks/>
        public void assetAcceptFilesAsync(AuthToken pAuthToken, long pId, string[] pFilenames) {
            this.assetAcceptFilesAsync(pAuthToken, pId, pFilenames, null);
        }
        
        /// <remarks/>
        public void assetAcceptFilesAsync(AuthToken pAuthToken, long pId, string[] pFilenames, object userState) {
            if ((this.assetAcceptFilesOperationCompleted == null)) {
                this.assetAcceptFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetAcceptFilesOperationCompleted);
            }
            this.InvokeAsync("assetAcceptFiles", new object[] {
                        pAuthToken,
                        pId,
                        pFilenames}, this.assetAcceptFilesOperationCompleted, userState);
        }
        
        private void OnassetAcceptFilesOperationCompleted(object arg) {
            if ((this.assetAcceptFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetAcceptFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetDeleteFiles(AuthToken pAuthToken, long pId, string[] pFilenames) {
            this.Invoke("assetDeleteFiles", new object[] {
                        pAuthToken,
                        pId,
                        pFilenames});
        }
        
        /// <remarks/>
        public void assetDeleteFilesAsync(AuthToken pAuthToken, long pId, string[] pFilenames) {
            this.assetDeleteFilesAsync(pAuthToken, pId, pFilenames, null);
        }
        
        /// <remarks/>
        public void assetDeleteFilesAsync(AuthToken pAuthToken, long pId, string[] pFilenames, object userState) {
            if ((this.assetDeleteFilesOperationCompleted == null)) {
                this.assetDeleteFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetDeleteFilesOperationCompleted);
            }
            this.InvokeAsync("assetDeleteFiles", new object[] {
                        pAuthToken,
                        pId,
                        pFilenames}, this.assetDeleteFilesOperationCompleted, userState);
        }
        
        private void OnassetDeleteFilesOperationCompleted(object arg) {
            if ((this.assetDeleteFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetDeleteFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetUpdateCustomDataStringReturn")]
        public Asset assetUpdateCustomDataString(AuthToken pAuthToken, long pAssetID, string pPath, string pValue) {
            object[] results = this.Invoke("assetUpdateCustomDataString", new object[] {
                        pAuthToken,
                        pAssetID,
                        pPath,
                        pValue});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void assetUpdateCustomDataStringAsync(AuthToken pAuthToken, long pAssetID, string pPath, string pValue) {
            this.assetUpdateCustomDataStringAsync(pAuthToken, pAssetID, pPath, pValue, null);
        }
        
        /// <remarks/>
        public void assetUpdateCustomDataStringAsync(AuthToken pAuthToken, long pAssetID, string pPath, string pValue, object userState) {
            if ((this.assetUpdateCustomDataStringOperationCompleted == null)) {
                this.assetUpdateCustomDataStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetUpdateCustomDataStringOperationCompleted);
            }
            this.InvokeAsync("assetUpdateCustomDataString", new object[] {
                        pAuthToken,
                        pAssetID,
                        pPath,
                        pValue}, this.assetUpdateCustomDataStringOperationCompleted, userState);
        }
        
        private void OnassetUpdateCustomDataStringOperationCompleted(object arg) {
            if ((this.assetUpdateCustomDataStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetUpdateCustomDataStringCompleted(this, new assetUpdateCustomDataStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetUpdateCustomDataStringArrayReturn")]
        public Asset assetUpdateCustomDataStringArray(AuthToken pAuthToken, long pAssetID, string[] pPath, string[] pValue) {
            object[] results = this.Invoke("assetUpdateCustomDataStringArray", new object[] {
                        pAuthToken,
                        pAssetID,
                        pPath,
                        pValue});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void assetUpdateCustomDataStringArrayAsync(AuthToken pAuthToken, long pAssetID, string[] pPath, string[] pValue) {
            this.assetUpdateCustomDataStringArrayAsync(pAuthToken, pAssetID, pPath, pValue, null);
        }
        
        /// <remarks/>
        public void assetUpdateCustomDataStringArrayAsync(AuthToken pAuthToken, long pAssetID, string[] pPath, string[] pValue, object userState) {
            if ((this.assetUpdateCustomDataStringArrayOperationCompleted == null)) {
                this.assetUpdateCustomDataStringArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetUpdateCustomDataStringArrayOperationCompleted);
            }
            this.InvokeAsync("assetUpdateCustomDataStringArray", new object[] {
                        pAuthToken,
                        pAssetID,
                        pPath,
                        pValue}, this.assetUpdateCustomDataStringArrayOperationCompleted, userState);
        }
        
        private void OnassetUpdateCustomDataStringArrayOperationCompleted(object arg) {
            if ((this.assetUpdateCustomDataStringArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetUpdateCustomDataStringArrayCompleted(this, new assetUpdateCustomDataStringArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetUpdateCustomDataNodeReturn")]
        public Asset assetUpdateCustomDataNode(AuthToken pAuthToken, long pAssetID, string pPath, string pValue) {
            object[] results = this.Invoke("assetUpdateCustomDataNode", new object[] {
                        pAuthToken,
                        pAssetID,
                        pPath,
                        pValue});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void assetUpdateCustomDataNodeAsync(AuthToken pAuthToken, long pAssetID, string pPath, string pValue) {
            this.assetUpdateCustomDataNodeAsync(pAuthToken, pAssetID, pPath, pValue, null);
        }
        
        /// <remarks/>
        public void assetUpdateCustomDataNodeAsync(AuthToken pAuthToken, long pAssetID, string pPath, string pValue, object userState) {
            if ((this.assetUpdateCustomDataNodeOperationCompleted == null)) {
                this.assetUpdateCustomDataNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetUpdateCustomDataNodeOperationCompleted);
            }
            this.InvokeAsync("assetUpdateCustomDataNode", new object[] {
                        pAuthToken,
                        pAssetID,
                        pPath,
                        pValue}, this.assetUpdateCustomDataNodeOperationCompleted, userState);
        }
        
        private void OnassetUpdateCustomDataNodeOperationCompleted(object arg) {
            if ((this.assetUpdateCustomDataNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetUpdateCustomDataNodeCompleted(this, new assetUpdateCustomDataNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetUpdateCustomDataNodeFromStringArrayReturn")]
        public Asset assetUpdateCustomDataNodeFromStringArray(AuthToken pAuthToken, long pAssetID, string[] pPath, string[] pValue) {
            object[] results = this.Invoke("assetUpdateCustomDataNodeFromStringArray", new object[] {
                        pAuthToken,
                        pAssetID,
                        pPath,
                        pValue});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void assetUpdateCustomDataNodeFromStringArrayAsync(AuthToken pAuthToken, long pAssetID, string[] pPath, string[] pValue) {
            this.assetUpdateCustomDataNodeFromStringArrayAsync(pAuthToken, pAssetID, pPath, pValue, null);
        }
        
        /// <remarks/>
        public void assetUpdateCustomDataNodeFromStringArrayAsync(AuthToken pAuthToken, long pAssetID, string[] pPath, string[] pValue, object userState) {
            if ((this.assetUpdateCustomDataNodeFromStringArrayOperationCompleted == null)) {
                this.assetUpdateCustomDataNodeFromStringArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetUpdateCustomDataNodeFromStringArrayOperationCompleted);
            }
            this.InvokeAsync("assetUpdateCustomDataNodeFromStringArray", new object[] {
                        pAuthToken,
                        pAssetID,
                        pPath,
                        pValue}, this.assetUpdateCustomDataNodeFromStringArrayOperationCompleted, userState);
        }
        
        private void OnassetUpdateCustomDataNodeFromStringArrayOperationCompleted(object arg) {
            if ((this.assetUpdateCustomDataNodeFromStringArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetUpdateCustomDataNodeFromStringArrayCompleted(this, new assetUpdateCustomDataNodeFromStringArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetUploadFiles(AuthToken pAuthToken, long pAssetID, string[] pFilenames) {
            this.Invoke("assetUploadFiles", new object[] {
                        pAuthToken,
                        pAssetID,
                        pFilenames});
        }
        
        /// <remarks/>
        public void assetUploadFilesAsync(AuthToken pAuthToken, long pAssetID, string[] pFilenames) {
            this.assetUploadFilesAsync(pAuthToken, pAssetID, pFilenames, null);
        }
        
        /// <remarks/>
        public void assetUploadFilesAsync(AuthToken pAuthToken, long pAssetID, string[] pFilenames, object userState) {
            if ((this.assetUploadFilesOperationCompleted == null)) {
                this.assetUploadFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetUploadFilesOperationCompleted);
            }
            this.InvokeAsync("assetUploadFiles", new object[] {
                        pAuthToken,
                        pAssetID,
                        pFilenames}, this.assetUploadFilesOperationCompleted, userState);
        }
        
        private void OnassetUploadFilesOperationCompleted(object arg) {
            if ((this.assetUploadFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetUploadFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetAddRegistrarNote(AuthToken pAuthToken, long pId, string pNotes) {
            this.Invoke("assetAddRegistrarNote", new object[] {
                        pAuthToken,
                        pId,
                        pNotes});
        }
        
        /// <remarks/>
        public void assetAddRegistrarNoteAsync(AuthToken pAuthToken, long pId, string pNotes) {
            this.assetAddRegistrarNoteAsync(pAuthToken, pId, pNotes, null);
        }
        
        /// <remarks/>
        public void assetAddRegistrarNoteAsync(AuthToken pAuthToken, long pId, string pNotes, object userState) {
            if ((this.assetAddRegistrarNoteOperationCompleted == null)) {
                this.assetAddRegistrarNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetAddRegistrarNoteOperationCompleted);
            }
            this.InvokeAsync("assetAddRegistrarNote", new object[] {
                        pAuthToken,
                        pId,
                        pNotes}, this.assetAddRegistrarNoteOperationCompleted, userState);
        }
        
        private void OnassetAddRegistrarNoteOperationCompleted(object arg) {
            if ((this.assetAddRegistrarNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetAddRegistrarNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetReadRegistrarNotesReturn")]
        public LogEntry[] assetReadRegistrarNotes(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("assetReadRegistrarNotes", new object[] {
                        pAuthToken,
                        pId});
            return ((LogEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void assetReadRegistrarNotesAsync(AuthToken pAuthToken, long pId) {
            this.assetReadRegistrarNotesAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void assetReadRegistrarNotesAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.assetReadRegistrarNotesOperationCompleted == null)) {
                this.assetReadRegistrarNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetReadRegistrarNotesOperationCompleted);
            }
            this.InvokeAsync("assetReadRegistrarNotes", new object[] {
                        pAuthToken,
                        pId}, this.assetReadRegistrarNotesOperationCompleted, userState);
        }
        
        private void OnassetReadRegistrarNotesOperationCompleted(object arg) {
            if ((this.assetReadRegistrarNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetReadRegistrarNotesCompleted(this, new assetReadRegistrarNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetRegister(AuthToken pAuthToken, long pID) {
            this.Invoke("assetRegister", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void assetRegisterAsync(AuthToken pAuthToken, long pID) {
            this.assetRegisterAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void assetRegisterAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.assetRegisterOperationCompleted == null)) {
                this.assetRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetRegisterOperationCompleted);
            }
            this.InvokeAsync("assetRegister", new object[] {
                        pAuthToken,
                        pID}, this.assetRegisterOperationCompleted, userState);
        }
        
        private void OnassetRegisterOperationCompleted(object arg) {
            if ((this.assetRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetRegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetUnRegister(AuthToken pAuthToken, long pID) {
            this.Invoke("assetUnRegister", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void assetUnRegisterAsync(AuthToken pAuthToken, long pID) {
            this.assetUnRegisterAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void assetUnRegisterAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.assetUnRegisterOperationCompleted == null)) {
                this.assetUnRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetUnRegisterOperationCompleted);
            }
            this.InvokeAsync("assetUnRegister", new object[] {
                        pAuthToken,
                        pID}, this.assetUnRegisterOperationCompleted, userState);
        }
        
        private void OnassetUnRegisterOperationCompleted(object arg) {
            if ((this.assetUnRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetUnRegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetAccept(AuthToken pAuthToken, long pID) {
            this.Invoke("assetAccept", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void assetAcceptAsync(AuthToken pAuthToken, long pID) {
            this.assetAcceptAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void assetAcceptAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.assetAcceptOperationCompleted == null)) {
                this.assetAcceptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetAcceptOperationCompleted);
            }
            this.InvokeAsync("assetAccept", new object[] {
                        pAuthToken,
                        pID}, this.assetAcceptOperationCompleted, userState);
        }
        
        private void OnassetAcceptOperationCompleted(object arg) {
            if ((this.assetAcceptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetAcceptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetUnAccept(AuthToken pAuthToken, long pID) {
            this.Invoke("assetUnAccept", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void assetUnAcceptAsync(AuthToken pAuthToken, long pID) {
            this.assetUnAcceptAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void assetUnAcceptAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.assetUnAcceptOperationCompleted == null)) {
                this.assetUnAcceptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetUnAcceptOperationCompleted);
            }
            this.InvokeAsync("assetUnAccept", new object[] {
                        pAuthToken,
                        pID}, this.assetUnAcceptOperationCompleted, userState);
        }
        
        private void OnassetUnAcceptOperationCompleted(object arg) {
            if ((this.assetUnAcceptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetUnAcceptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetSubmit(AuthToken pAuthToken, long pID) {
            this.Invoke("assetSubmit", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void assetSubmitAsync(AuthToken pAuthToken, long pID) {
            this.assetSubmitAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void assetSubmitAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.assetSubmitOperationCompleted == null)) {
                this.assetSubmitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetSubmitOperationCompleted);
            }
            this.InvokeAsync("assetSubmit", new object[] {
                        pAuthToken,
                        pID}, this.assetSubmitOperationCompleted, userState);
        }
        
        private void OnassetSubmitOperationCompleted(object arg) {
            if ((this.assetSubmitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetSubmitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetUnSubmit(AuthToken pAuthToken, long pID) {
            this.Invoke("assetUnSubmit", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void assetUnSubmitAsync(AuthToken pAuthToken, long pID) {
            this.assetUnSubmitAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void assetUnSubmitAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.assetUnSubmitOperationCompleted == null)) {
                this.assetUnSubmitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetUnSubmitOperationCompleted);
            }
            this.InvokeAsync("assetUnSubmit", new object[] {
                        pAuthToken,
                        pID}, this.assetUnSubmitOperationCompleted, userState);
        }
        
        private void OnassetUnSubmitOperationCompleted(object arg) {
            if ((this.assetUnSubmitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetUnSubmitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetActivate(AuthToken pAuthToken, long pAssetID) {
            this.Invoke("assetActivate", new object[] {
                        pAuthToken,
                        pAssetID});
        }
        
        /// <remarks/>
        public void assetActivateAsync(AuthToken pAuthToken, long pAssetID) {
            this.assetActivateAsync(pAuthToken, pAssetID, null);
        }
        
        /// <remarks/>
        public void assetActivateAsync(AuthToken pAuthToken, long pAssetID, object userState) {
            if ((this.assetActivateOperationCompleted == null)) {
                this.assetActivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetActivateOperationCompleted);
            }
            this.InvokeAsync("assetActivate", new object[] {
                        pAuthToken,
                        pAssetID}, this.assetActivateOperationCompleted, userState);
        }
        
        private void OnassetActivateOperationCompleted(object arg) {
            if ((this.assetActivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetActivateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetDeactivate(AuthToken pAuthToken, long pAssetID) {
            this.Invoke("assetDeactivate", new object[] {
                        pAuthToken,
                        pAssetID});
        }
        
        /// <remarks/>
        public void assetDeactivateAsync(AuthToken pAuthToken, long pAssetID) {
            this.assetDeactivateAsync(pAuthToken, pAssetID, null);
        }
        
        /// <remarks/>
        public void assetDeactivateAsync(AuthToken pAuthToken, long pAssetID, object userState) {
            if ((this.assetDeactivateOperationCompleted == null)) {
                this.assetDeactivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetDeactivateOperationCompleted);
            }
            this.InvokeAsync("assetDeactivate", new object[] {
                        pAuthToken,
                        pAssetID}, this.assetDeactivateOperationCompleted, userState);
        }
        
        private void OnassetDeactivateOperationCompleted(object arg) {
            if ((this.assetDeactivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetDeactivateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetRetire(AuthToken pAuthToken, long pAssetID) {
            this.Invoke("assetRetire", new object[] {
                        pAuthToken,
                        pAssetID});
        }
        
        /// <remarks/>
        public void assetRetireAsync(AuthToken pAuthToken, long pAssetID) {
            this.assetRetireAsync(pAuthToken, pAssetID, null);
        }
        
        /// <remarks/>
        public void assetRetireAsync(AuthToken pAuthToken, long pAssetID, object userState) {
            if ((this.assetRetireOperationCompleted == null)) {
                this.assetRetireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetRetireOperationCompleted);
            }
            this.InvokeAsync("assetRetire", new object[] {
                        pAuthToken,
                        pAssetID}, this.assetRetireOperationCompleted, userState);
        }
        
        private void OnassetRetireOperationCompleted(object arg) {
            if ((this.assetRetireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetRetireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetDelete(AuthToken pAuthToken, long pAssetID) {
            this.Invoke("assetDelete", new object[] {
                        pAuthToken,
                        pAssetID});
        }
        
        /// <remarks/>
        public void assetDeleteAsync(AuthToken pAuthToken, long pAssetID) {
            this.assetDeleteAsync(pAuthToken, pAssetID, null);
        }
        
        /// <remarks/>
        public void assetDeleteAsync(AuthToken pAuthToken, long pAssetID, object userState) {
            if ((this.assetDeleteOperationCompleted == null)) {
                this.assetDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetDeleteOperationCompleted);
            }
            this.InvokeAsync("assetDelete", new object[] {
                        pAuthToken,
                        pAssetID}, this.assetDeleteOperationCompleted, userState);
        }
        
        private void OnassetDeleteOperationCompleted(object arg) {
            if ((this.assetDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTabsReadReturn")]
        public TabBean[] assetTabsRead(AuthToken pAuthTokenBean, long pAssetId) {
            object[] results = this.Invoke("assetTabsRead", new object[] {
                        pAuthTokenBean,
                        pAssetId});
            return ((TabBean[])(results[0]));
        }
        
        /// <remarks/>
        public void assetTabsReadAsync(AuthToken pAuthTokenBean, long pAssetId) {
            this.assetTabsReadAsync(pAuthTokenBean, pAssetId, null);
        }
        
        /// <remarks/>
        public void assetTabsReadAsync(AuthToken pAuthTokenBean, long pAssetId, object userState) {
            if ((this.assetTabsReadOperationCompleted == null)) {
                this.assetTabsReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTabsReadOperationCompleted);
            }
            this.InvokeAsync("assetTabsRead", new object[] {
                        pAuthTokenBean,
                        pAssetId}, this.assetTabsReadOperationCompleted, userState);
        }
        
        private void OnassetTabsReadOperationCompleted(object arg) {
            if ((this.assetTabsReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTabsReadCompleted(this, new assetTabsReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTabReadReturn")]
        public TabBean assetTabRead(AuthToken pAuthTokenBean, long pAssetId, long pTabTypeBeanId) {
            object[] results = this.Invoke("assetTabRead", new object[] {
                        pAuthTokenBean,
                        pAssetId,
                        pTabTypeBeanId});
            return ((TabBean)(results[0]));
        }
        
        /// <remarks/>
        public void assetTabReadAsync(AuthToken pAuthTokenBean, long pAssetId, long pTabTypeBeanId) {
            this.assetTabReadAsync(pAuthTokenBean, pAssetId, pTabTypeBeanId, null);
        }
        
        /// <remarks/>
        public void assetTabReadAsync(AuthToken pAuthTokenBean, long pAssetId, long pTabTypeBeanId, object userState) {
            if ((this.assetTabReadOperationCompleted == null)) {
                this.assetTabReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTabReadOperationCompleted);
            }
            this.InvokeAsync("assetTabRead", new object[] {
                        pAuthTokenBean,
                        pAssetId,
                        pTabTypeBeanId}, this.assetTabReadOperationCompleted, userState);
        }
        
        private void OnassetTabReadOperationCompleted(object arg) {
            if ((this.assetTabReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTabReadCompleted(this, new assetTabReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetQuerySummaryReturn")]
        public AssetSummary[] assetQuerySummary(AuthToken pAuthtoken, AssetCriteria pCriteria) {
            object[] results = this.Invoke("assetQuerySummary", new object[] {
                        pAuthtoken,
                        pCriteria});
            return ((AssetSummary[])(results[0]));
        }
        
        /// <remarks/>
        public void assetQuerySummaryAsync(AuthToken pAuthtoken, AssetCriteria pCriteria) {
            this.assetQuerySummaryAsync(pAuthtoken, pCriteria, null);
        }
        
        /// <remarks/>
        public void assetQuerySummaryAsync(AuthToken pAuthtoken, AssetCriteria pCriteria, object userState) {
            if ((this.assetQuerySummaryOperationCompleted == null)) {
                this.assetQuerySummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetQuerySummaryOperationCompleted);
            }
            this.InvokeAsync("assetQuerySummary", new object[] {
                        pAuthtoken,
                        pCriteria}, this.assetQuerySummaryOperationCompleted, userState);
        }
        
        private void OnassetQuerySummaryOperationCompleted(object arg) {
            if ((this.assetQuerySummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetQuerySummaryCompleted(this, new assetQuerySummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetQueryReturn")]
        public Asset[] assetQuery(AuthToken pAuthtoken, AssetCriteria pCriteria) {
            object[] results = this.Invoke("assetQuery", new object[] {
                        pAuthtoken,
                        pCriteria});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void assetQueryAsync(AuthToken pAuthtoken, AssetCriteria pCriteria) {
            this.assetQueryAsync(pAuthtoken, pCriteria, null);
        }
        
        /// <remarks/>
        public void assetQueryAsync(AuthToken pAuthtoken, AssetCriteria pCriteria, object userState) {
            if ((this.assetQueryOperationCompleted == null)) {
                this.assetQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetQueryOperationCompleted);
            }
            this.InvokeAsync("assetQuery", new object[] {
                        pAuthtoken,
                        pCriteria}, this.assetQueryOperationCompleted, userState);
        }
        
        private void OnassetQueryOperationCompleted(object arg) {
            if ((this.assetQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetQueryCompleted(this, new assetQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetQueryCountReturn")]
        public int assetQueryCount(AuthToken pAuthToken, AssetCriteria pCriteria) {
            object[] results = this.Invoke("assetQueryCount", new object[] {
                        pAuthToken,
                        pCriteria});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void assetQueryCountAsync(AuthToken pAuthToken, AssetCriteria pCriteria) {
            this.assetQueryCountAsync(pAuthToken, pCriteria, null);
        }
        
        /// <remarks/>
        public void assetQueryCountAsync(AuthToken pAuthToken, AssetCriteria pCriteria, object userState) {
            if ((this.assetQueryCountOperationCompleted == null)) {
                this.assetQueryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetQueryCountOperationCompleted);
            }
            this.InvokeAsync("assetQueryCount", new object[] {
                        pAuthToken,
                        pCriteria}, this.assetQueryCountOperationCompleted, userState);
        }
        
        private void OnassetQueryCountOperationCompleted(object arg) {
            if ((this.assetQueryCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetQueryCountCompleted(this, new assetQueryCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetReadAppliedToProjectsReturn")]
        public Project[] assetReadAppliedToProjects(AuthToken pAuthToken, Asset pAsset) {
            object[] results = this.Invoke("assetReadAppliedToProjects", new object[] {
                        pAuthToken,
                        pAsset});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void assetReadAppliedToProjectsAsync(AuthToken pAuthToken, Asset pAsset) {
            this.assetReadAppliedToProjectsAsync(pAuthToken, pAsset, null);
        }
        
        /// <remarks/>
        public void assetReadAppliedToProjectsAsync(AuthToken pAuthToken, Asset pAsset, object userState) {
            if ((this.assetReadAppliedToProjectsOperationCompleted == null)) {
                this.assetReadAppliedToProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetReadAppliedToProjectsOperationCompleted);
            }
            this.InvokeAsync("assetReadAppliedToProjects", new object[] {
                        pAuthToken,
                        pAsset}, this.assetReadAppliedToProjectsOperationCompleted, userState);
        }
        
        private void OnassetReadAppliedToProjectsOperationCompleted(object arg) {
            if ((this.assetReadAppliedToProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetReadAppliedToProjectsCompleted(this, new assetReadAppliedToProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetReadAppliedPoliciesReturn")]
        public Asset[] assetReadAppliedPolicies(AuthToken pAuthToken, long pAssetID) {
            object[] results = this.Invoke("assetReadAppliedPolicies", new object[] {
                        pAuthToken,
                        pAssetID});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void assetReadAppliedPoliciesAsync(AuthToken pAuthToken, long pAssetID) {
            this.assetReadAppliedPoliciesAsync(pAuthToken, pAssetID, null);
        }
        
        /// <remarks/>
        public void assetReadAppliedPoliciesAsync(AuthToken pAuthToken, long pAssetID, object userState) {
            if ((this.assetReadAppliedPoliciesOperationCompleted == null)) {
                this.assetReadAppliedPoliciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetReadAppliedPoliciesOperationCompleted);
            }
            this.InvokeAsync("assetReadAppliedPolicies", new object[] {
                        pAuthToken,
                        pAssetID}, this.assetReadAppliedPoliciesOperationCompleted, userState);
        }
        
        private void OnassetReadAppliedPoliciesOperationCompleted(object arg) {
            if ((this.assetReadAppliedPoliciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetReadAppliedPoliciesCompleted(this, new assetReadAppliedPoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetUpdateAppliedPoliciesReturn")]
        public Asset assetUpdateAppliedPolicies(AuthToken pAuthToken, long pAssetID, long[] pAppliedPolicies) {
            object[] results = this.Invoke("assetUpdateAppliedPolicies", new object[] {
                        pAuthToken,
                        pAssetID,
                        pAppliedPolicies});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void assetUpdateAppliedPoliciesAsync(AuthToken pAuthToken, long pAssetID, long[] pAppliedPolicies) {
            this.assetUpdateAppliedPoliciesAsync(pAuthToken, pAssetID, pAppliedPolicies, null);
        }
        
        /// <remarks/>
        public void assetUpdateAppliedPoliciesAsync(AuthToken pAuthToken, long pAssetID, long[] pAppliedPolicies, object userState) {
            if ((this.assetUpdateAppliedPoliciesOperationCompleted == null)) {
                this.assetUpdateAppliedPoliciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetUpdateAppliedPoliciesOperationCompleted);
            }
            this.InvokeAsync("assetUpdateAppliedPolicies", new object[] {
                        pAuthToken,
                        pAssetID,
                        pAppliedPolicies}, this.assetUpdateAppliedPoliciesOperationCompleted, userState);
        }
        
        private void OnassetUpdateAppliedPoliciesOperationCompleted(object arg) {
            if ((this.assetUpdateAppliedPoliciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetUpdateAppliedPoliciesCompleted(this, new assetUpdateAppliedPoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetEvaluateReturn")]
        public KeyValuePair assetEvaluate(AuthToken pAuthToken, AssetCriteria pCriteria, string pEvaluationName) {
            object[] results = this.Invoke("assetEvaluate", new object[] {
                        pAuthToken,
                        pCriteria,
                        pEvaluationName});
            return ((KeyValuePair)(results[0]));
        }
        
        /// <remarks/>
        public void assetEvaluateAsync(AuthToken pAuthToken, AssetCriteria pCriteria, string pEvaluationName) {
            this.assetEvaluateAsync(pAuthToken, pCriteria, pEvaluationName, null);
        }
        
        /// <remarks/>
        public void assetEvaluateAsync(AuthToken pAuthToken, AssetCriteria pCriteria, string pEvaluationName, object userState) {
            if ((this.assetEvaluateOperationCompleted == null)) {
                this.assetEvaluateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetEvaluateOperationCompleted);
            }
            this.InvokeAsync("assetEvaluate", new object[] {
                        pAuthToken,
                        pCriteria,
                        pEvaluationName}, this.assetEvaluateOperationCompleted, userState);
        }
        
        private void OnassetEvaluateOperationCompleted(object arg) {
            if ((this.assetEvaluateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetEvaluateCompleted(this, new assetEvaluateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetEvaluateAgainstAllPoliciesReturn")]
        public string assetEvaluateAgainstAllPolicies(AuthToken pAuthToken, long pAssetID) {
            object[] results = this.Invoke("assetEvaluateAgainstAllPolicies", new object[] {
                        pAuthToken,
                        pAssetID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void assetEvaluateAgainstAllPoliciesAsync(AuthToken pAuthToken, long pAssetID) {
            this.assetEvaluateAgainstAllPoliciesAsync(pAuthToken, pAssetID, null);
        }
        
        /// <remarks/>
        public void assetEvaluateAgainstAllPoliciesAsync(AuthToken pAuthToken, long pAssetID, object userState) {
            if ((this.assetEvaluateAgainstAllPoliciesOperationCompleted == null)) {
                this.assetEvaluateAgainstAllPoliciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetEvaluateAgainstAllPoliciesOperationCompleted);
            }
            this.InvokeAsync("assetEvaluateAgainstAllPolicies", new object[] {
                        pAuthToken,
                        pAssetID}, this.assetEvaluateAgainstAllPoliciesOperationCompleted, userState);
        }
        
        private void OnassetEvaluateAgainstAllPoliciesOperationCompleted(object arg) {
            if ((this.assetEvaluateAgainstAllPoliciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetEvaluateAgainstAllPoliciesCompleted(this, new assetEvaluateAgainstAllPoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetEvaluateAgainstPolicyReturn")]
        public string assetEvaluateAgainstPolicy(AuthToken pAuthToken, long pAssetID, long pPolicyID) {
            object[] results = this.Invoke("assetEvaluateAgainstPolicy", new object[] {
                        pAuthToken,
                        pAssetID,
                        pPolicyID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void assetEvaluateAgainstPolicyAsync(AuthToken pAuthToken, long pAssetID, long pPolicyID) {
            this.assetEvaluateAgainstPolicyAsync(pAuthToken, pAssetID, pPolicyID, null);
        }
        
        /// <remarks/>
        public void assetEvaluateAgainstPolicyAsync(AuthToken pAuthToken, long pAssetID, long pPolicyID, object userState) {
            if ((this.assetEvaluateAgainstPolicyOperationCompleted == null)) {
                this.assetEvaluateAgainstPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetEvaluateAgainstPolicyOperationCompleted);
            }
            this.InvokeAsync("assetEvaluateAgainstPolicy", new object[] {
                        pAuthToken,
                        pAssetID,
                        pPolicyID}, this.assetEvaluateAgainstPolicyOperationCompleted, userState);
        }
        
        private void OnassetEvaluateAgainstPolicyOperationCompleted(object arg) {
            if ((this.assetEvaluateAgainstPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetEvaluateAgainstPolicyCompleted(this, new assetEvaluateAgainstPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetApplyToProjects(AuthToken pAuthToken, string[] pProjectIDs, Asset pAsset) {
            this.Invoke("assetApplyToProjects", new object[] {
                        pAuthToken,
                        pProjectIDs,
                        pAsset});
        }
        
        /// <remarks/>
        public void assetApplyToProjectsAsync(AuthToken pAuthToken, string[] pProjectIDs, Asset pAsset) {
            this.assetApplyToProjectsAsync(pAuthToken, pProjectIDs, pAsset, null);
        }
        
        /// <remarks/>
        public void assetApplyToProjectsAsync(AuthToken pAuthToken, string[] pProjectIDs, Asset pAsset, object userState) {
            if ((this.assetApplyToProjectsOperationCompleted == null)) {
                this.assetApplyToProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetApplyToProjectsOperationCompleted);
            }
            this.InvokeAsync("assetApplyToProjects", new object[] {
                        pAuthToken,
                        pProjectIDs,
                        pAsset}, this.assetApplyToProjectsOperationCompleted, userState);
        }
        
        private void OnassetApplyToProjectsOperationCompleted(object arg) {
            if ((this.assetApplyToProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetApplyToProjectsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetRemoveAppliedToProjects(AuthToken pAuthToken, string[] pProjectIDs, Asset pAsset) {
            this.Invoke("assetRemoveAppliedToProjects", new object[] {
                        pAuthToken,
                        pProjectIDs,
                        pAsset});
        }
        
        /// <remarks/>
        public void assetRemoveAppliedToProjectsAsync(AuthToken pAuthToken, string[] pProjectIDs, Asset pAsset) {
            this.assetRemoveAppliedToProjectsAsync(pAuthToken, pProjectIDs, pAsset, null);
        }
        
        /// <remarks/>
        public void assetRemoveAppliedToProjectsAsync(AuthToken pAuthToken, string[] pProjectIDs, Asset pAsset, object userState) {
            if ((this.assetRemoveAppliedToProjectsOperationCompleted == null)) {
                this.assetRemoveAppliedToProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetRemoveAppliedToProjectsOperationCompleted);
            }
            this.InvokeAsync("assetRemoveAppliedToProjects", new object[] {
                        pAuthToken,
                        pProjectIDs,
                        pAsset}, this.assetRemoveAppliedToProjectsOperationCompleted, userState);
        }
        
        private void OnassetRemoveAppliedToProjectsOperationCompleted(object arg) {
            if ((this.assetRemoveAppliedToProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetRemoveAppliedToProjectsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("repositoryFileTranslatorReturn")]
        public string repositoryFileTranslator(AuthToken pAuthToken, FileInfo pFileInfo) {
            object[] results = this.Invoke("repositoryFileTranslator", new object[] {
                        pAuthToken,
                        pFileInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void repositoryFileTranslatorAsync(AuthToken pAuthToken, FileInfo pFileInfo) {
            this.repositoryFileTranslatorAsync(pAuthToken, pFileInfo, null);
        }
        
        /// <remarks/>
        public void repositoryFileTranslatorAsync(AuthToken pAuthToken, FileInfo pFileInfo, object userState) {
            if ((this.repositoryFileTranslatorOperationCompleted == null)) {
                this.repositoryFileTranslatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrepositoryFileTranslatorOperationCompleted);
            }
            this.InvokeAsync("repositoryFileTranslator", new object[] {
                        pAuthToken,
                        pFileInfo}, this.repositoryFileTranslatorOperationCompleted, userState);
        }
        
        private void OnrepositoryFileTranslatorOperationCompleted(object arg) {
            if ((this.repositoryFileTranslatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.repositoryFileTranslatorCompleted(this, new repositoryFileTranslatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationTypeCreateReturn")]
        public CategorizationType categorizationTypeCreate(AuthToken pAuthToken, string pName, string pSingularDisplay, string pPluralDisplay, bool pExclusiveAssign, bool pProjectAssign) {
            object[] results = this.Invoke("categorizationTypeCreate", new object[] {
                        pAuthToken,
                        pName,
                        pSingularDisplay,
                        pPluralDisplay,
                        pExclusiveAssign,
                        pProjectAssign});
            return ((CategorizationType)(results[0]));
        }
        
        /// <remarks/>
        public void categorizationTypeCreateAsync(AuthToken pAuthToken, string pName, string pSingularDisplay, string pPluralDisplay, bool pExclusiveAssign, bool pProjectAssign) {
            this.categorizationTypeCreateAsync(pAuthToken, pName, pSingularDisplay, pPluralDisplay, pExclusiveAssign, pProjectAssign, null);
        }
        
        /// <remarks/>
        public void categorizationTypeCreateAsync(AuthToken pAuthToken, string pName, string pSingularDisplay, string pPluralDisplay, bool pExclusiveAssign, bool pProjectAssign, object userState) {
            if ((this.categorizationTypeCreateOperationCompleted == null)) {
                this.categorizationTypeCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationTypeCreateOperationCompleted);
            }
            this.InvokeAsync("categorizationTypeCreate", new object[] {
                        pAuthToken,
                        pName,
                        pSingularDisplay,
                        pPluralDisplay,
                        pExclusiveAssign,
                        pProjectAssign}, this.categorizationTypeCreateOperationCompleted, userState);
        }
        
        private void OncategorizationTypeCreateOperationCompleted(object arg) {
            if ((this.categorizationTypeCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationTypeCreateCompleted(this, new categorizationTypeCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationTypeReadReturn")]
        public CategorizationType categorizationTypeRead(AuthToken pAuthToken, long pCategorizationTypeID) {
            object[] results = this.Invoke("categorizationTypeRead", new object[] {
                        pAuthToken,
                        pCategorizationTypeID});
            return ((CategorizationType)(results[0]));
        }
        
        /// <remarks/>
        public void categorizationTypeReadAsync(AuthToken pAuthToken, long pCategorizationTypeID) {
            this.categorizationTypeReadAsync(pAuthToken, pCategorizationTypeID, null);
        }
        
        /// <remarks/>
        public void categorizationTypeReadAsync(AuthToken pAuthToken, long pCategorizationTypeID, object userState) {
            if ((this.categorizationTypeReadOperationCompleted == null)) {
                this.categorizationTypeReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationTypeReadOperationCompleted);
            }
            this.InvokeAsync("categorizationTypeRead", new object[] {
                        pAuthToken,
                        pCategorizationTypeID}, this.categorizationTypeReadOperationCompleted, userState);
        }
        
        private void OncategorizationTypeReadOperationCompleted(object arg) {
            if ((this.categorizationTypeReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationTypeReadCompleted(this, new categorizationTypeReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationTypeUpdateReturn")]
        public CategorizationType categorizationTypeUpdate(AuthToken pAuthToken, CategorizationType pType) {
            object[] results = this.Invoke("categorizationTypeUpdate", new object[] {
                        pAuthToken,
                        pType});
            return ((CategorizationType)(results[0]));
        }
        
        /// <remarks/>
        public void categorizationTypeUpdateAsync(AuthToken pAuthToken, CategorizationType pType) {
            this.categorizationTypeUpdateAsync(pAuthToken, pType, null);
        }
        
        /// <remarks/>
        public void categorizationTypeUpdateAsync(AuthToken pAuthToken, CategorizationType pType, object userState) {
            if ((this.categorizationTypeUpdateOperationCompleted == null)) {
                this.categorizationTypeUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationTypeUpdateOperationCompleted);
            }
            this.InvokeAsync("categorizationTypeUpdate", new object[] {
                        pAuthToken,
                        pType}, this.categorizationTypeUpdateOperationCompleted, userState);
        }
        
        private void OncategorizationTypeUpdateOperationCompleted(object arg) {
            if ((this.categorizationTypeUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationTypeUpdateCompleted(this, new categorizationTypeUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void categorizationTypeDelete(AuthToken pAuthToken, CategorizationType pCategorizationType) {
            this.Invoke("categorizationTypeDelete", new object[] {
                        pAuthToken,
                        pCategorizationType});
        }
        
        /// <remarks/>
        public void categorizationTypeDeleteAsync(AuthToken pAuthToken, CategorizationType pCategorizationType) {
            this.categorizationTypeDeleteAsync(pAuthToken, pCategorizationType, null);
        }
        
        /// <remarks/>
        public void categorizationTypeDeleteAsync(AuthToken pAuthToken, CategorizationType pCategorizationType, object userState) {
            if ((this.categorizationTypeDeleteOperationCompleted == null)) {
                this.categorizationTypeDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationTypeDeleteOperationCompleted);
            }
            this.InvokeAsync("categorizationTypeDelete", new object[] {
                        pAuthToken,
                        pCategorizationType}, this.categorizationTypeDeleteOperationCompleted, userState);
        }
        
        private void OncategorizationTypeDeleteOperationCompleted(object arg) {
            if ((this.categorizationTypeDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationTypeDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationTypeQueryReturn")]
        public CategorizationType[] categorizationTypeQuery(AuthToken pAuthToken, CategorizationTypeCriteria pCriteria) {
            object[] results = this.Invoke("categorizationTypeQuery", new object[] {
                        pAuthToken,
                        pCriteria});
            return ((CategorizationType[])(results[0]));
        }
        
        /// <remarks/>
        public void categorizationTypeQueryAsync(AuthToken pAuthToken, CategorizationTypeCriteria pCriteria) {
            this.categorizationTypeQueryAsync(pAuthToken, pCriteria, null);
        }
        
        /// <remarks/>
        public void categorizationTypeQueryAsync(AuthToken pAuthToken, CategorizationTypeCriteria pCriteria, object userState) {
            if ((this.categorizationTypeQueryOperationCompleted == null)) {
                this.categorizationTypeQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationTypeQueryOperationCompleted);
            }
            this.InvokeAsync("categorizationTypeQuery", new object[] {
                        pAuthToken,
                        pCriteria}, this.categorizationTypeQueryOperationCompleted, userState);
        }
        
        private void OncategorizationTypeQueryOperationCompleted(object arg) {
            if ((this.categorizationTypeQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationTypeQueryCompleted(this, new categorizationTypeQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationCreateReturn")]
        public Categorization categorizationCreate(AuthToken pAuthToken, string pCategorizationName, CategorizationType pCategorizationType) {
            object[] results = this.Invoke("categorizationCreate", new object[] {
                        pAuthToken,
                        pCategorizationName,
                        pCategorizationType});
            return ((Categorization)(results[0]));
        }
        
        /// <remarks/>
        public void categorizationCreateAsync(AuthToken pAuthToken, string pCategorizationName, CategorizationType pCategorizationType) {
            this.categorizationCreateAsync(pAuthToken, pCategorizationName, pCategorizationType, null);
        }
        
        /// <remarks/>
        public void categorizationCreateAsync(AuthToken pAuthToken, string pCategorizationName, CategorizationType pCategorizationType, object userState) {
            if ((this.categorizationCreateOperationCompleted == null)) {
                this.categorizationCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationCreateOperationCompleted);
            }
            this.InvokeAsync("categorizationCreate", new object[] {
                        pAuthToken,
                        pCategorizationName,
                        pCategorizationType}, this.categorizationCreateOperationCompleted, userState);
        }
        
        private void OncategorizationCreateOperationCompleted(object arg) {
            if ((this.categorizationCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationCreateCompleted(this, new categorizationCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationChildCreateReturn")]
        public Categorization categorizationChildCreate(AuthToken pAuthToken, string pCategorizationName, CategorizationType pCategorizationType, Categorization pSuper) {
            object[] results = this.Invoke("categorizationChildCreate", new object[] {
                        pAuthToken,
                        pCategorizationName,
                        pCategorizationType,
                        pSuper});
            return ((Categorization)(results[0]));
        }
        
        /// <remarks/>
        public void categorizationChildCreateAsync(AuthToken pAuthToken, string pCategorizationName, CategorizationType pCategorizationType, Categorization pSuper) {
            this.categorizationChildCreateAsync(pAuthToken, pCategorizationName, pCategorizationType, pSuper, null);
        }
        
        /// <remarks/>
        public void categorizationChildCreateAsync(AuthToken pAuthToken, string pCategorizationName, CategorizationType pCategorizationType, Categorization pSuper, object userState) {
            if ((this.categorizationChildCreateOperationCompleted == null)) {
                this.categorizationChildCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationChildCreateOperationCompleted);
            }
            this.InvokeAsync("categorizationChildCreate", new object[] {
                        pAuthToken,
                        pCategorizationName,
                        pCategorizationType,
                        pSuper}, this.categorizationChildCreateOperationCompleted, userState);
        }
        
        private void OncategorizationChildCreateOperationCompleted(object arg) {
            if ((this.categorizationChildCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationChildCreateCompleted(this, new categorizationChildCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationReadReturn")]
        public Categorization categorizationRead(AuthToken pAuthToken, long pCategorizationID) {
            object[] results = this.Invoke("categorizationRead", new object[] {
                        pAuthToken,
                        pCategorizationID});
            return ((Categorization)(results[0]));
        }
        
        /// <remarks/>
        public void categorizationReadAsync(AuthToken pAuthToken, long pCategorizationID) {
            this.categorizationReadAsync(pAuthToken, pCategorizationID, null);
        }
        
        /// <remarks/>
        public void categorizationReadAsync(AuthToken pAuthToken, long pCategorizationID, object userState) {
            if ((this.categorizationReadOperationCompleted == null)) {
                this.categorizationReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationReadOperationCompleted);
            }
            this.InvokeAsync("categorizationRead", new object[] {
                        pAuthToken,
                        pCategorizationID}, this.categorizationReadOperationCompleted, userState);
        }
        
        private void OncategorizationReadOperationCompleted(object arg) {
            if ((this.categorizationReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationReadCompleted(this, new categorizationReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationReadByTypeReturn")]
        public Categorization[] categorizationReadByType(AuthToken pAuthToken, CategorizationType pCategorizationType, bool active, bool fullTree) {
            object[] results = this.Invoke("categorizationReadByType", new object[] {
                        pAuthToken,
                        pCategorizationType,
                        active,
                        fullTree});
            return ((Categorization[])(results[0]));
        }
        
        /// <remarks/>
        public void categorizationReadByTypeAsync(AuthToken pAuthToken, CategorizationType pCategorizationType, bool active, bool fullTree) {
            this.categorizationReadByTypeAsync(pAuthToken, pCategorizationType, active, fullTree, null);
        }
        
        /// <remarks/>
        public void categorizationReadByTypeAsync(AuthToken pAuthToken, CategorizationType pCategorizationType, bool active, bool fullTree, object userState) {
            if ((this.categorizationReadByTypeOperationCompleted == null)) {
                this.categorizationReadByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationReadByTypeOperationCompleted);
            }
            this.InvokeAsync("categorizationReadByType", new object[] {
                        pAuthToken,
                        pCategorizationType,
                        active,
                        fullTree}, this.categorizationReadByTypeOperationCompleted, userState);
        }
        
        private void OncategorizationReadByTypeOperationCompleted(object arg) {
            if ((this.categorizationReadByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationReadByTypeCompleted(this, new categorizationReadByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationChildReadReturn")]
        public Categorization[] categorizationChildRead(AuthToken pAuthToken, CategorizationType pCategorizationType, Categorization pCategorization, bool active) {
            object[] results = this.Invoke("categorizationChildRead", new object[] {
                        pAuthToken,
                        pCategorizationType,
                        pCategorization,
                        active});
            return ((Categorization[])(results[0]));
        }
        
        /// <remarks/>
        public void categorizationChildReadAsync(AuthToken pAuthToken, CategorizationType pCategorizationType, Categorization pCategorization, bool active) {
            this.categorizationChildReadAsync(pAuthToken, pCategorizationType, pCategorization, active, null);
        }
        
        /// <remarks/>
        public void categorizationChildReadAsync(AuthToken pAuthToken, CategorizationType pCategorizationType, Categorization pCategorization, bool active, object userState) {
            if ((this.categorizationChildReadOperationCompleted == null)) {
                this.categorizationChildReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationChildReadOperationCompleted);
            }
            this.InvokeAsync("categorizationChildRead", new object[] {
                        pAuthToken,
                        pCategorizationType,
                        pCategorization,
                        active}, this.categorizationChildReadOperationCompleted, userState);
        }
        
        private void OncategorizationChildReadOperationCompleted(object arg) {
            if ((this.categorizationChildReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationChildReadCompleted(this, new categorizationChildReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationUpdateReturn")]
        public Categorization categorizationUpdate(AuthToken pAuthToken, Categorization pCategorization, CategorizationType pCategorizationType) {
            object[] results = this.Invoke("categorizationUpdate", new object[] {
                        pAuthToken,
                        pCategorization,
                        pCategorizationType});
            return ((Categorization)(results[0]));
        }
        
        /// <remarks/>
        public void categorizationUpdateAsync(AuthToken pAuthToken, Categorization pCategorization, CategorizationType pCategorizationType) {
            this.categorizationUpdateAsync(pAuthToken, pCategorization, pCategorizationType, null);
        }
        
        /// <remarks/>
        public void categorizationUpdateAsync(AuthToken pAuthToken, Categorization pCategorization, CategorizationType pCategorizationType, object userState) {
            if ((this.categorizationUpdateOperationCompleted == null)) {
                this.categorizationUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationUpdateOperationCompleted);
            }
            this.InvokeAsync("categorizationUpdate", new object[] {
                        pAuthToken,
                        pCategorization,
                        pCategorizationType}, this.categorizationUpdateOperationCompleted, userState);
        }
        
        private void OncategorizationUpdateOperationCompleted(object arg) {
            if ((this.categorizationUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationUpdateCompleted(this, new categorizationUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationUpdateArrayReturn")]
        public Categorization[] categorizationUpdateArray(AuthToken pAuthToken, Categorization[] pCategorizations, CategorizationType pCategorizationType) {
            object[] results = this.Invoke("categorizationUpdateArray", new object[] {
                        pAuthToken,
                        pCategorizations,
                        pCategorizationType});
            return ((Categorization[])(results[0]));
        }
        
        /// <remarks/>
        public void categorizationUpdateArrayAsync(AuthToken pAuthToken, Categorization[] pCategorizations, CategorizationType pCategorizationType) {
            this.categorizationUpdateArrayAsync(pAuthToken, pCategorizations, pCategorizationType, null);
        }
        
        /// <remarks/>
        public void categorizationUpdateArrayAsync(AuthToken pAuthToken, Categorization[] pCategorizations, CategorizationType pCategorizationType, object userState) {
            if ((this.categorizationUpdateArrayOperationCompleted == null)) {
                this.categorizationUpdateArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationUpdateArrayOperationCompleted);
            }
            this.InvokeAsync("categorizationUpdateArray", new object[] {
                        pAuthToken,
                        pCategorizations,
                        pCategorizationType}, this.categorizationUpdateArrayOperationCompleted, userState);
        }
        
        private void OncategorizationUpdateArrayOperationCompleted(object arg) {
            if ((this.categorizationUpdateArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationUpdateArrayCompleted(this, new categorizationUpdateArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationDeactivateReturn")]
        public Categorization categorizationDeactivate(AuthToken pAuthToken, Categorization pCategorization, CategorizationType pCategorizationType) {
            object[] results = this.Invoke("categorizationDeactivate", new object[] {
                        pAuthToken,
                        pCategorization,
                        pCategorizationType});
            return ((Categorization)(results[0]));
        }
        
        /// <remarks/>
        public void categorizationDeactivateAsync(AuthToken pAuthToken, Categorization pCategorization, CategorizationType pCategorizationType) {
            this.categorizationDeactivateAsync(pAuthToken, pCategorization, pCategorizationType, null);
        }
        
        /// <remarks/>
        public void categorizationDeactivateAsync(AuthToken pAuthToken, Categorization pCategorization, CategorizationType pCategorizationType, object userState) {
            if ((this.categorizationDeactivateOperationCompleted == null)) {
                this.categorizationDeactivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationDeactivateOperationCompleted);
            }
            this.InvokeAsync("categorizationDeactivate", new object[] {
                        pAuthToken,
                        pCategorization,
                        pCategorizationType}, this.categorizationDeactivateOperationCompleted, userState);
        }
        
        private void OncategorizationDeactivateOperationCompleted(object arg) {
            if ((this.categorizationDeactivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationDeactivateCompleted(this, new categorizationDeactivateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("categorizationReactivateReturn")]
        public Categorization categorizationReactivate(AuthToken pAuthToken, Categorization pCategorization, CategorizationType pCategorizationType) {
            object[] results = this.Invoke("categorizationReactivate", new object[] {
                        pAuthToken,
                        pCategorization,
                        pCategorizationType});
            return ((Categorization)(results[0]));
        }
        
        /// <remarks/>
        public void categorizationReactivateAsync(AuthToken pAuthToken, Categorization pCategorization, CategorizationType pCategorizationType) {
            this.categorizationReactivateAsync(pAuthToken, pCategorization, pCategorizationType, null);
        }
        
        /// <remarks/>
        public void categorizationReactivateAsync(AuthToken pAuthToken, Categorization pCategorization, CategorizationType pCategorizationType, object userState) {
            if ((this.categorizationReactivateOperationCompleted == null)) {
                this.categorizationReactivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncategorizationReactivateOperationCompleted);
            }
            this.InvokeAsync("categorizationReactivate", new object[] {
                        pAuthToken,
                        pCategorization,
                        pCategorizationType}, this.categorizationReactivateOperationCompleted, userState);
        }
        
        private void OncategorizationReactivateOperationCompleted(object arg) {
            if ((this.categorizationReactivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.categorizationReactivateCompleted(this, new categorizationReactivateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("contactCreateReturn")]
        public Contact contactCreate(AuthToken pAuthToken, string pName) {
            object[] results = this.Invoke("contactCreate", new object[] {
                        pAuthToken,
                        pName});
            return ((Contact)(results[0]));
        }
        
        /// <remarks/>
        public void contactCreateAsync(AuthToken pAuthToken, string pName) {
            this.contactCreateAsync(pAuthToken, pName, null);
        }
        
        /// <remarks/>
        public void contactCreateAsync(AuthToken pAuthToken, string pName, object userState) {
            if ((this.contactCreateOperationCompleted == null)) {
                this.contactCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncontactCreateOperationCompleted);
            }
            this.InvokeAsync("contactCreate", new object[] {
                        pAuthToken,
                        pName}, this.contactCreateOperationCompleted, userState);
        }
        
        private void OncontactCreateOperationCompleted(object arg) {
            if ((this.contactCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.contactCreateCompleted(this, new contactCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("contactReadReturn")]
        public Contact contactRead(AuthToken pAuthToken, long pID) {
            object[] results = this.Invoke("contactRead", new object[] {
                        pAuthToken,
                        pID});
            return ((Contact)(results[0]));
        }
        
        /// <remarks/>
        public void contactReadAsync(AuthToken pAuthToken, long pID) {
            this.contactReadAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void contactReadAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.contactReadOperationCompleted == null)) {
                this.contactReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OncontactReadOperationCompleted);
            }
            this.InvokeAsync("contactRead", new object[] {
                        pAuthToken,
                        pID}, this.contactReadOperationCompleted, userState);
        }
        
        private void OncontactReadOperationCompleted(object arg) {
            if ((this.contactReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.contactReadCompleted(this, new contactReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("contactUpdateReturn")]
        public Contact contactUpdate(AuthToken pAuthToken, Contact pContact) {
            object[] results = this.Invoke("contactUpdate", new object[] {
                        pAuthToken,
                        pContact});
            return ((Contact)(results[0]));
        }
        
        /// <remarks/>
        public void contactUpdateAsync(AuthToken pAuthToken, Contact pContact) {
            this.contactUpdateAsync(pAuthToken, pContact, null);
        }
        
        /// <remarks/>
        public void contactUpdateAsync(AuthToken pAuthToken, Contact pContact, object userState) {
            if ((this.contactUpdateOperationCompleted == null)) {
                this.contactUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncontactUpdateOperationCompleted);
            }
            this.InvokeAsync("contactUpdate", new object[] {
                        pAuthToken,
                        pContact}, this.contactUpdateOperationCompleted, userState);
        }
        
        private void OncontactUpdateOperationCompleted(object arg) {
            if ((this.contactUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.contactUpdateCompleted(this, new contactUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void contactDelete(AuthToken pAuthToken, long pID) {
            this.Invoke("contactDelete", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void contactDeleteAsync(AuthToken pAuthToken, long pID) {
            this.contactDeleteAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void contactDeleteAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.contactDeleteOperationCompleted == null)) {
                this.contactDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncontactDeleteOperationCompleted);
            }
            this.InvokeAsync("contactDelete", new object[] {
                        pAuthToken,
                        pID}, this.contactDeleteOperationCompleted, userState);
        }
        
        private void OncontactDeleteOperationCompleted(object arg) {
            if ((this.contactDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.contactDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("contactQueryReturn")]
        public Contact[] contactQuery(AuthToken pAuthToken, ContactCriteria pQuery) {
            object[] results = this.Invoke("contactQuery", new object[] {
                        pAuthToken,
                        pQuery});
            return ((Contact[])(results[0]));
        }
        
        /// <remarks/>
        public void contactQueryAsync(AuthToken pAuthToken, ContactCriteria pQuery) {
            this.contactQueryAsync(pAuthToken, pQuery, null);
        }
        
        /// <remarks/>
        public void contactQueryAsync(AuthToken pAuthToken, ContactCriteria pQuery, object userState) {
            if ((this.contactQueryOperationCompleted == null)) {
                this.contactQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncontactQueryOperationCompleted);
            }
            this.InvokeAsync("contactQuery", new object[] {
                        pAuthToken,
                        pQuery}, this.contactQueryOperationCompleted, userState);
        }
        
        private void OncontactQueryOperationCompleted(object arg) {
            if ((this.contactQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.contactQueryCompleted(this, new contactQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionCreateReturn")]
        public ExtractionDownload[] extractionCreate(AuthToken pAuthToken, long pProjectId, long[] pAssetIDs) {
            object[] results = this.Invoke("extractionCreate", new object[] {
                        pAuthToken,
                        pProjectId,
                        pAssetIDs});
            return ((ExtractionDownload[])(results[0]));
        }
        
        /// <remarks/>
        public void extractionCreateAsync(AuthToken pAuthToken, long pProjectId, long[] pAssetIDs) {
            this.extractionCreateAsync(pAuthToken, pProjectId, pAssetIDs, null);
        }
        
        /// <remarks/>
        public void extractionCreateAsync(AuthToken pAuthToken, long pProjectId, long[] pAssetIDs, object userState) {
            if ((this.extractionCreateOperationCompleted == null)) {
                this.extractionCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionCreateOperationCompleted);
            }
            this.InvokeAsync("extractionCreate", new object[] {
                        pAuthToken,
                        pProjectId,
                        pAssetIDs}, this.extractionCreateOperationCompleted, userState);
        }
        
        private void OnextractionCreateOperationCompleted(object arg) {
            if ((this.extractionCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionCreateCompleted(this, new extractionCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionGetHiddenAssetUsersReturn")]
        public RegistryUser[] extractionGetHiddenAssetUsers(AuthToken pAuthToken, long pProjectID) {
            object[] results = this.Invoke("extractionGetHiddenAssetUsers", new object[] {
                        pAuthToken,
                        pProjectID});
            return ((RegistryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void extractionGetHiddenAssetUsersAsync(AuthToken pAuthToken, long pProjectID) {
            this.extractionGetHiddenAssetUsersAsync(pAuthToken, pProjectID, null);
        }
        
        /// <remarks/>
        public void extractionGetHiddenAssetUsersAsync(AuthToken pAuthToken, long pProjectID, object userState) {
            if ((this.extractionGetHiddenAssetUsersOperationCompleted == null)) {
                this.extractionGetHiddenAssetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionGetHiddenAssetUsersOperationCompleted);
            }
            this.InvokeAsync("extractionGetHiddenAssetUsers", new object[] {
                        pAuthToken,
                        pProjectID}, this.extractionGetHiddenAssetUsersOperationCompleted, userState);
        }
        
        private void OnextractionGetHiddenAssetUsersOperationCompleted(object arg) {
            if ((this.extractionGetHiddenAssetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionGetHiddenAssetUsersCompleted(this, new extractionGetHiddenAssetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionCreateForUserReturn")]
        public ExtractionDownload[] extractionCreateForUser(AuthToken pAuthToken, long pProjectID, long[] pAssetIDs, RegistryUser pRbacRegistrySecUserBean) {
            object[] results = this.Invoke("extractionCreateForUser", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetIDs,
                        pRbacRegistrySecUserBean});
            return ((ExtractionDownload[])(results[0]));
        }
        
        /// <remarks/>
        public void extractionCreateForUserAsync(AuthToken pAuthToken, long pProjectID, long[] pAssetIDs, RegistryUser pRbacRegistrySecUserBean) {
            this.extractionCreateForUserAsync(pAuthToken, pProjectID, pAssetIDs, pRbacRegistrySecUserBean, null);
        }
        
        /// <remarks/>
        public void extractionCreateForUserAsync(AuthToken pAuthToken, long pProjectID, long[] pAssetIDs, RegistryUser pRbacRegistrySecUserBean, object userState) {
            if ((this.extractionCreateForUserOperationCompleted == null)) {
                this.extractionCreateForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionCreateForUserOperationCompleted);
            }
            this.InvokeAsync("extractionCreateForUser", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetIDs,
                        pRbacRegistrySecUserBean}, this.extractionCreateForUserOperationCompleted, userState);
        }
        
        private void OnextractionCreateForUserOperationCompleted(object arg) {
            if ((this.extractionCreateForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionCreateForUserCompleted(this, new extractionCreateForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionTentativelyAcceptReturn")]
        public Extraction extractionTentativelyAccept(AuthToken pAuthToken, Extraction pExtraction) {
            object[] results = this.Invoke("extractionTentativelyAccept", new object[] {
                        pAuthToken,
                        pExtraction});
            return ((Extraction)(results[0]));
        }
        
        /// <remarks/>
        public void extractionTentativelyAcceptAsync(AuthToken pAuthToken, Extraction pExtraction) {
            this.extractionTentativelyAcceptAsync(pAuthToken, pExtraction, null);
        }
        
        /// <remarks/>
        public void extractionTentativelyAcceptAsync(AuthToken pAuthToken, Extraction pExtraction, object userState) {
            if ((this.extractionTentativelyAcceptOperationCompleted == null)) {
                this.extractionTentativelyAcceptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionTentativelyAcceptOperationCompleted);
            }
            this.InvokeAsync("extractionTentativelyAccept", new object[] {
                        pAuthToken,
                        pExtraction}, this.extractionTentativelyAcceptOperationCompleted, userState);
        }
        
        private void OnextractionTentativelyAcceptOperationCompleted(object arg) {
            if ((this.extractionTentativelyAcceptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionTentativelyAcceptCompleted(this, new extractionTentativelyAcceptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionStillEvaluatingReturn")]
        public Extraction extractionStillEvaluating(AuthToken pAuthToken, Extraction pExtraction) {
            object[] results = this.Invoke("extractionStillEvaluating", new object[] {
                        pAuthToken,
                        pExtraction});
            return ((Extraction)(results[0]));
        }
        
        /// <remarks/>
        public void extractionStillEvaluatingAsync(AuthToken pAuthToken, Extraction pExtraction) {
            this.extractionStillEvaluatingAsync(pAuthToken, pExtraction, null);
        }
        
        /// <remarks/>
        public void extractionStillEvaluatingAsync(AuthToken pAuthToken, Extraction pExtraction, object userState) {
            if ((this.extractionStillEvaluatingOperationCompleted == null)) {
                this.extractionStillEvaluatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionStillEvaluatingOperationCompleted);
            }
            this.InvokeAsync("extractionStillEvaluating", new object[] {
                        pAuthToken,
                        pExtraction}, this.extractionStillEvaluatingOperationCompleted, userState);
        }
        
        private void OnextractionStillEvaluatingOperationCompleted(object arg) {
            if ((this.extractionStillEvaluatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionStillEvaluatingCompleted(this, new extractionStillEvaluatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionRejectReturn")]
        public Extraction extractionReject(AuthToken pAuthToken, Extraction pExtraction, Categorization pCategorization, string pComments) {
            object[] results = this.Invoke("extractionReject", new object[] {
                        pAuthToken,
                        pExtraction,
                        pCategorization,
                        pComments});
            return ((Extraction)(results[0]));
        }
        
        /// <remarks/>
        public void extractionRejectAsync(AuthToken pAuthToken, Extraction pExtraction, Categorization pCategorization, string pComments) {
            this.extractionRejectAsync(pAuthToken, pExtraction, pCategorization, pComments, null);
        }
        
        /// <remarks/>
        public void extractionRejectAsync(AuthToken pAuthToken, Extraction pExtraction, Categorization pCategorization, string pComments, object userState) {
            if ((this.extractionRejectOperationCompleted == null)) {
                this.extractionRejectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionRejectOperationCompleted);
            }
            this.InvokeAsync("extractionReject", new object[] {
                        pAuthToken,
                        pExtraction,
                        pCategorization,
                        pComments}, this.extractionRejectOperationCompleted, userState);
        }
        
        private void OnextractionRejectOperationCompleted(object arg) {
            if ((this.extractionRejectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionRejectCompleted(this, new extractionRejectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionUpdateSurveyReturn")]
        public Extraction extractionUpdateSurvey(AuthToken pAuthToken, Extraction pExtraction, SurveyTaken pSurveyTaken) {
            object[] results = this.Invoke("extractionUpdateSurvey", new object[] {
                        pAuthToken,
                        pExtraction,
                        pSurveyTaken});
            return ((Extraction)(results[0]));
        }
        
        /// <remarks/>
        public void extractionUpdateSurveyAsync(AuthToken pAuthToken, Extraction pExtraction, SurveyTaken pSurveyTaken) {
            this.extractionUpdateSurveyAsync(pAuthToken, pExtraction, pSurveyTaken, null);
        }
        
        /// <remarks/>
        public void extractionUpdateSurveyAsync(AuthToken pAuthToken, Extraction pExtraction, SurveyTaken pSurveyTaken, object userState) {
            if ((this.extractionUpdateSurveyOperationCompleted == null)) {
                this.extractionUpdateSurveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionUpdateSurveyOperationCompleted);
            }
            this.InvokeAsync("extractionUpdateSurvey", new object[] {
                        pAuthToken,
                        pExtraction,
                        pSurveyTaken}, this.extractionUpdateSurveyOperationCompleted, userState);
        }
        
        private void OnextractionUpdateSurveyOperationCompleted(object arg) {
            if ((this.extractionUpdateSurveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionUpdateSurveyCompleted(this, new extractionUpdateSurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionUpdateSurveyForUserReturn")]
        public Extraction extractionUpdateSurveyForUser(AuthToken pAuthToken, Extraction pExtraction, SurveyTaken pSurveyTaken, RegistryUser pRbacRegistrySecUserBean) {
            object[] results = this.Invoke("extractionUpdateSurveyForUser", new object[] {
                        pAuthToken,
                        pExtraction,
                        pSurveyTaken,
                        pRbacRegistrySecUserBean});
            return ((Extraction)(results[0]));
        }
        
        /// <remarks/>
        public void extractionUpdateSurveyForUserAsync(AuthToken pAuthToken, Extraction pExtraction, SurveyTaken pSurveyTaken, RegistryUser pRbacRegistrySecUserBean) {
            this.extractionUpdateSurveyForUserAsync(pAuthToken, pExtraction, pSurveyTaken, pRbacRegistrySecUserBean, null);
        }
        
        /// <remarks/>
        public void extractionUpdateSurveyForUserAsync(AuthToken pAuthToken, Extraction pExtraction, SurveyTaken pSurveyTaken, RegistryUser pRbacRegistrySecUserBean, object userState) {
            if ((this.extractionUpdateSurveyForUserOperationCompleted == null)) {
                this.extractionUpdateSurveyForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionUpdateSurveyForUserOperationCompleted);
            }
            this.InvokeAsync("extractionUpdateSurveyForUser", new object[] {
                        pAuthToken,
                        pExtraction,
                        pSurveyTaken,
                        pRbacRegistrySecUserBean}, this.extractionUpdateSurveyForUserOperationCompleted, userState);
        }
        
        private void OnextractionUpdateSurveyForUserOperationCompleted(object arg) {
            if ((this.extractionUpdateSurveyForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionUpdateSurveyForUserCompleted(this, new extractionUpdateSurveyForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionReadReturn")]
        public Extraction extractionRead(AuthToken pAuthToken, long pExtractionID) {
            object[] results = this.Invoke("extractionRead", new object[] {
                        pAuthToken,
                        pExtractionID});
            return ((Extraction)(results[0]));
        }
        
        /// <remarks/>
        public void extractionReadAsync(AuthToken pAuthToken, long pExtractionID) {
            this.extractionReadAsync(pAuthToken, pExtractionID, null);
        }
        
        /// <remarks/>
        public void extractionReadAsync(AuthToken pAuthToken, long pExtractionID, object userState) {
            if ((this.extractionReadOperationCompleted == null)) {
                this.extractionReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionReadOperationCompleted);
            }
            this.InvokeAsync("extractionRead", new object[] {
                        pAuthToken,
                        pExtractionID}, this.extractionReadOperationCompleted, userState);
        }
        
        private void OnextractionReadOperationCompleted(object arg) {
            if ((this.extractionReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionReadCompleted(this, new extractionReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionReadByProjectAndAssetReturn")]
        public Extraction extractionReadByProjectAndAsset(AuthToken pAuthToken, long pProjectID, long pAssetID) {
            object[] results = this.Invoke("extractionReadByProjectAndAsset", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetID});
            return ((Extraction)(results[0]));
        }
        
        /// <remarks/>
        public void extractionReadByProjectAndAssetAsync(AuthToken pAuthToken, long pProjectID, long pAssetID) {
            this.extractionReadByProjectAndAssetAsync(pAuthToken, pProjectID, pAssetID, null);
        }
        
        /// <remarks/>
        public void extractionReadByProjectAndAssetAsync(AuthToken pAuthToken, long pProjectID, long pAssetID, object userState) {
            if ((this.extractionReadByProjectAndAssetOperationCompleted == null)) {
                this.extractionReadByProjectAndAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionReadByProjectAndAssetOperationCompleted);
            }
            this.InvokeAsync("extractionReadByProjectAndAsset", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetID}, this.extractionReadByProjectAndAssetOperationCompleted, userState);
        }
        
        private void OnextractionReadByProjectAndAssetOperationCompleted(object arg) {
            if ((this.extractionReadByProjectAndAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionReadByProjectAndAssetCompleted(this, new extractionReadByProjectAndAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionReadUserExtractionsReturn")]
        public Extraction[] extractionReadUserExtractions(AuthToken pAuthToken, bool pActive) {
            object[] results = this.Invoke("extractionReadUserExtractions", new object[] {
                        pAuthToken,
                        pActive});
            return ((Extraction[])(results[0]));
        }
        
        /// <remarks/>
        public void extractionReadUserExtractionsAsync(AuthToken pAuthToken, bool pActive) {
            this.extractionReadUserExtractionsAsync(pAuthToken, pActive, null);
        }
        
        /// <remarks/>
        public void extractionReadUserExtractionsAsync(AuthToken pAuthToken, bool pActive, object userState) {
            if ((this.extractionReadUserExtractionsOperationCompleted == null)) {
                this.extractionReadUserExtractionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionReadUserExtractionsOperationCompleted);
            }
            this.InvokeAsync("extractionReadUserExtractions", new object[] {
                        pAuthToken,
                        pActive}, this.extractionReadUserExtractionsOperationCompleted, userState);
        }
        
        private void OnextractionReadUserExtractionsOperationCompleted(object arg) {
            if ((this.extractionReadUserExtractionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionReadUserExtractionsCompleted(this, new extractionReadUserExtractionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionReadAssetExtractionsReturn")]
        public Extraction[] extractionReadAssetExtractions(AuthToken pAuthToken, long pProjectID, long pAssetID, bool pActive) {
            object[] results = this.Invoke("extractionReadAssetExtractions", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetID,
                        pActive});
            return ((Extraction[])(results[0]));
        }
        
        /// <remarks/>
        public void extractionReadAssetExtractionsAsync(AuthToken pAuthToken, long pProjectID, long pAssetID, bool pActive) {
            this.extractionReadAssetExtractionsAsync(pAuthToken, pProjectID, pAssetID, pActive, null);
        }
        
        /// <remarks/>
        public void extractionReadAssetExtractionsAsync(AuthToken pAuthToken, long pProjectID, long pAssetID, bool pActive, object userState) {
            if ((this.extractionReadAssetExtractionsOperationCompleted == null)) {
                this.extractionReadAssetExtractionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionReadAssetExtractionsOperationCompleted);
            }
            this.InvokeAsync("extractionReadAssetExtractions", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetID,
                        pActive}, this.extractionReadAssetExtractionsOperationCompleted, userState);
        }
        
        private void OnextractionReadAssetExtractionsOperationCompleted(object arg) {
            if ((this.extractionReadAssetExtractionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionReadAssetExtractionsCompleted(this, new extractionReadAssetExtractionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionReadProjectExtractionsReturn")]
        public Extraction[] extractionReadProjectExtractions(AuthToken pAuthToken, long pProjectID, bool pActive) {
            object[] results = this.Invoke("extractionReadProjectExtractions", new object[] {
                        pAuthToken,
                        pProjectID,
                        pActive});
            return ((Extraction[])(results[0]));
        }
        
        /// <remarks/>
        public void extractionReadProjectExtractionsAsync(AuthToken pAuthToken, long pProjectID, bool pActive) {
            this.extractionReadProjectExtractionsAsync(pAuthToken, pProjectID, pActive, null);
        }
        
        /// <remarks/>
        public void extractionReadProjectExtractionsAsync(AuthToken pAuthToken, long pProjectID, bool pActive, object userState) {
            if ((this.extractionReadProjectExtractionsOperationCompleted == null)) {
                this.extractionReadProjectExtractionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionReadProjectExtractionsOperationCompleted);
            }
            this.InvokeAsync("extractionReadProjectExtractions", new object[] {
                        pAuthToken,
                        pProjectID,
                        pActive}, this.extractionReadProjectExtractionsOperationCompleted, userState);
        }
        
        private void OnextractionReadProjectExtractionsOperationCompleted(object arg) {
            if ((this.extractionReadProjectExtractionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionReadProjectExtractionsCompleted(this, new extractionReadProjectExtractionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionReadExtractionDownloadsReturn")]
        public ExtractionDownload[] extractionReadExtractionDownloads(AuthToken pAuthToken, Extraction pExtraction) {
            object[] results = this.Invoke("extractionReadExtractionDownloads", new object[] {
                        pAuthToken,
                        pExtraction});
            return ((ExtractionDownload[])(results[0]));
        }
        
        /// <remarks/>
        public void extractionReadExtractionDownloadsAsync(AuthToken pAuthToken, Extraction pExtraction) {
            this.extractionReadExtractionDownloadsAsync(pAuthToken, pExtraction, null);
        }
        
        /// <remarks/>
        public void extractionReadExtractionDownloadsAsync(AuthToken pAuthToken, Extraction pExtraction, object userState) {
            if ((this.extractionReadExtractionDownloadsOperationCompleted == null)) {
                this.extractionReadExtractionDownloadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionReadExtractionDownloadsOperationCompleted);
            }
            this.InvokeAsync("extractionReadExtractionDownloads", new object[] {
                        pAuthToken,
                        pExtraction}, this.extractionReadExtractionDownloadsOperationCompleted, userState);
        }
        
        private void OnextractionReadExtractionDownloadsOperationCompleted(object arg) {
            if ((this.extractionReadExtractionDownloadsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionReadExtractionDownloadsCompleted(this, new extractionReadExtractionDownloadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionReadFileInfosReturn")]
        public FileInfo[] extractionReadFileInfos(AuthToken pAuthToken, Extraction pExtraction) {
            object[] results = this.Invoke("extractionReadFileInfos", new object[] {
                        pAuthToken,
                        pExtraction});
            return ((FileInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void extractionReadFileInfosAsync(AuthToken pAuthToken, Extraction pExtraction) {
            this.extractionReadFileInfosAsync(pAuthToken, pExtraction, null);
        }
        
        /// <remarks/>
        public void extractionReadFileInfosAsync(AuthToken pAuthToken, Extraction pExtraction, object userState) {
            if ((this.extractionReadFileInfosOperationCompleted == null)) {
                this.extractionReadFileInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionReadFileInfosOperationCompleted);
            }
            this.InvokeAsync("extractionReadFileInfos", new object[] {
                        pAuthToken,
                        pExtraction}, this.extractionReadFileInfosOperationCompleted, userState);
        }
        
        private void OnextractionReadFileInfosOperationCompleted(object arg) {
            if ((this.extractionReadFileInfosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionReadFileInfosCompleted(this, new extractionReadFileInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionReadRelatedAssetsReturn")]
        public Asset[] extractionReadRelatedAssets(AuthToken pAuthToken, long pAssetID) {
            object[] results = this.Invoke("extractionReadRelatedAssets", new object[] {
                        pAuthToken,
                        pAssetID});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void extractionReadRelatedAssetsAsync(AuthToken pAuthToken, long pAssetID) {
            this.extractionReadRelatedAssetsAsync(pAuthToken, pAssetID, null);
        }
        
        /// <remarks/>
        public void extractionReadRelatedAssetsAsync(AuthToken pAuthToken, long pAssetID, object userState) {
            if ((this.extractionReadRelatedAssetsOperationCompleted == null)) {
                this.extractionReadRelatedAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionReadRelatedAssetsOperationCompleted);
            }
            this.InvokeAsync("extractionReadRelatedAssets", new object[] {
                        pAuthToken,
                        pAssetID}, this.extractionReadRelatedAssetsOperationCompleted, userState);
        }
        
        private void OnextractionReadRelatedAssetsOperationCompleted(object arg) {
            if ((this.extractionReadRelatedAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionReadRelatedAssetsCompleted(this, new extractionReadRelatedAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionReadRejectionReasonsReturn")]
        public Categorization[] extractionReadRejectionReasons(AuthToken pAuthToken) {
            object[] results = this.Invoke("extractionReadRejectionReasons", new object[] {
                        pAuthToken});
            return ((Categorization[])(results[0]));
        }
        
        /// <remarks/>
        public void extractionReadRejectionReasonsAsync(AuthToken pAuthToken) {
            this.extractionReadRejectionReasonsAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void extractionReadRejectionReasonsAsync(AuthToken pAuthToken, object userState) {
            if ((this.extractionReadRejectionReasonsOperationCompleted == null)) {
                this.extractionReadRejectionReasonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionReadRejectionReasonsOperationCompleted);
            }
            this.InvokeAsync("extractionReadRejectionReasons", new object[] {
                        pAuthToken}, this.extractionReadRejectionReasonsOperationCompleted, userState);
        }
        
        private void OnextractionReadRejectionReasonsOperationCompleted(object arg) {
            if ((this.extractionReadRejectionReasonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionReadRejectionReasonsCompleted(this, new extractionReadRejectionReasonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("extractionReadExtractionStatesReturn")]
        public IExtraction extractionReadExtractionStates(AuthToken pAuthToken) {
            object[] results = this.Invoke("extractionReadExtractionStates", new object[] {
                        pAuthToken});
            return ((IExtraction)(results[0]));
        }
        
        /// <remarks/>
        public void extractionReadExtractionStatesAsync(AuthToken pAuthToken) {
            this.extractionReadExtractionStatesAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void extractionReadExtractionStatesAsync(AuthToken pAuthToken, object userState) {
            if ((this.extractionReadExtractionStatesOperationCompleted == null)) {
                this.extractionReadExtractionStatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionReadExtractionStatesOperationCompleted);
            }
            this.InvokeAsync("extractionReadExtractionStates", new object[] {
                        pAuthToken}, this.extractionReadExtractionStatesOperationCompleted, userState);
        }
        
        private void OnextractionReadExtractionStatesOperationCompleted(object arg) {
            if ((this.extractionReadExtractionStatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionReadExtractionStatesCompleted(this, new extractionReadExtractionStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void extractionResetDatabase() {
            this.Invoke("extractionResetDatabase", new object[0]);
        }
        
        /// <remarks/>
        public void extractionResetDatabaseAsync() {
            this.extractionResetDatabaseAsync(null);
        }
        
        /// <remarks/>
        public void extractionResetDatabaseAsync(object userState) {
            if ((this.extractionResetDatabaseOperationCompleted == null)) {
                this.extractionResetDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextractionResetDatabaseOperationCompleted);
            }
            this.InvokeAsync("extractionResetDatabase", new object[0], this.extractionResetDatabaseOperationCompleted, userState);
        }
        
        private void OnextractionResetDatabaseOperationCompleted(object arg) {
            if ((this.extractionResetDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extractionResetDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectAssetValueReadForUserReturn")]
        public ProjectAssetValue projectAssetValueReadForUser(AuthToken pAuthToken, long pProjectID, long pAssetID, RegistryUser pRbacRegistrySecUserBean) {
            object[] results = this.Invoke("projectAssetValueReadForUser", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetID,
                        pRbacRegistrySecUserBean});
            return ((ProjectAssetValue)(results[0]));
        }
        
        /// <remarks/>
        public void projectAssetValueReadForUserAsync(AuthToken pAuthToken, long pProjectID, long pAssetID, RegistryUser pRbacRegistrySecUserBean) {
            this.projectAssetValueReadForUserAsync(pAuthToken, pProjectID, pAssetID, pRbacRegistrySecUserBean, null);
        }
        
        /// <remarks/>
        public void projectAssetValueReadForUserAsync(AuthToken pAuthToken, long pProjectID, long pAssetID, RegistryUser pRbacRegistrySecUserBean, object userState) {
            if ((this.projectAssetValueReadForUserOperationCompleted == null)) {
                this.projectAssetValueReadForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectAssetValueReadForUserOperationCompleted);
            }
            this.InvokeAsync("projectAssetValueReadForUser", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetID,
                        pRbacRegistrySecUserBean}, this.projectAssetValueReadForUserOperationCompleted, userState);
        }
        
        private void OnprojectAssetValueReadForUserOperationCompleted(object arg) {
            if ((this.projectAssetValueReadForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectAssetValueReadForUserCompleted(this, new projectAssetValueReadForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectAssetValueReadReturn")]
        public ProjectAssetValue[] projectAssetValueRead(AuthToken pAuthToken, long pProjectID, long pAssetID) {
            object[] results = this.Invoke("projectAssetValueRead", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetID});
            return ((ProjectAssetValue[])(results[0]));
        }
        
        /// <remarks/>
        public void projectAssetValueReadAsync(AuthToken pAuthToken, long pProjectID, long pAssetID) {
            this.projectAssetValueReadAsync(pAuthToken, pProjectID, pAssetID, null);
        }
        
        /// <remarks/>
        public void projectAssetValueReadAsync(AuthToken pAuthToken, long pProjectID, long pAssetID, object userState) {
            if ((this.projectAssetValueReadOperationCompleted == null)) {
                this.projectAssetValueReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectAssetValueReadOperationCompleted);
            }
            this.InvokeAsync("projectAssetValueRead", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetID}, this.projectAssetValueReadOperationCompleted, userState);
        }
        
        private void OnprojectAssetValueReadOperationCompleted(object arg) {
            if ((this.projectAssetValueReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectAssetValueReadCompleted(this, new projectAssetValueReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectAssetValueReadSummaryReturn")]
        public ProjectAssetValueSummary projectAssetValueReadSummary(AuthToken pAuthToken, long pProjectID, long pAssetID) {
            object[] results = this.Invoke("projectAssetValueReadSummary", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetID});
            return ((ProjectAssetValueSummary)(results[0]));
        }
        
        /// <remarks/>
        public void projectAssetValueReadSummaryAsync(AuthToken pAuthToken, long pProjectID, long pAssetID) {
            this.projectAssetValueReadSummaryAsync(pAuthToken, pProjectID, pAssetID, null);
        }
        
        /// <remarks/>
        public void projectAssetValueReadSummaryAsync(AuthToken pAuthToken, long pProjectID, long pAssetID, object userState) {
            if ((this.projectAssetValueReadSummaryOperationCompleted == null)) {
                this.projectAssetValueReadSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectAssetValueReadSummaryOperationCompleted);
            }
            this.InvokeAsync("projectAssetValueReadSummary", new object[] {
                        pAuthToken,
                        pProjectID,
                        pAssetID}, this.projectAssetValueReadSummaryOperationCompleted, userState);
        }
        
        private void OnprojectAssetValueReadSummaryOperationCompleted(object arg) {
            if ((this.projectAssetValueReadSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectAssetValueReadSummaryCompleted(this, new projectAssetValueReadSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectAssetValueReadTypesReturn")]
        public AssetUsageType[] projectAssetValueReadTypes(AuthToken pAuthToken) {
            object[] results = this.Invoke("projectAssetValueReadTypes", new object[] {
                        pAuthToken});
            return ((AssetUsageType[])(results[0]));
        }
        
        /// <remarks/>
        public void projectAssetValueReadTypesAsync(AuthToken pAuthToken) {
            this.projectAssetValueReadTypesAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void projectAssetValueReadTypesAsync(AuthToken pAuthToken, object userState) {
            if ((this.projectAssetValueReadTypesOperationCompleted == null)) {
                this.projectAssetValueReadTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectAssetValueReadTypesOperationCompleted);
            }
            this.InvokeAsync("projectAssetValueReadTypes", new object[] {
                        pAuthToken}, this.projectAssetValueReadTypesOperationCompleted, userState);
        }
        
        private void OnprojectAssetValueReadTypesOperationCompleted(object arg) {
            if ((this.projectAssetValueReadTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectAssetValueReadTypesCompleted(this, new projectAssetValueReadTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectAssetValueUpdateReturn")]
        public ProjectAssetValue projectAssetValueUpdate(AuthToken pAuthToken, ProjectAssetValue pProjectAssetValue, string pSelection) {
            object[] results = this.Invoke("projectAssetValueUpdate", new object[] {
                        pAuthToken,
                        pProjectAssetValue,
                        pSelection});
            return ((ProjectAssetValue)(results[0]));
        }
        
        /// <remarks/>
        public void projectAssetValueUpdateAsync(AuthToken pAuthToken, ProjectAssetValue pProjectAssetValue, string pSelection) {
            this.projectAssetValueUpdateAsync(pAuthToken, pProjectAssetValue, pSelection, null);
        }
        
        /// <remarks/>
        public void projectAssetValueUpdateAsync(AuthToken pAuthToken, ProjectAssetValue pProjectAssetValue, string pSelection, object userState) {
            if ((this.projectAssetValueUpdateOperationCompleted == null)) {
                this.projectAssetValueUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectAssetValueUpdateOperationCompleted);
            }
            this.InvokeAsync("projectAssetValueUpdate", new object[] {
                        pAuthToken,
                        pProjectAssetValue,
                        pSelection}, this.projectAssetValueUpdateOperationCompleted, userState);
        }
        
        private void OnprojectAssetValueUpdateOperationCompleted(object arg) {
            if ((this.projectAssetValueUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectAssetValueUpdateCompleted(this, new projectAssetValueUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectCreateReturn")]
        public Project projectCreate(AuthToken pAuthToken, Project pProject, ProjectEntities pProjectEntities) {
            object[] results = this.Invoke("projectCreate", new object[] {
                        pAuthToken,
                        pProject,
                        pProjectEntities});
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public void projectCreateAsync(AuthToken pAuthToken, Project pProject, ProjectEntities pProjectEntities) {
            this.projectCreateAsync(pAuthToken, pProject, pProjectEntities, null);
        }
        
        /// <remarks/>
        public void projectCreateAsync(AuthToken pAuthToken, Project pProject, ProjectEntities pProjectEntities, object userState) {
            if ((this.projectCreateOperationCompleted == null)) {
                this.projectCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectCreateOperationCompleted);
            }
            this.InvokeAsync("projectCreate", new object[] {
                        pAuthToken,
                        pProject,
                        pProjectEntities}, this.projectCreateOperationCompleted, userState);
        }
        
        private void OnprojectCreateOperationCompleted(object arg) {
            if ((this.projectCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectCreateCompleted(this, new projectCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadReturn")]
        public Project projectRead(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("projectRead", new object[] {
                        pAuthToken,
                        pId});
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public void projectReadAsync(AuthToken pAuthToken, long pId) {
            this.projectReadAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void projectReadAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.projectReadOperationCompleted == null)) {
                this.projectReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadOperationCompleted);
            }
            this.InvokeAsync("projectRead", new object[] {
                        pAuthToken,
                        pId}, this.projectReadOperationCompleted, userState);
        }
        
        private void OnprojectReadOperationCompleted(object arg) {
            if ((this.projectReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadCompleted(this, new projectReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadArrayReturn")]
        public Project[] projectReadArray(AuthToken pAuthToken, long[] pIds) {
            object[] results = this.Invoke("projectReadArray", new object[] {
                        pAuthToken,
                        pIds});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadArrayAsync(AuthToken pAuthToken, long[] pIds) {
            this.projectReadArrayAsync(pAuthToken, pIds, null);
        }
        
        /// <remarks/>
        public void projectReadArrayAsync(AuthToken pAuthToken, long[] pIds, object userState) {
            if ((this.projectReadArrayOperationCompleted == null)) {
                this.projectReadArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadArrayOperationCompleted);
            }
            this.InvokeAsync("projectReadArray", new object[] {
                        pAuthToken,
                        pIds}, this.projectReadArrayOperationCompleted, userState);
        }
        
        private void OnprojectReadArrayOperationCompleted(object arg) {
            if ((this.projectReadArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadArrayCompleted(this, new projectReadArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadArrayFromSummaryReturn")]
        public Project[] projectReadArrayFromSummary(AuthToken pAuthToken, ProjectSummary[] pProjectSummaries) {
            object[] results = this.Invoke("projectReadArrayFromSummary", new object[] {
                        pAuthToken,
                        pProjectSummaries});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadArrayFromSummaryAsync(AuthToken pAuthToken, ProjectSummary[] pProjectSummaries) {
            this.projectReadArrayFromSummaryAsync(pAuthToken, pProjectSummaries, null);
        }
        
        /// <remarks/>
        public void projectReadArrayFromSummaryAsync(AuthToken pAuthToken, ProjectSummary[] pProjectSummaries, object userState) {
            if ((this.projectReadArrayFromSummaryOperationCompleted == null)) {
                this.projectReadArrayFromSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadArrayFromSummaryOperationCompleted);
            }
            this.InvokeAsync("projectReadArrayFromSummary", new object[] {
                        pAuthToken,
                        pProjectSummaries}, this.projectReadArrayFromSummaryOperationCompleted, userState);
        }
        
        private void OnprojectReadArrayFromSummaryOperationCompleted(object arg) {
            if ((this.projectReadArrayFromSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadArrayFromSummaryCompleted(this, new projectReadArrayFromSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectUpdateReturn")]
        public Project projectUpdate(AuthToken pAuthToken, Project pProject, ProjectEntities pProjectEntities) {
            object[] results = this.Invoke("projectUpdate", new object[] {
                        pAuthToken,
                        pProject,
                        pProjectEntities});
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public void projectUpdateAsync(AuthToken pAuthToken, Project pProject, ProjectEntities pProjectEntities) {
            this.projectUpdateAsync(pAuthToken, pProject, pProjectEntities, null);
        }
        
        /// <remarks/>
        public void projectUpdateAsync(AuthToken pAuthToken, Project pProject, ProjectEntities pProjectEntities, object userState) {
            if ((this.projectUpdateOperationCompleted == null)) {
                this.projectUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectUpdateOperationCompleted);
            }
            this.InvokeAsync("projectUpdate", new object[] {
                        pAuthToken,
                        pProject,
                        pProjectEntities}, this.projectUpdateOperationCompleted, userState);
        }
        
        private void OnprojectUpdateOperationCompleted(object arg) {
            if ((this.projectUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectUpdateCompleted(this, new projectUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadMembersReturn")]
        public RegistryUser[] projectReadMembers(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadMembers", new object[] {
                        pAuthToken,
                        pProject});
            return ((RegistryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadMembersAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadMembersAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadMembersAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadMembersOperationCompleted == null)) {
                this.projectReadMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadMembersOperationCompleted);
            }
            this.InvokeAsync("projectReadMembers", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadMembersOperationCompleted, userState);
        }
        
        private void OnprojectReadMembersOperationCompleted(object arg) {
            if ((this.projectReadMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadMembersCompleted(this, new projectReadMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadMemberIDsReturn")]
        public string[] projectReadMemberIDs(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadMemberIDs", new object[] {
                        pAuthToken,
                        pProject});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadMemberIDsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadMemberIDsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadMemberIDsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadMemberIDsOperationCompleted == null)) {
                this.projectReadMemberIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadMemberIDsOperationCompleted);
            }
            this.InvokeAsync("projectReadMemberIDs", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadMemberIDsOperationCompleted, userState);
        }
        
        private void OnprojectReadMemberIDsOperationCompleted(object arg) {
            if ((this.projectReadMemberIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadMemberIDsCompleted(this, new projectReadMemberIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadLeadersReturn")]
        public RegistryUser[] projectReadLeaders(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadLeaders", new object[] {
                        pAuthToken,
                        pProject});
            return ((RegistryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadLeadersAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadLeadersAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadLeadersAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadLeadersOperationCompleted == null)) {
                this.projectReadLeadersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadLeadersOperationCompleted);
            }
            this.InvokeAsync("projectReadLeaders", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadLeadersOperationCompleted, userState);
        }
        
        private void OnprojectReadLeadersOperationCompleted(object arg) {
            if ((this.projectReadLeadersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadLeadersCompleted(this, new projectReadLeadersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadLeaderIDsReturn")]
        public string[] projectReadLeaderIDs(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadLeaderIDs", new object[] {
                        pAuthToken,
                        pProject});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadLeaderIDsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadLeaderIDsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadLeaderIDsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadLeaderIDsOperationCompleted == null)) {
                this.projectReadLeaderIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadLeaderIDsOperationCompleted);
            }
            this.InvokeAsync("projectReadLeaderIDs", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadLeaderIDsOperationCompleted, userState);
        }
        
        private void OnprojectReadLeaderIDsOperationCompleted(object arg) {
            if ((this.projectReadLeaderIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadLeaderIDsCompleted(this, new projectReadLeaderIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void projectReassignExtractions(AuthToken pAuthToken, Project pProject, ExtractionReassignmentDecision[] pReassignIDs) {
            this.Invoke("projectReassignExtractions", new object[] {
                        pAuthToken,
                        pProject,
                        pReassignIDs});
        }
        
        /// <remarks/>
        public void projectReassignExtractionsAsync(AuthToken pAuthToken, Project pProject, ExtractionReassignmentDecision[] pReassignIDs) {
            this.projectReassignExtractionsAsync(pAuthToken, pProject, pReassignIDs, null);
        }
        
        /// <remarks/>
        public void projectReassignExtractionsAsync(AuthToken pAuthToken, Project pProject, ExtractionReassignmentDecision[] pReassignIDs, object userState) {
            if ((this.projectReassignExtractionsOperationCompleted == null)) {
                this.projectReassignExtractionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReassignExtractionsOperationCompleted);
            }
            this.InvokeAsync("projectReassignExtractions", new object[] {
                        pAuthToken,
                        pProject,
                        pReassignIDs}, this.projectReassignExtractionsOperationCompleted, userState);
        }
        
        private void OnprojectReassignExtractionsOperationCompleted(object arg) {
            if ((this.projectReassignExtractionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReassignExtractionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void projectReassignUsers(AuthToken pAuthToken, Project pProject, ExtractionReassignmentDecision[] pReassignIDs) {
            this.Invoke("projectReassignUsers", new object[] {
                        pAuthToken,
                        pProject,
                        pReassignIDs});
        }
        
        /// <remarks/>
        public void projectReassignUsersAsync(AuthToken pAuthToken, Project pProject, ExtractionReassignmentDecision[] pReassignIDs) {
            this.projectReassignUsersAsync(pAuthToken, pProject, pReassignIDs, null);
        }
        
        /// <remarks/>
        public void projectReassignUsersAsync(AuthToken pAuthToken, Project pProject, ExtractionReassignmentDecision[] pReassignIDs, object userState) {
            if ((this.projectReassignUsersOperationCompleted == null)) {
                this.projectReassignUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReassignUsersOperationCompleted);
            }
            this.InvokeAsync("projectReassignUsers", new object[] {
                        pAuthToken,
                        pProject,
                        pReassignIDs}, this.projectReassignUsersOperationCompleted, userState);
        }
        
        private void OnprojectReassignUsersOperationCompleted(object arg) {
            if ((this.projectReassignUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReassignUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadUserTypesReturn")]
        public ProjectUserType projectReadUserTypes(AuthToken pAuthToken) {
            object[] results = this.Invoke("projectReadUserTypes", new object[] {
                        pAuthToken});
            return ((ProjectUserType)(results[0]));
        }
        
        /// <remarks/>
        public void projectReadUserTypesAsync(AuthToken pAuthToken) {
            this.projectReadUserTypesAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void projectReadUserTypesAsync(AuthToken pAuthToken, object userState) {
            if ((this.projectReadUserTypesOperationCompleted == null)) {
                this.projectReadUserTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadUserTypesOperationCompleted);
            }
            this.InvokeAsync("projectReadUserTypes", new object[] {
                        pAuthToken}, this.projectReadUserTypesOperationCompleted, userState);
        }
        
        private void OnprojectReadUserTypesOperationCompleted(object arg) {
            if ((this.projectReadUserTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadUserTypesCompleted(this, new projectReadUserTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadParentProjectsReturn")]
        public Project[] projectReadParentProjects(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadParentProjects", new object[] {
                        pAuthToken,
                        pProject});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadParentProjectsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadParentProjectsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadParentProjectsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadParentProjectsOperationCompleted == null)) {
                this.projectReadParentProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadParentProjectsOperationCompleted);
            }
            this.InvokeAsync("projectReadParentProjects", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadParentProjectsOperationCompleted, userState);
        }
        
        private void OnprojectReadParentProjectsOperationCompleted(object arg) {
            if ((this.projectReadParentProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadParentProjectsCompleted(this, new projectReadParentProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadParentProjectIDsReturn")]
        public string[] projectReadParentProjectIDs(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadParentProjectIDs", new object[] {
                        pAuthToken,
                        pProject});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadParentProjectIDsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadParentProjectIDsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadParentProjectIDsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadParentProjectIDsOperationCompleted == null)) {
                this.projectReadParentProjectIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadParentProjectIDsOperationCompleted);
            }
            this.InvokeAsync("projectReadParentProjectIDs", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadParentProjectIDsOperationCompleted, userState);
        }
        
        private void OnprojectReadParentProjectIDsOperationCompleted(object arg) {
            if ((this.projectReadParentProjectIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadParentProjectIDsCompleted(this, new projectReadParentProjectIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadChildProjectsReturn")]
        public Project[] projectReadChildProjects(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadChildProjects", new object[] {
                        pAuthToken,
                        pProject});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadChildProjectsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadChildProjectsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadChildProjectsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadChildProjectsOperationCompleted == null)) {
                this.projectReadChildProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadChildProjectsOperationCompleted);
            }
            this.InvokeAsync("projectReadChildProjects", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadChildProjectsOperationCompleted, userState);
        }
        
        private void OnprojectReadChildProjectsOperationCompleted(object arg) {
            if ((this.projectReadChildProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadChildProjectsCompleted(this, new projectReadChildProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadChildProjectIDsReturn")]
        public string[] projectReadChildProjectIDs(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadChildProjectIDs", new object[] {
                        pAuthToken,
                        pProject});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadChildProjectIDsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadChildProjectIDsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadChildProjectIDsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadChildProjectIDsOperationCompleted == null)) {
                this.projectReadChildProjectIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadChildProjectIDsOperationCompleted);
            }
            this.InvokeAsync("projectReadChildProjectIDs", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadChildProjectIDsOperationCompleted, userState);
        }
        
        private void OnprojectReadChildProjectIDsOperationCompleted(object arg) {
            if ((this.projectReadChildProjectIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadChildProjectIDsCompleted(this, new projectReadChildProjectIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadExtractionsReturn")]
        public Extraction[] projectReadExtractions(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadExtractions", new object[] {
                        pAuthToken,
                        pProject});
            return ((Extraction[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadExtractionsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadExtractionsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadExtractionsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadExtractionsOperationCompleted == null)) {
                this.projectReadExtractionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadExtractionsOperationCompleted);
            }
            this.InvokeAsync("projectReadExtractions", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadExtractionsOperationCompleted, userState);
        }
        
        private void OnprojectReadExtractionsOperationCompleted(object arg) {
            if ((this.projectReadExtractionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadExtractionsCompleted(this, new projectReadExtractionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadExtractionAssetIDsReturn")]
        public string[] projectReadExtractionAssetIDs(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadExtractionAssetIDs", new object[] {
                        pAuthToken,
                        pProject});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadExtractionAssetIDsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadExtractionAssetIDsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadExtractionAssetIDsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadExtractionAssetIDsOperationCompleted == null)) {
                this.projectReadExtractionAssetIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadExtractionAssetIDsOperationCompleted);
            }
            this.InvokeAsync("projectReadExtractionAssetIDs", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadExtractionAssetIDsOperationCompleted, userState);
        }
        
        private void OnprojectReadExtractionAssetIDsOperationCompleted(object arg) {
            if ((this.projectReadExtractionAssetIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadExtractionAssetIDsCompleted(this, new projectReadExtractionAssetIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadAssetsReturn")]
        public ProjectAsset[] projectReadAssets(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadAssets", new object[] {
                        pAuthToken,
                        pProject});
            return ((ProjectAsset[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadAssetsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadAssetsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadAssetsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadAssetsOperationCompleted == null)) {
                this.projectReadAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadAssetsOperationCompleted);
            }
            this.InvokeAsync("projectReadAssets", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadAssetsOperationCompleted, userState);
        }
        
        private void OnprojectReadAssetsOperationCompleted(object arg) {
            if ((this.projectReadAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadAssetsCompleted(this, new projectReadAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadPrescribedAssetsReturn")]
        public Asset[] projectReadPrescribedAssets(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadPrescribedAssets", new object[] {
                        pAuthToken,
                        pProject});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadPrescribedAssetsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadPrescribedAssetsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadPrescribedAssetsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadPrescribedAssetsOperationCompleted == null)) {
                this.projectReadPrescribedAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadPrescribedAssetsOperationCompleted);
            }
            this.InvokeAsync("projectReadPrescribedAssets", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadPrescribedAssetsOperationCompleted, userState);
        }
        
        private void OnprojectReadPrescribedAssetsOperationCompleted(object arg) {
            if ((this.projectReadPrescribedAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadPrescribedAssetsCompleted(this, new projectReadPrescribedAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadAppliedComplianceTemplatesReturn")]
        public RelatedEntity[] projectReadAppliedComplianceTemplates(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadAppliedComplianceTemplates", new object[] {
                        pAuthToken,
                        pProject});
            return ((RelatedEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadAppliedComplianceTemplatesAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadAppliedComplianceTemplatesAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadAppliedComplianceTemplatesAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadAppliedComplianceTemplatesOperationCompleted == null)) {
                this.projectReadAppliedComplianceTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadAppliedComplianceTemplatesOperationCompleted);
            }
            this.InvokeAsync("projectReadAppliedComplianceTemplates", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadAppliedComplianceTemplatesOperationCompleted, userState);
        }
        
        private void OnprojectReadAppliedComplianceTemplatesOperationCompleted(object arg) {
            if ((this.projectReadAppliedComplianceTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadAppliedComplianceTemplatesCompleted(this, new projectReadAppliedComplianceTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadProducedAssetsReturn")]
        public Asset[] projectReadProducedAssets(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadProducedAssets", new object[] {
                        pAuthToken,
                        pProject});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadProducedAssetsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadProducedAssetsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadProducedAssetsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadProducedAssetsOperationCompleted == null)) {
                this.projectReadProducedAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadProducedAssetsOperationCompleted);
            }
            this.InvokeAsync("projectReadProducedAssets", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadProducedAssetsOperationCompleted, userState);
        }
        
        private void OnprojectReadProducedAssetsOperationCompleted(object arg) {
            if ((this.projectReadProducedAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadProducedAssetsCompleted(this, new projectReadProducedAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectReadProducedAssetIDsReturn")]
        public string[] projectReadProducedAssetIDs(AuthToken pAuthToken, Project pProject) {
            object[] results = this.Invoke("projectReadProducedAssetIDs", new object[] {
                        pAuthToken,
                        pProject});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void projectReadProducedAssetIDsAsync(AuthToken pAuthToken, Project pProject) {
            this.projectReadProducedAssetIDsAsync(pAuthToken, pProject, null);
        }
        
        /// <remarks/>
        public void projectReadProducedAssetIDsAsync(AuthToken pAuthToken, Project pProject, object userState) {
            if ((this.projectReadProducedAssetIDsOperationCompleted == null)) {
                this.projectReadProducedAssetIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectReadProducedAssetIDsOperationCompleted);
            }
            this.InvokeAsync("projectReadProducedAssetIDs", new object[] {
                        pAuthToken,
                        pProject}, this.projectReadProducedAssetIDsOperationCompleted, userState);
        }
        
        private void OnprojectReadProducedAssetIDsOperationCompleted(object arg) {
            if ((this.projectReadProducedAssetIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectReadProducedAssetIDsCompleted(this, new projectReadProducedAssetIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectQueryReturn")]
        public Project[] projectQuery(AuthToken pAuthToken, ProjectCriteria pQuery) {
            object[] results = this.Invoke("projectQuery", new object[] {
                        pAuthToken,
                        pQuery});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void projectQueryAsync(AuthToken pAuthToken, ProjectCriteria pQuery) {
            this.projectQueryAsync(pAuthToken, pQuery, null);
        }
        
        /// <remarks/>
        public void projectQueryAsync(AuthToken pAuthToken, ProjectCriteria pQuery, object userState) {
            if ((this.projectQueryOperationCompleted == null)) {
                this.projectQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectQueryOperationCompleted);
            }
            this.InvokeAsync("projectQuery", new object[] {
                        pAuthToken,
                        pQuery}, this.projectQueryOperationCompleted, userState);
        }
        
        private void OnprojectQueryOperationCompleted(object arg) {
            if ((this.projectQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectQueryCompleted(this, new projectQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectQuerySummaryReturn")]
        public ProjectSummary[] projectQuerySummary(AuthToken pAuthToken, ProjectCriteria pQuery) {
            object[] results = this.Invoke("projectQuerySummary", new object[] {
                        pAuthToken,
                        pQuery});
            return ((ProjectSummary[])(results[0]));
        }
        
        /// <remarks/>
        public void projectQuerySummaryAsync(AuthToken pAuthToken, ProjectCriteria pQuery) {
            this.projectQuerySummaryAsync(pAuthToken, pQuery, null);
        }
        
        /// <remarks/>
        public void projectQuerySummaryAsync(AuthToken pAuthToken, ProjectCriteria pQuery, object userState) {
            if ((this.projectQuerySummaryOperationCompleted == null)) {
                this.projectQuerySummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectQuerySummaryOperationCompleted);
            }
            this.InvokeAsync("projectQuerySummary", new object[] {
                        pAuthToken,
                        pQuery}, this.projectQuerySummaryOperationCompleted, userState);
        }
        
        private void OnprojectQuerySummaryOperationCompleted(object arg) {
            if ((this.projectQuerySummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectQuerySummaryCompleted(this, new projectQuerySummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("projectValidateReturn")]
        public Results projectValidate(AuthToken pAuthToken, Project pProject, ProjectEntities pProjectEntities) {
            object[] results = this.Invoke("projectValidate", new object[] {
                        pAuthToken,
                        pProject,
                        pProjectEntities});
            return ((Results)(results[0]));
        }
        
        /// <remarks/>
        public void projectValidateAsync(AuthToken pAuthToken, Project pProject, ProjectEntities pProjectEntities) {
            this.projectValidateAsync(pAuthToken, pProject, pProjectEntities, null);
        }
        
        /// <remarks/>
        public void projectValidateAsync(AuthToken pAuthToken, Project pProject, ProjectEntities pProjectEntities, object userState) {
            if ((this.projectValidateOperationCompleted == null)) {
                this.projectValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprojectValidateOperationCompleted);
            }
            this.InvokeAsync("projectValidate", new object[] {
                        pAuthToken,
                        pProject,
                        pProjectEntities}, this.projectValidateOperationCompleted, userState);
        }
        
        private void OnprojectValidateOperationCompleted(object arg) {
            if ((this.projectValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.projectValidateCompleted(this, new projectValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("departmentCreateReturn")]
        public Department departmentCreate(AuthToken pAuthToken, string pName, string pDescription) {
            object[] results = this.Invoke("departmentCreate", new object[] {
                        pAuthToken,
                        pName,
                        pDescription});
            return ((Department)(results[0]));
        }
        
        /// <remarks/>
        public void departmentCreateAsync(AuthToken pAuthToken, string pName, string pDescription) {
            this.departmentCreateAsync(pAuthToken, pName, pDescription, null);
        }
        
        /// <remarks/>
        public void departmentCreateAsync(AuthToken pAuthToken, string pName, string pDescription, object userState) {
            if ((this.departmentCreateOperationCompleted == null)) {
                this.departmentCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndepartmentCreateOperationCompleted);
            }
            this.InvokeAsync("departmentCreate", new object[] {
                        pAuthToken,
                        pName,
                        pDescription}, this.departmentCreateOperationCompleted, userState);
        }
        
        private void OndepartmentCreateOperationCompleted(object arg) {
            if ((this.departmentCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.departmentCreateCompleted(this, new departmentCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("departmentReadReturn")]
        public Department departmentRead(AuthToken pAuthToken, string pKey) {
            object[] results = this.Invoke("departmentRead", new object[] {
                        pAuthToken,
                        pKey});
            return ((Department)(results[0]));
        }
        
        /// <remarks/>
        public void departmentReadAsync(AuthToken pAuthToken, string pKey) {
            this.departmentReadAsync(pAuthToken, pKey, null);
        }
        
        /// <remarks/>
        public void departmentReadAsync(AuthToken pAuthToken, string pKey, object userState) {
            if ((this.departmentReadOperationCompleted == null)) {
                this.departmentReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OndepartmentReadOperationCompleted);
            }
            this.InvokeAsync("departmentRead", new object[] {
                        pAuthToken,
                        pKey}, this.departmentReadOperationCompleted, userState);
        }
        
        private void OndepartmentReadOperationCompleted(object arg) {
            if ((this.departmentReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.departmentReadCompleted(this, new departmentReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("departmentUpdateReturn")]
        public Department departmentUpdate(AuthToken pAuthToken, Department pDepartment) {
            object[] results = this.Invoke("departmentUpdate", new object[] {
                        pAuthToken,
                        pDepartment});
            return ((Department)(results[0]));
        }
        
        /// <remarks/>
        public void departmentUpdateAsync(AuthToken pAuthToken, Department pDepartment) {
            this.departmentUpdateAsync(pAuthToken, pDepartment, null);
        }
        
        /// <remarks/>
        public void departmentUpdateAsync(AuthToken pAuthToken, Department pDepartment, object userState) {
            if ((this.departmentUpdateOperationCompleted == null)) {
                this.departmentUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndepartmentUpdateOperationCompleted);
            }
            this.InvokeAsync("departmentUpdate", new object[] {
                        pAuthToken,
                        pDepartment}, this.departmentUpdateOperationCompleted, userState);
        }
        
        private void OndepartmentUpdateOperationCompleted(object arg) {
            if ((this.departmentUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.departmentUpdateCompleted(this, new departmentUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("departmentQueryReturn")]
        public Department[] departmentQuery(AuthToken pAuthToken, DepartmentCriteria pCriteria) {
            object[] results = this.Invoke("departmentQuery", new object[] {
                        pAuthToken,
                        pCriteria});
            return ((Department[])(results[0]));
        }
        
        /// <remarks/>
        public void departmentQueryAsync(AuthToken pAuthToken, DepartmentCriteria pCriteria) {
            this.departmentQueryAsync(pAuthToken, pCriteria, null);
        }
        
        /// <remarks/>
        public void departmentQueryAsync(AuthToken pAuthToken, DepartmentCriteria pCriteria, object userState) {
            if ((this.departmentQueryOperationCompleted == null)) {
                this.departmentQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndepartmentQueryOperationCompleted);
            }
            this.InvokeAsync("departmentQuery", new object[] {
                        pAuthToken,
                        pCriteria}, this.departmentQueryOperationCompleted, userState);
        }
        
        private void OndepartmentQueryOperationCompleted(object arg) {
            if ((this.departmentQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.departmentQueryCompleted(this, new departmentQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("acceptableValueListCreateReturn")]
        public AcceptableValueList acceptableValueListCreate(AuthToken pAuthToken, string pListName, AcceptableValue[] pValues) {
            object[] results = this.Invoke("acceptableValueListCreate", new object[] {
                        pAuthToken,
                        pListName,
                        pValues});
            return ((AcceptableValueList)(results[0]));
        }
        
        /// <remarks/>
        public void acceptableValueListCreateAsync(AuthToken pAuthToken, string pListName, AcceptableValue[] pValues) {
            this.acceptableValueListCreateAsync(pAuthToken, pListName, pValues, null);
        }
        
        /// <remarks/>
        public void acceptableValueListCreateAsync(AuthToken pAuthToken, string pListName, AcceptableValue[] pValues, object userState) {
            if ((this.acceptableValueListCreateOperationCompleted == null)) {
                this.acceptableValueListCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnacceptableValueListCreateOperationCompleted);
            }
            this.InvokeAsync("acceptableValueListCreate", new object[] {
                        pAuthToken,
                        pListName,
                        pValues}, this.acceptableValueListCreateOperationCompleted, userState);
        }
        
        private void OnacceptableValueListCreateOperationCompleted(object arg) {
            if ((this.acceptableValueListCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.acceptableValueListCreateCompleted(this, new acceptableValueListCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("acceptableValueListReadReturn")]
        public AcceptableValueList acceptableValueListRead(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("acceptableValueListRead", new object[] {
                        pAuthToken,
                        pId});
            return ((AcceptableValueList)(results[0]));
        }
        
        /// <remarks/>
        public void acceptableValueListReadAsync(AuthToken pAuthToken, long pId) {
            this.acceptableValueListReadAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void acceptableValueListReadAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.acceptableValueListReadOperationCompleted == null)) {
                this.acceptableValueListReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnacceptableValueListReadOperationCompleted);
            }
            this.InvokeAsync("acceptableValueListRead", new object[] {
                        pAuthToken,
                        pId}, this.acceptableValueListReadOperationCompleted, userState);
        }
        
        private void OnacceptableValueListReadOperationCompleted(object arg) {
            if ((this.acceptableValueListReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.acceptableValueListReadCompleted(this, new acceptableValueListReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("acceptableValueListUpdateReturn")]
        public AcceptableValueList acceptableValueListUpdate(AuthToken pAuthToken, AcceptableValueList pList) {
            object[] results = this.Invoke("acceptableValueListUpdate", new object[] {
                        pAuthToken,
                        pList});
            return ((AcceptableValueList)(results[0]));
        }
        
        /// <remarks/>
        public void acceptableValueListUpdateAsync(AuthToken pAuthToken, AcceptableValueList pList) {
            this.acceptableValueListUpdateAsync(pAuthToken, pList, null);
        }
        
        /// <remarks/>
        public void acceptableValueListUpdateAsync(AuthToken pAuthToken, AcceptableValueList pList, object userState) {
            if ((this.acceptableValueListUpdateOperationCompleted == null)) {
                this.acceptableValueListUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnacceptableValueListUpdateOperationCompleted);
            }
            this.InvokeAsync("acceptableValueListUpdate", new object[] {
                        pAuthToken,
                        pList}, this.acceptableValueListUpdateOperationCompleted, userState);
        }
        
        private void OnacceptableValueListUpdateOperationCompleted(object arg) {
            if ((this.acceptableValueListUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.acceptableValueListUpdateCompleted(this, new acceptableValueListUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("acceptableValueListQueryReturn")]
        public AcceptableValueList[] acceptableValueListQuery(AuthToken pAuthToken, AcceptableValueListCriteria pCriteria) {
            object[] results = this.Invoke("acceptableValueListQuery", new object[] {
                        pAuthToken,
                        pCriteria});
            return ((AcceptableValueList[])(results[0]));
        }
        
        /// <remarks/>
        public void acceptableValueListQueryAsync(AuthToken pAuthToken, AcceptableValueListCriteria pCriteria) {
            this.acceptableValueListQueryAsync(pAuthToken, pCriteria, null);
        }
        
        /// <remarks/>
        public void acceptableValueListQueryAsync(AuthToken pAuthToken, AcceptableValueListCriteria pCriteria, object userState) {
            if ((this.acceptableValueListQueryOperationCompleted == null)) {
                this.acceptableValueListQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnacceptableValueListQueryOperationCompleted);
            }
            this.InvokeAsync("acceptableValueListQuery", new object[] {
                        pAuthToken,
                        pCriteria}, this.acceptableValueListQueryOperationCompleted, userState);
        }
        
        private void OnacceptableValueListQueryOperationCompleted(object arg) {
            if ((this.acceptableValueListQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.acceptableValueListQueryCompleted(this, new acceptableValueListQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTypeCreateCloneReturn")]
        public AssetType assetTypeCreateClone(AuthToken pAuthToken, long pBaseAssetTypeID, string pName) {
            object[] results = this.Invoke("assetTypeCreateClone", new object[] {
                        pAuthToken,
                        pBaseAssetTypeID,
                        pName});
            return ((AssetType)(results[0]));
        }
        
        /// <remarks/>
        public void assetTypeCreateCloneAsync(AuthToken pAuthToken, long pBaseAssetTypeID, string pName) {
            this.assetTypeCreateCloneAsync(pAuthToken, pBaseAssetTypeID, pName, null);
        }
        
        /// <remarks/>
        public void assetTypeCreateCloneAsync(AuthToken pAuthToken, long pBaseAssetTypeID, string pName, object userState) {
            if ((this.assetTypeCreateCloneOperationCompleted == null)) {
                this.assetTypeCreateCloneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTypeCreateCloneOperationCompleted);
            }
            this.InvokeAsync("assetTypeCreateClone", new object[] {
                        pAuthToken,
                        pBaseAssetTypeID,
                        pName}, this.assetTypeCreateCloneOperationCompleted, userState);
        }
        
        private void OnassetTypeCreateCloneOperationCompleted(object arg) {
            if ((this.assetTypeCreateCloneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTypeCreateCloneCompleted(this, new assetTypeCreateCloneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTypeCreateReturn")]
        public AssetType assetTypeCreate(AuthToken pAuthToken, string pName) {
            object[] results = this.Invoke("assetTypeCreate", new object[] {
                        pAuthToken,
                        pName});
            return ((AssetType)(results[0]));
        }
        
        /// <remarks/>
        public void assetTypeCreateAsync(AuthToken pAuthToken, string pName) {
            this.assetTypeCreateAsync(pAuthToken, pName, null);
        }
        
        /// <remarks/>
        public void assetTypeCreateAsync(AuthToken pAuthToken, string pName, object userState) {
            if ((this.assetTypeCreateOperationCompleted == null)) {
                this.assetTypeCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTypeCreateOperationCompleted);
            }
            this.InvokeAsync("assetTypeCreate", new object[] {
                        pAuthToken,
                        pName}, this.assetTypeCreateOperationCompleted, userState);
        }
        
        private void OnassetTypeCreateOperationCompleted(object arg) {
            if ((this.assetTypeCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTypeCreateCompleted(this, new assetTypeCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTypeCreateComplianceTemplateReturn")]
        public AssetType assetTypeCreateComplianceTemplate(AuthToken pAuthToken, string pName) {
            object[] results = this.Invoke("assetTypeCreateComplianceTemplate", new object[] {
                        pAuthToken,
                        pName});
            return ((AssetType)(results[0]));
        }
        
        /// <remarks/>
        public void assetTypeCreateComplianceTemplateAsync(AuthToken pAuthToken, string pName) {
            this.assetTypeCreateComplianceTemplateAsync(pAuthToken, pName, null);
        }
        
        /// <remarks/>
        public void assetTypeCreateComplianceTemplateAsync(AuthToken pAuthToken, string pName, object userState) {
            if ((this.assetTypeCreateComplianceTemplateOperationCompleted == null)) {
                this.assetTypeCreateComplianceTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTypeCreateComplianceTemplateOperationCompleted);
            }
            this.InvokeAsync("assetTypeCreateComplianceTemplate", new object[] {
                        pAuthToken,
                        pName}, this.assetTypeCreateComplianceTemplateOperationCompleted, userState);
        }
        
        private void OnassetTypeCreateComplianceTemplateOperationCompleted(object arg) {
            if ((this.assetTypeCreateComplianceTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTypeCreateComplianceTemplateCompleted(this, new assetTypeCreateComplianceTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTypeReadReturn")]
        public AssetType assetTypeRead(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("assetTypeRead", new object[] {
                        pAuthToken,
                        pId});
            return ((AssetType)(results[0]));
        }
        
        /// <remarks/>
        public void assetTypeReadAsync(AuthToken pAuthToken, long pId) {
            this.assetTypeReadAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void assetTypeReadAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.assetTypeReadOperationCompleted == null)) {
                this.assetTypeReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTypeReadOperationCompleted);
            }
            this.InvokeAsync("assetTypeRead", new object[] {
                        pAuthToken,
                        pId}, this.assetTypeReadOperationCompleted, userState);
        }
        
        private void OnassetTypeReadOperationCompleted(object arg) {
            if ((this.assetTypeReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTypeReadCompleted(this, new assetTypeReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTypeGetEntityArtifactRulesReturn")]
        public EntityArtifactRule[] assetTypeGetEntityArtifactRules(AuthToken pAuthTokenBean, long pAssetTypeId) {
            object[] results = this.Invoke("assetTypeGetEntityArtifactRules", new object[] {
                        pAuthTokenBean,
                        pAssetTypeId});
            return ((EntityArtifactRule[])(results[0]));
        }
        
        /// <remarks/>
        public void assetTypeGetEntityArtifactRulesAsync(AuthToken pAuthTokenBean, long pAssetTypeId) {
            this.assetTypeGetEntityArtifactRulesAsync(pAuthTokenBean, pAssetTypeId, null);
        }
        
        /// <remarks/>
        public void assetTypeGetEntityArtifactRulesAsync(AuthToken pAuthTokenBean, long pAssetTypeId, object userState) {
            if ((this.assetTypeGetEntityArtifactRulesOperationCompleted == null)) {
                this.assetTypeGetEntityArtifactRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTypeGetEntityArtifactRulesOperationCompleted);
            }
            this.InvokeAsync("assetTypeGetEntityArtifactRules", new object[] {
                        pAuthTokenBean,
                        pAssetTypeId}, this.assetTypeGetEntityArtifactRulesOperationCompleted, userState);
        }
        
        private void OnassetTypeGetEntityArtifactRulesOperationCompleted(object arg) {
            if ((this.assetTypeGetEntityArtifactRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTypeGetEntityArtifactRulesCompleted(this, new assetTypeGetEntityArtifactRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTypeUpdateReturn")]
        public AssetType assetTypeUpdate(AuthToken pAuthToken, AssetType pAssetType) {
            object[] results = this.Invoke("assetTypeUpdate", new object[] {
                        pAuthToken,
                        pAssetType});
            return ((AssetType)(results[0]));
        }
        
        /// <remarks/>
        public void assetTypeUpdateAsync(AuthToken pAuthToken, AssetType pAssetType) {
            this.assetTypeUpdateAsync(pAuthToken, pAssetType, null);
        }
        
        /// <remarks/>
        public void assetTypeUpdateAsync(AuthToken pAuthToken, AssetType pAssetType, object userState) {
            if ((this.assetTypeUpdateOperationCompleted == null)) {
                this.assetTypeUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTypeUpdateOperationCompleted);
            }
            this.InvokeAsync("assetTypeUpdate", new object[] {
                        pAuthToken,
                        pAssetType}, this.assetTypeUpdateOperationCompleted, userState);
        }
        
        private void OnassetTypeUpdateOperationCompleted(object arg) {
            if ((this.assetTypeUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTypeUpdateCompleted(this, new assetTypeUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetTypeDelete(AuthToken pAuthToken, long pId) {
            this.Invoke("assetTypeDelete", new object[] {
                        pAuthToken,
                        pId});
        }
        
        /// <remarks/>
        public void assetTypeDeleteAsync(AuthToken pAuthToken, long pId) {
            this.assetTypeDeleteAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void assetTypeDeleteAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.assetTypeDeleteOperationCompleted == null)) {
                this.assetTypeDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTypeDeleteOperationCompleted);
            }
            this.InvokeAsync("assetTypeDelete", new object[] {
                        pAuthToken,
                        pId}, this.assetTypeDeleteOperationCompleted, userState);
        }
        
        private void OnassetTypeDeleteOperationCompleted(object arg) {
            if ((this.assetTypeDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTypeDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTypeQueryReturn")]
        public AssetType[] assetTypeQuery(AuthToken pAuthToken, AssetTypeCriteria pCriteria) {
            object[] results = this.Invoke("assetTypeQuery", new object[] {
                        pAuthToken,
                        pCriteria});
            return ((AssetType[])(results[0]));
        }
        
        /// <remarks/>
        public void assetTypeQueryAsync(AuthToken pAuthToken, AssetTypeCriteria pCriteria) {
            this.assetTypeQueryAsync(pAuthToken, pCriteria, null);
        }
        
        /// <remarks/>
        public void assetTypeQueryAsync(AuthToken pAuthToken, AssetTypeCriteria pCriteria, object userState) {
            if ((this.assetTypeQueryOperationCompleted == null)) {
                this.assetTypeQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTypeQueryOperationCompleted);
            }
            this.InvokeAsync("assetTypeQuery", new object[] {
                        pAuthToken,
                        pCriteria}, this.assetTypeQueryOperationCompleted, userState);
        }
        
        private void OnassetTypeQueryOperationCompleted(object arg) {
            if ((this.assetTypeQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTypeQueryCompleted(this, new assetTypeQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetTypeSchemaReadReturn")]
        public string assetTypeSchemaRead(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("assetTypeSchemaRead", new object[] {
                        pAuthToken,
                        pId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void assetTypeSchemaReadAsync(AuthToken pAuthToken, long pId) {
            this.assetTypeSchemaReadAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void assetTypeSchemaReadAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.assetTypeSchemaReadOperationCompleted == null)) {
                this.assetTypeSchemaReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetTypeSchemaReadOperationCompleted);
            }
            this.InvokeAsync("assetTypeSchemaRead", new object[] {
                        pAuthToken,
                        pId}, this.assetTypeSchemaReadOperationCompleted, userState);
        }
        
        private void OnassetTypeSchemaReadOperationCompleted(object arg) {
            if ((this.assetTypeSchemaReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetTypeSchemaReadCompleted(this, new assetTypeSchemaReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("configGetWebResourcePathReturn")]
        public string configGetWebResourcePath() {
            object[] results = this.Invoke("configGetWebResourcePath", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void configGetWebResourcePathAsync() {
            this.configGetWebResourcePathAsync(null);
        }
        
        /// <remarks/>
        public void configGetWebResourcePathAsync(object userState) {
            if ((this.configGetWebResourcePathOperationCompleted == null)) {
                this.configGetWebResourcePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfigGetWebResourcePathOperationCompleted);
            }
            this.InvokeAsync("configGetWebResourcePath", new object[0], this.configGetWebResourcePathOperationCompleted, userState);
        }
        
        private void OnconfigGetWebResourcePathOperationCompleted(object arg) {
            if ((this.configGetWebResourcePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.configGetWebResourcePathCompleted(this, new configGetWebResourcePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void systemSettingsAddBundle(AuthToken pAuthToken, string pXml) {
            this.Invoke("systemSettingsAddBundle", new object[] {
                        pAuthToken,
                        pXml});
        }
        
        /// <remarks/>
        public void systemSettingsAddBundleAsync(AuthToken pAuthToken, string pXml) {
            this.systemSettingsAddBundleAsync(pAuthToken, pXml, null);
        }
        
        /// <remarks/>
        public void systemSettingsAddBundleAsync(AuthToken pAuthToken, string pXml, object userState) {
            if ((this.systemSettingsAddBundleOperationCompleted == null)) {
                this.systemSettingsAddBundleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsystemSettingsAddBundleOperationCompleted);
            }
            this.InvokeAsync("systemSettingsAddBundle", new object[] {
                        pAuthToken,
                        pXml}, this.systemSettingsAddBundleOperationCompleted, userState);
        }
        
        private void OnsystemSettingsAddBundleOperationCompleted(object arg) {
            if ((this.systemSettingsAddBundleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.systemSettingsAddBundleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("systemSettingsQueryReturn")]
        public SettingValue[] systemSettingsQuery(AuthToken pAuthToken, SystemSettingsCriteria pCriteria) {
            object[] results = this.Invoke("systemSettingsQuery", new object[] {
                        pAuthToken,
                        pCriteria});
            return ((SettingValue[])(results[0]));
        }
        
        /// <remarks/>
        public void systemSettingsQueryAsync(AuthToken pAuthToken, SystemSettingsCriteria pCriteria) {
            this.systemSettingsQueryAsync(pAuthToken, pCriteria, null);
        }
        
        /// <remarks/>
        public void systemSettingsQueryAsync(AuthToken pAuthToken, SystemSettingsCriteria pCriteria, object userState) {
            if ((this.systemSettingsQueryOperationCompleted == null)) {
                this.systemSettingsQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsystemSettingsQueryOperationCompleted);
            }
            this.InvokeAsync("systemSettingsQuery", new object[] {
                        pAuthToken,
                        pCriteria}, this.systemSettingsQueryOperationCompleted, userState);
        }
        
        private void OnsystemSettingsQueryOperationCompleted(object arg) {
            if ((this.systemSettingsQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.systemSettingsQueryCompleted(this, new systemSettingsQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userCreateReturn")]
        public RegistryUser userCreate(AuthToken pAuthToken, string pUserName, string pFirstName, string pLastName, string pEmail, string pPassword, bool pMustChangePassword, bool pPasswordNeverExpires, bool pAssignDefaultRoles) {
            object[] results = this.Invoke("userCreate", new object[] {
                        pAuthToken,
                        pUserName,
                        pFirstName,
                        pLastName,
                        pEmail,
                        pPassword,
                        pMustChangePassword,
                        pPasswordNeverExpires,
                        pAssignDefaultRoles});
            return ((RegistryUser)(results[0]));
        }
        
        /// <remarks/>
        public void userCreateAsync(AuthToken pAuthToken, string pUserName, string pFirstName, string pLastName, string pEmail, string pPassword, bool pMustChangePassword, bool pPasswordNeverExpires, bool pAssignDefaultRoles) {
            this.userCreateAsync(pAuthToken, pUserName, pFirstName, pLastName, pEmail, pPassword, pMustChangePassword, pPasswordNeverExpires, pAssignDefaultRoles, null);
        }
        
        /// <remarks/>
        public void userCreateAsync(AuthToken pAuthToken, string pUserName, string pFirstName, string pLastName, string pEmail, string pPassword, bool pMustChangePassword, bool pPasswordNeverExpires, bool pAssignDefaultRoles, object userState) {
            if ((this.userCreateOperationCompleted == null)) {
                this.userCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserCreateOperationCompleted);
            }
            this.InvokeAsync("userCreate", new object[] {
                        pAuthToken,
                        pUserName,
                        pFirstName,
                        pLastName,
                        pEmail,
                        pPassword,
                        pMustChangePassword,
                        pPasswordNeverExpires,
                        pAssignDefaultRoles}, this.userCreateOperationCompleted, userState);
        }
        
        private void OnuserCreateOperationCompleted(object arg) {
            if ((this.userCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userCreateCompleted(this, new userCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userReadReturn")]
        public RegistryUser userRead(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("userRead", new object[] {
                        pAuthToken,
                        pId});
            return ((RegistryUser)(results[0]));
        }
        
        /// <remarks/>
        public void userReadAsync(AuthToken pAuthToken, long pId) {
            this.userReadAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void userReadAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.userReadOperationCompleted == null)) {
                this.userReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserReadOperationCompleted);
            }
            this.InvokeAsync("userRead", new object[] {
                        pAuthToken,
                        pId}, this.userReadOperationCompleted, userState);
        }
        
        private void OnuserReadOperationCompleted(object arg) {
            if ((this.userReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userReadCompleted(this, new userReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userReadByAuthTokenReturn")]
        public RegistryUser userReadByAuthToken(AuthToken pAuthToken) {
            object[] results = this.Invoke("userReadByAuthToken", new object[] {
                        pAuthToken});
            return ((RegistryUser)(results[0]));
        }
        
        /// <remarks/>
        public void userReadByAuthTokenAsync(AuthToken pAuthToken) {
            this.userReadByAuthTokenAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void userReadByAuthTokenAsync(AuthToken pAuthToken, object userState) {
            if ((this.userReadByAuthTokenOperationCompleted == null)) {
                this.userReadByAuthTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserReadByAuthTokenOperationCompleted);
            }
            this.InvokeAsync("userReadByAuthToken", new object[] {
                        pAuthToken}, this.userReadByAuthTokenOperationCompleted, userState);
        }
        
        private void OnuserReadByAuthTokenOperationCompleted(object arg) {
            if ((this.userReadByAuthTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userReadByAuthTokenCompleted(this, new userReadByAuthTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userUpdateReturn")]
        public RegistryUser userUpdate(AuthToken pAuthToken, RegistryUser pRbacRegistrySecUserBean) {
            object[] results = this.Invoke("userUpdate", new object[] {
                        pAuthToken,
                        pRbacRegistrySecUserBean});
            return ((RegistryUser)(results[0]));
        }
        
        /// <remarks/>
        public void userUpdateAsync(AuthToken pAuthToken, RegistryUser pRbacRegistrySecUserBean) {
            this.userUpdateAsync(pAuthToken, pRbacRegistrySecUserBean, null);
        }
        
        /// <remarks/>
        public void userUpdateAsync(AuthToken pAuthToken, RegistryUser pRbacRegistrySecUserBean, object userState) {
            if ((this.userUpdateOperationCompleted == null)) {
                this.userUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserUpdateOperationCompleted);
            }
            this.InvokeAsync("userUpdate", new object[] {
                        pAuthToken,
                        pRbacRegistrySecUserBean}, this.userUpdateOperationCompleted, userState);
        }
        
        private void OnuserUpdateOperationCompleted(object arg) {
            if ((this.userUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userUpdateCompleted(this, new userUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userActivateReturn")]
        public RegistryUser userActivate(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("userActivate", new object[] {
                        pAuthToken,
                        pId});
            return ((RegistryUser)(results[0]));
        }
        
        /// <remarks/>
        public void userActivateAsync(AuthToken pAuthToken, long pId) {
            this.userActivateAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void userActivateAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.userActivateOperationCompleted == null)) {
                this.userActivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserActivateOperationCompleted);
            }
            this.InvokeAsync("userActivate", new object[] {
                        pAuthToken,
                        pId}, this.userActivateOperationCompleted, userState);
        }
        
        private void OnuserActivateOperationCompleted(object arg) {
            if ((this.userActivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userActivateCompleted(this, new userActivateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userDeactivateReturn")]
        public RegistryUser userDeactivate(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("userDeactivate", new object[] {
                        pAuthToken,
                        pId});
            return ((RegistryUser)(results[0]));
        }
        
        /// <remarks/>
        public void userDeactivateAsync(AuthToken pAuthToken, long pId) {
            this.userDeactivateAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void userDeactivateAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.userDeactivateOperationCompleted == null)) {
                this.userDeactivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserDeactivateOperationCompleted);
            }
            this.InvokeAsync("userDeactivate", new object[] {
                        pAuthToken,
                        pId}, this.userDeactivateOperationCompleted, userState);
        }
        
        private void OnuserDeactivateOperationCompleted(object arg) {
            if ((this.userDeactivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userDeactivateCompleted(this, new userDeactivateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userLockoutReturn")]
        public RegistryUser userLockout(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("userLockout", new object[] {
                        pAuthToken,
                        pId});
            return ((RegistryUser)(results[0]));
        }
        
        /// <remarks/>
        public void userLockoutAsync(AuthToken pAuthToken, long pId) {
            this.userLockoutAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void userLockoutAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.userLockoutOperationCompleted == null)) {
                this.userLockoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserLockoutOperationCompleted);
            }
            this.InvokeAsync("userLockout", new object[] {
                        pAuthToken,
                        pId}, this.userLockoutOperationCompleted, userState);
        }
        
        private void OnuserLockoutOperationCompleted(object arg) {
            if ((this.userLockoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userLockoutCompleted(this, new userLockoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userUnapproveReturn")]
        public RegistryUser userUnapprove(AuthToken pAuthToken, long pId) {
            object[] results = this.Invoke("userUnapprove", new object[] {
                        pAuthToken,
                        pId});
            return ((RegistryUser)(results[0]));
        }
        
        /// <remarks/>
        public void userUnapproveAsync(AuthToken pAuthToken, long pId) {
            this.userUnapproveAsync(pAuthToken, pId, null);
        }
        
        /// <remarks/>
        public void userUnapproveAsync(AuthToken pAuthToken, long pId, object userState) {
            if ((this.userUnapproveOperationCompleted == null)) {
                this.userUnapproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserUnapproveOperationCompleted);
            }
            this.InvokeAsync("userUnapprove", new object[] {
                        pAuthToken,
                        pId}, this.userUnapproveOperationCompleted, userState);
        }
        
        private void OnuserUnapproveOperationCompleted(object arg) {
            if ((this.userUnapproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userUnapproveCompleted(this, new userUnapproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userQueryReturn")]
        public RegistryUser[] userQuery(AuthToken pAuthToken, UserCriteria pCriteria) {
            object[] results = this.Invoke("userQuery", new object[] {
                        pAuthToken,
                        pCriteria});
            return ((RegistryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void userQueryAsync(AuthToken pAuthToken, UserCriteria pCriteria) {
            this.userQueryAsync(pAuthToken, pCriteria, null);
        }
        
        /// <remarks/>
        public void userQueryAsync(AuthToken pAuthToken, UserCriteria pCriteria, object userState) {
            if ((this.userQueryOperationCompleted == null)) {
                this.userQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserQueryOperationCompleted);
            }
            this.InvokeAsync("userQuery", new object[] {
                        pAuthToken,
                        pCriteria}, this.userQueryOperationCompleted, userState);
        }
        
        private void OnuserQueryOperationCompleted(object arg) {
            if ((this.userQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userQueryCompleted(this, new userQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userAddRoleReturn")]
        public RegistryUser userAddRole(AuthToken pAuthToken, long pId, string pRoleName) {
            object[] results = this.Invoke("userAddRole", new object[] {
                        pAuthToken,
                        pId,
                        pRoleName});
            return ((RegistryUser)(results[0]));
        }
        
        /// <remarks/>
        public void userAddRoleAsync(AuthToken pAuthToken, long pId, string pRoleName) {
            this.userAddRoleAsync(pAuthToken, pId, pRoleName, null);
        }
        
        /// <remarks/>
        public void userAddRoleAsync(AuthToken pAuthToken, long pId, string pRoleName, object userState) {
            if ((this.userAddRoleOperationCompleted == null)) {
                this.userAddRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserAddRoleOperationCompleted);
            }
            this.InvokeAsync("userAddRole", new object[] {
                        pAuthToken,
                        pId,
                        pRoleName}, this.userAddRoleOperationCompleted, userState);
        }
        
        private void OnuserAddRoleOperationCompleted(object arg) {
            if ((this.userAddRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userAddRoleCompleted(this, new userAddRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("userRemoveRoleReturn")]
        public RegistryUser userRemoveRole(AuthToken pAuthToken, long pId, string pRoleName) {
            object[] results = this.Invoke("userRemoveRole", new object[] {
                        pAuthToken,
                        pId,
                        pRoleName});
            return ((RegistryUser)(results[0]));
        }
        
        /// <remarks/>
        public void userRemoveRoleAsync(AuthToken pAuthToken, long pId, string pRoleName) {
            this.userRemoveRoleAsync(pAuthToken, pId, pRoleName, null);
        }
        
        /// <remarks/>
        public void userRemoveRoleAsync(AuthToken pAuthToken, long pId, string pRoleName, object userState) {
            if ((this.userRemoveRoleOperationCompleted == null)) {
                this.userRemoveRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserRemoveRoleOperationCompleted);
            }
            this.InvokeAsync("userRemoveRole", new object[] {
                        pAuthToken,
                        pId,
                        pRoleName}, this.userRemoveRoleOperationCompleted, userState);
        }
        
        private void OnuserRemoveRoleOperationCompleted(object arg) {
            if ((this.userRemoveRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userRemoveRoleCompleted(this, new userRemoveRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void unitTestUserResetDatabase() {
            this.Invoke("unitTestUserResetDatabase", new object[0]);
        }
        
        /// <remarks/>
        public void unitTestUserResetDatabaseAsync() {
            this.unitTestUserResetDatabaseAsync(null);
        }
        
        /// <remarks/>
        public void unitTestUserResetDatabaseAsync(object userState) {
            if ((this.unitTestUserResetDatabaseOperationCompleted == null)) {
                this.unitTestUserResetDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunitTestUserResetDatabaseOperationCompleted);
            }
            this.InvokeAsync("unitTestUserResetDatabase", new object[0], this.unitTestUserResetDatabaseOperationCompleted, userState);
        }
        
        private void OnunitTestUserResetDatabaseOperationCompleted(object arg) {
            if ((this.unitTestUserResetDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unitTestUserResetDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("customAccessSettingNamesGetReturn")]
        public string[] customAccessSettingNamesGet(AuthToken pAuthToken, string pType) {
            object[] results = this.Invoke("customAccessSettingNamesGet", new object[] {
                        pAuthToken,
                        pType});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void customAccessSettingNamesGetAsync(AuthToken pAuthToken, string pType) {
            this.customAccessSettingNamesGetAsync(pAuthToken, pType, null);
        }
        
        /// <remarks/>
        public void customAccessSettingNamesGetAsync(AuthToken pAuthToken, string pType, object userState) {
            if ((this.customAccessSettingNamesGetOperationCompleted == null)) {
                this.customAccessSettingNamesGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncustomAccessSettingNamesGetOperationCompleted);
            }
            this.InvokeAsync("customAccessSettingNamesGet", new object[] {
                        pAuthToken,
                        pType}, this.customAccessSettingNamesGetOperationCompleted, userState);
        }
        
        private void OncustomAccessSettingNamesGetOperationCompleted(object arg) {
            if ((this.customAccessSettingNamesGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.customAccessSettingNamesGetCompleted(this, new customAccessSettingNamesGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("customAccessSettingDefaultNamesGetReturn")]
        public string[] customAccessSettingDefaultNamesGet(AuthToken pAuthToken, string pType) {
            object[] results = this.Invoke("customAccessSettingDefaultNamesGet", new object[] {
                        pAuthToken,
                        pType});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void customAccessSettingDefaultNamesGetAsync(AuthToken pAuthToken, string pType) {
            this.customAccessSettingDefaultNamesGetAsync(pAuthToken, pType, null);
        }
        
        /// <remarks/>
        public void customAccessSettingDefaultNamesGetAsync(AuthToken pAuthToken, string pType, object userState) {
            if ((this.customAccessSettingDefaultNamesGetOperationCompleted == null)) {
                this.customAccessSettingDefaultNamesGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncustomAccessSettingDefaultNamesGetOperationCompleted);
            }
            this.InvokeAsync("customAccessSettingDefaultNamesGet", new object[] {
                        pAuthToken,
                        pType}, this.customAccessSettingDefaultNamesGetOperationCompleted, userState);
        }
        
        private void OncustomAccessSettingDefaultNamesGetOperationCompleted(object arg) {
            if ((this.customAccessSettingDefaultNamesGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.customAccessSettingDefaultNamesGetCompleted(this, new customAccessSettingDefaultNamesGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("customAccessSettingTypesGetReturn")]
        public string[] customAccessSettingTypesGet(AuthToken pAuthToken) {
            object[] results = this.Invoke("customAccessSettingTypesGet", new object[] {
                        pAuthToken});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void customAccessSettingTypesGetAsync(AuthToken pAuthToken) {
            this.customAccessSettingTypesGetAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void customAccessSettingTypesGetAsync(AuthToken pAuthToken, object userState) {
            if ((this.customAccessSettingTypesGetOperationCompleted == null)) {
                this.customAccessSettingTypesGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncustomAccessSettingTypesGetOperationCompleted);
            }
            this.InvokeAsync("customAccessSettingTypesGet", new object[] {
                        pAuthToken}, this.customAccessSettingTypesGetOperationCompleted, userState);
        }
        
        private void OncustomAccessSettingTypesGetOperationCompleted(object arg) {
            if ((this.customAccessSettingTypesGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.customAccessSettingTypesGetCompleted(this, new customAccessSettingTypesGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("rbacHasPermissionReturn")]
        public bool rbacHasPermission(AuthToken pAuthToken, long pUserID, string[] pRoleContextNames, string pPermissionName) {
            object[] results = this.Invoke("rbacHasPermission", new object[] {
                        pAuthToken,
                        pUserID,
                        pRoleContextNames,
                        pPermissionName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void rbacHasPermissionAsync(AuthToken pAuthToken, long pUserID, string[] pRoleContextNames, string pPermissionName) {
            this.rbacHasPermissionAsync(pAuthToken, pUserID, pRoleContextNames, pPermissionName, null);
        }
        
        /// <remarks/>
        public void rbacHasPermissionAsync(AuthToken pAuthToken, long pUserID, string[] pRoleContextNames, string pPermissionName, object userState) {
            if ((this.rbacHasPermissionOperationCompleted == null)) {
                this.rbacHasPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrbacHasPermissionOperationCompleted);
            }
            this.InvokeAsync("rbacHasPermission", new object[] {
                        pAuthToken,
                        pUserID,
                        pRoleContextNames,
                        pPermissionName}, this.rbacHasPermissionOperationCompleted, userState);
        }
        
        private void OnrbacHasPermissionOperationCompleted(object arg) {
            if ((this.rbacHasPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rbacHasPermissionCompleted(this, new rbacHasPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("roleCreateReturn")]
        public Role roleCreate(AuthToken pAuthToken, string pName, string pDesc, bool pDefaultForNewUser) {
            object[] results = this.Invoke("roleCreate", new object[] {
                        pAuthToken,
                        pName,
                        pDesc,
                        pDefaultForNewUser});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void roleCreateAsync(AuthToken pAuthToken, string pName, string pDesc, bool pDefaultForNewUser) {
            this.roleCreateAsync(pAuthToken, pName, pDesc, pDefaultForNewUser, null);
        }
        
        /// <remarks/>
        public void roleCreateAsync(AuthToken pAuthToken, string pName, string pDesc, bool pDefaultForNewUser, object userState) {
            if ((this.roleCreateOperationCompleted == null)) {
                this.roleCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleCreateOperationCompleted);
            }
            this.InvokeAsync("roleCreate", new object[] {
                        pAuthToken,
                        pName,
                        pDesc,
                        pDefaultForNewUser}, this.roleCreateOperationCompleted, userState);
        }
        
        private void OnroleCreateOperationCompleted(object arg) {
            if ((this.roleCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleCreateCompleted(this, new roleCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("roleReadReturn")]
        public Role roleRead(AuthToken pAuthToken, string pName) {
            object[] results = this.Invoke("roleRead", new object[] {
                        pAuthToken,
                        pName});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void roleReadAsync(AuthToken pAuthToken, string pName) {
            this.roleReadAsync(pAuthToken, pName, null);
        }
        
        /// <remarks/>
        public void roleReadAsync(AuthToken pAuthToken, string pName, object userState) {
            if ((this.roleReadOperationCompleted == null)) {
                this.roleReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleReadOperationCompleted);
            }
            this.InvokeAsync("roleRead", new object[] {
                        pAuthToken,
                        pName}, this.roleReadOperationCompleted, userState);
        }
        
        private void OnroleReadOperationCompleted(object arg) {
            if ((this.roleReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleReadCompleted(this, new roleReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("roleUpdateReturn")]
        public Role roleUpdate(AuthToken pAuthToken, Role pRoleType) {
            object[] results = this.Invoke("roleUpdate", new object[] {
                        pAuthToken,
                        pRoleType});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void roleUpdateAsync(AuthToken pAuthToken, Role pRoleType) {
            this.roleUpdateAsync(pAuthToken, pRoleType, null);
        }
        
        /// <remarks/>
        public void roleUpdateAsync(AuthToken pAuthToken, Role pRoleType, object userState) {
            if ((this.roleUpdateOperationCompleted == null)) {
                this.roleUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleUpdateOperationCompleted);
            }
            this.InvokeAsync("roleUpdate", new object[] {
                        pAuthToken,
                        pRoleType}, this.roleUpdateOperationCompleted, userState);
        }
        
        private void OnroleUpdateOperationCompleted(object arg) {
            if ((this.roleUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleUpdateCompleted(this, new roleUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void roleDelete(AuthToken pAuthToken, string pName) {
            this.Invoke("roleDelete", new object[] {
                        pAuthToken,
                        pName});
        }
        
        /// <remarks/>
        public void roleDeleteAsync(AuthToken pAuthToken, string pName) {
            this.roleDeleteAsync(pAuthToken, pName, null);
        }
        
        /// <remarks/>
        public void roleDeleteAsync(AuthToken pAuthToken, string pName, object userState) {
            if ((this.roleDeleteOperationCompleted == null)) {
                this.roleDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleDeleteOperationCompleted);
            }
            this.InvokeAsync("roleDelete", new object[] {
                        pAuthToken,
                        pName}, this.roleDeleteOperationCompleted, userState);
        }
        
        private void OnroleDeleteOperationCompleted(object arg) {
            if ((this.roleDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("roleQueryReturn")]
        public Role[] roleQuery(AuthToken pAuthToken, RoleCriteria pCriteria) {
            object[] results = this.Invoke("roleQuery", new object[] {
                        pAuthToken,
                        pCriteria});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void roleQueryAsync(AuthToken pAuthToken, RoleCriteria pCriteria) {
            this.roleQueryAsync(pAuthToken, pCriteria, null);
        }
        
        /// <remarks/>
        public void roleQueryAsync(AuthToken pAuthToken, RoleCriteria pCriteria, object userState) {
            if ((this.roleQueryOperationCompleted == null)) {
                this.roleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnroleQueryOperationCompleted);
            }
            this.InvokeAsync("roleQuery", new object[] {
                        pAuthToken,
                        pCriteria}, this.roleQueryOperationCompleted, userState);
        }
        
        private void OnroleQueryOperationCompleted(object arg) {
            if ((this.roleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.roleQueryCompleted(this, new roleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("relationshipTypeCreateReturn")]
        public RelationshipType relationshipTypeCreate(AuthToken pAuthToken, string pName) {
            object[] results = this.Invoke("relationshipTypeCreate", new object[] {
                        pAuthToken,
                        pName});
            return ((RelationshipType)(results[0]));
        }
        
        /// <remarks/>
        public void relationshipTypeCreateAsync(AuthToken pAuthToken, string pName) {
            this.relationshipTypeCreateAsync(pAuthToken, pName, null);
        }
        
        /// <remarks/>
        public void relationshipTypeCreateAsync(AuthToken pAuthToken, string pName, object userState) {
            if ((this.relationshipTypeCreateOperationCompleted == null)) {
                this.relationshipTypeCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelationshipTypeCreateOperationCompleted);
            }
            this.InvokeAsync("relationshipTypeCreate", new object[] {
                        pAuthToken,
                        pName}, this.relationshipTypeCreateOperationCompleted, userState);
        }
        
        private void OnrelationshipTypeCreateOperationCompleted(object arg) {
            if ((this.relationshipTypeCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relationshipTypeCreateCompleted(this, new relationshipTypeCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("relationshipTypeReadReturn")]
        public RelationshipType relationshipTypeRead(AuthToken pAuthToken, long pID) {
            object[] results = this.Invoke("relationshipTypeRead", new object[] {
                        pAuthToken,
                        pID});
            return ((RelationshipType)(results[0]));
        }
        
        /// <remarks/>
        public void relationshipTypeReadAsync(AuthToken pAuthToken, long pID) {
            this.relationshipTypeReadAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void relationshipTypeReadAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.relationshipTypeReadOperationCompleted == null)) {
                this.relationshipTypeReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelationshipTypeReadOperationCompleted);
            }
            this.InvokeAsync("relationshipTypeRead", new object[] {
                        pAuthToken,
                        pID}, this.relationshipTypeReadOperationCompleted, userState);
        }
        
        private void OnrelationshipTypeReadOperationCompleted(object arg) {
            if ((this.relationshipTypeReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relationshipTypeReadCompleted(this, new relationshipTypeReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("relationshipTypeUpdateReturn")]
        public RelationshipType relationshipTypeUpdate(AuthToken pAuthToken, RelationshipType pRelationshipType) {
            object[] results = this.Invoke("relationshipTypeUpdate", new object[] {
                        pAuthToken,
                        pRelationshipType});
            return ((RelationshipType)(results[0]));
        }
        
        /// <remarks/>
        public void relationshipTypeUpdateAsync(AuthToken pAuthToken, RelationshipType pRelationshipType) {
            this.relationshipTypeUpdateAsync(pAuthToken, pRelationshipType, null);
        }
        
        /// <remarks/>
        public void relationshipTypeUpdateAsync(AuthToken pAuthToken, RelationshipType pRelationshipType, object userState) {
            if ((this.relationshipTypeUpdateOperationCompleted == null)) {
                this.relationshipTypeUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelationshipTypeUpdateOperationCompleted);
            }
            this.InvokeAsync("relationshipTypeUpdate", new object[] {
                        pAuthToken,
                        pRelationshipType}, this.relationshipTypeUpdateOperationCompleted, userState);
        }
        
        private void OnrelationshipTypeUpdateOperationCompleted(object arg) {
            if ((this.relationshipTypeUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relationshipTypeUpdateCompleted(this, new relationshipTypeUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void relationshipTypeDelete(AuthToken pAuthToken, long pID) {
            this.Invoke("relationshipTypeDelete", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void relationshipTypeDeleteAsync(AuthToken pAuthToken, long pID) {
            this.relationshipTypeDeleteAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void relationshipTypeDeleteAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.relationshipTypeDeleteOperationCompleted == null)) {
                this.relationshipTypeDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelationshipTypeDeleteOperationCompleted);
            }
            this.InvokeAsync("relationshipTypeDelete", new object[] {
                        pAuthToken,
                        pID}, this.relationshipTypeDeleteOperationCompleted, userState);
        }
        
        private void OnrelationshipTypeDeleteOperationCompleted(object arg) {
            if ((this.relationshipTypeDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relationshipTypeDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("relationshipTypeQueryReturn")]
        public RelationshipType[] relationshipTypeQuery(AuthToken pAuthToken, RelationshipTypeCriteria pQuery) {
            object[] results = this.Invoke("relationshipTypeQuery", new object[] {
                        pAuthToken,
                        pQuery});
            return ((RelationshipType[])(results[0]));
        }
        
        /// <remarks/>
        public void relationshipTypeQueryAsync(AuthToken pAuthToken, RelationshipTypeCriteria pQuery) {
            this.relationshipTypeQueryAsync(pAuthToken, pQuery, null);
        }
        
        /// <remarks/>
        public void relationshipTypeQueryAsync(AuthToken pAuthToken, RelationshipTypeCriteria pQuery, object userState) {
            if ((this.relationshipTypeQueryOperationCompleted == null)) {
                this.relationshipTypeQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelationshipTypeQueryOperationCompleted);
            }
            this.InvokeAsync("relationshipTypeQuery", new object[] {
                        pAuthToken,
                        pQuery}, this.relationshipTypeQueryOperationCompleted, userState);
        }
        
        private void OnrelationshipTypeQueryOperationCompleted(object arg) {
            if ((this.relationshipTypeQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relationshipTypeQueryCompleted(this, new relationshipTypeQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("surveyTakenReadReturn")]
        public SurveyTaken surveyTakenRead(AuthToken pAuthToken, Extraction pExtraction) {
            object[] results = this.Invoke("surveyTakenRead", new object[] {
                        pAuthToken,
                        pExtraction});
            return ((SurveyTaken)(results[0]));
        }
        
        /// <remarks/>
        public void surveyTakenReadAsync(AuthToken pAuthToken, Extraction pExtraction) {
            this.surveyTakenReadAsync(pAuthToken, pExtraction, null);
        }
        
        /// <remarks/>
        public void surveyTakenReadAsync(AuthToken pAuthToken, Extraction pExtraction, object userState) {
            if ((this.surveyTakenReadOperationCompleted == null)) {
                this.surveyTakenReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsurveyTakenReadOperationCompleted);
            }
            this.InvokeAsync("surveyTakenRead", new object[] {
                        pAuthToken,
                        pExtraction}, this.surveyTakenReadOperationCompleted, userState);
        }
        
        private void OnsurveyTakenReadOperationCompleted(object arg) {
            if ((this.surveyTakenReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.surveyTakenReadCompleted(this, new surveyTakenReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("surveyReadQuestionsReturn")]
        public Question[] surveyReadQuestions(AuthToken pAuthToken) {
            object[] results = this.Invoke("surveyReadQuestions", new object[] {
                        pAuthToken});
            return ((Question[])(results[0]));
        }
        
        /// <remarks/>
        public void surveyReadQuestionsAsync(AuthToken pAuthToken) {
            this.surveyReadQuestionsAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void surveyReadQuestionsAsync(AuthToken pAuthToken, object userState) {
            if ((this.surveyReadQuestionsOperationCompleted == null)) {
                this.surveyReadQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsurveyReadQuestionsOperationCompleted);
            }
            this.InvokeAsync("surveyReadQuestions", new object[] {
                        pAuthToken}, this.surveyReadQuestionsOperationCompleted, userState);
        }
        
        private void OnsurveyReadQuestionsOperationCompleted(object arg) {
            if ((this.surveyReadQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.surveyReadQuestionsCompleted(this, new surveyReadQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("surveyTakenUpdateReturn")]
        public SurveyTaken surveyTakenUpdate(AuthToken pAuthToken, SurveyTaken pSurveyTaken) {
            object[] results = this.Invoke("surveyTakenUpdate", new object[] {
                        pAuthToken,
                        pSurveyTaken});
            return ((SurveyTaken)(results[0]));
        }
        
        /// <remarks/>
        public void surveyTakenUpdateAsync(AuthToken pAuthToken, SurveyTaken pSurveyTaken) {
            this.surveyTakenUpdateAsync(pAuthToken, pSurveyTaken, null);
        }
        
        /// <remarks/>
        public void surveyTakenUpdateAsync(AuthToken pAuthToken, SurveyTaken pSurveyTaken, object userState) {
            if ((this.surveyTakenUpdateOperationCompleted == null)) {
                this.surveyTakenUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsurveyTakenUpdateOperationCompleted);
            }
            this.InvokeAsync("surveyTakenUpdate", new object[] {
                        pAuthToken,
                        pSurveyTaken}, this.surveyTakenUpdateOperationCompleted, userState);
        }
        
        private void OnsurveyTakenUpdateOperationCompleted(object arg) {
            if ((this.surveyTakenUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.surveyTakenUpdateCompleted(this, new surveyTakenUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("vendorCreateReturn")]
        public Vendor vendorCreate(AuthToken pAuthToken, string pName) {
            object[] results = this.Invoke("vendorCreate", new object[] {
                        pAuthToken,
                        pName});
            return ((Vendor)(results[0]));
        }
        
        /// <remarks/>
        public void vendorCreateAsync(AuthToken pAuthToken, string pName) {
            this.vendorCreateAsync(pAuthToken, pName, null);
        }
        
        /// <remarks/>
        public void vendorCreateAsync(AuthToken pAuthToken, string pName, object userState) {
            if ((this.vendorCreateOperationCompleted == null)) {
                this.vendorCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvendorCreateOperationCompleted);
            }
            this.InvokeAsync("vendorCreate", new object[] {
                        pAuthToken,
                        pName}, this.vendorCreateOperationCompleted, userState);
        }
        
        private void OnvendorCreateOperationCompleted(object arg) {
            if ((this.vendorCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.vendorCreateCompleted(this, new vendorCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("vendorReadReturn")]
        public Vendor vendorRead(AuthToken pAuthToken, long pID) {
            object[] results = this.Invoke("vendorRead", new object[] {
                        pAuthToken,
                        pID});
            return ((Vendor)(results[0]));
        }
        
        /// <remarks/>
        public void vendorReadAsync(AuthToken pAuthToken, long pID) {
            this.vendorReadAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void vendorReadAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.vendorReadOperationCompleted == null)) {
                this.vendorReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvendorReadOperationCompleted);
            }
            this.InvokeAsync("vendorRead", new object[] {
                        pAuthToken,
                        pID}, this.vendorReadOperationCompleted, userState);
        }
        
        private void OnvendorReadOperationCompleted(object arg) {
            if ((this.vendorReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.vendorReadCompleted(this, new vendorReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("vendorUpdateReturn")]
        public Vendor vendorUpdate(AuthToken pAuthToken, Vendor pVendor) {
            object[] results = this.Invoke("vendorUpdate", new object[] {
                        pAuthToken,
                        pVendor});
            return ((Vendor)(results[0]));
        }
        
        /// <remarks/>
        public void vendorUpdateAsync(AuthToken pAuthToken, Vendor pVendor) {
            this.vendorUpdateAsync(pAuthToken, pVendor, null);
        }
        
        /// <remarks/>
        public void vendorUpdateAsync(AuthToken pAuthToken, Vendor pVendor, object userState) {
            if ((this.vendorUpdateOperationCompleted == null)) {
                this.vendorUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvendorUpdateOperationCompleted);
            }
            this.InvokeAsync("vendorUpdate", new object[] {
                        pAuthToken,
                        pVendor}, this.vendorUpdateOperationCompleted, userState);
        }
        
        private void OnvendorUpdateOperationCompleted(object arg) {
            if ((this.vendorUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.vendorUpdateCompleted(this, new vendorUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void vendorDelete(AuthToken pAuthToken, long pID) {
            this.Invoke("vendorDelete", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void vendorDeleteAsync(AuthToken pAuthToken, long pID) {
            this.vendorDeleteAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void vendorDeleteAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.vendorDeleteOperationCompleted == null)) {
                this.vendorDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvendorDeleteOperationCompleted);
            }
            this.InvokeAsync("vendorDelete", new object[] {
                        pAuthToken,
                        pID}, this.vendorDeleteOperationCompleted, userState);
        }
        
        private void OnvendorDeleteOperationCompleted(object arg) {
            if ((this.vendorDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.vendorDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("vendorQueryReturn")]
        public Vendor[] vendorQuery(AuthToken pAuthToken, VendorCriteria pQuery) {
            object[] results = this.Invoke("vendorQuery", new object[] {
                        pAuthToken,
                        pQuery});
            return ((Vendor[])(results[0]));
        }
        
        /// <remarks/>
        public void vendorQueryAsync(AuthToken pAuthToken, VendorCriteria pQuery) {
            this.vendorQueryAsync(pAuthToken, pQuery, null);
        }
        
        /// <remarks/>
        public void vendorQueryAsync(AuthToken pAuthToken, VendorCriteria pQuery, object userState) {
            if ((this.vendorQueryOperationCompleted == null)) {
                this.vendorQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvendorQueryOperationCompleted);
            }
            this.InvokeAsync("vendorQuery", new object[] {
                        pAuthToken,
                        pQuery}, this.vendorQueryOperationCompleted, userState);
        }
        
        private void OnvendorQueryOperationCompleted(object arg) {
            if ((this.vendorQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.vendorQueryCompleted(this, new vendorQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("exportListJobsReturn")]
        public ImpExpJob[] exportListJobs(AuthToken pAuthToken) {
            object[] results = this.Invoke("exportListJobs", new object[] {
                        pAuthToken});
            return ((ImpExpJob[])(results[0]));
        }
        
        /// <remarks/>
        public void exportListJobsAsync(AuthToken pAuthToken) {
            this.exportListJobsAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void exportListJobsAsync(AuthToken pAuthToken, object userState) {
            if ((this.exportListJobsOperationCompleted == null)) {
                this.exportListJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportListJobsOperationCompleted);
            }
            this.InvokeAsync("exportListJobs", new object[] {
                        pAuthToken}, this.exportListJobsOperationCompleted, userState);
        }
        
        private void OnexportListJobsOperationCompleted(object arg) {
            if ((this.exportListJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportListJobsCompleted(this, new exportListJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("exportExecuteReturn")]
        public ImpExpJob exportExecute(AuthToken pAuthToken, string pExportFormat, string[] pExportFormatQualifiers, string pDesc, string pQueryFormat, string pQuery) {
            object[] results = this.Invoke("exportExecute", new object[] {
                        pAuthToken,
                        pExportFormat,
                        pExportFormatQualifiers,
                        pDesc,
                        pQueryFormat,
                        pQuery});
            return ((ImpExpJob)(results[0]));
        }
        
        /// <remarks/>
        public void exportExecuteAsync(AuthToken pAuthToken, string pExportFormat, string[] pExportFormatQualifiers, string pDesc, string pQueryFormat, string pQuery) {
            this.exportExecuteAsync(pAuthToken, pExportFormat, pExportFormatQualifiers, pDesc, pQueryFormat, pQuery, null);
        }
        
        /// <remarks/>
        public void exportExecuteAsync(AuthToken pAuthToken, string pExportFormat, string[] pExportFormatQualifiers, string pDesc, string pQueryFormat, string pQuery, object userState) {
            if ((this.exportExecuteOperationCompleted == null)) {
                this.exportExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportExecuteOperationCompleted);
            }
            this.InvokeAsync("exportExecute", new object[] {
                        pAuthToken,
                        pExportFormat,
                        pExportFormatQualifiers,
                        pDesc,
                        pQueryFormat,
                        pQuery}, this.exportExecuteOperationCompleted, userState);
        }
        
        private void OnexportExecuteOperationCompleted(object arg) {
            if ((this.exportExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportExecuteCompleted(this, new exportExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("exportGetAuditB64Return", DataType="base64Binary")]
        public byte[] exportGetAuditB64(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            object[] results = this.Invoke("exportGetAuditB64", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void exportGetAuditB64Async(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            this.exportGetAuditB64Async(pAuthToken, pJobBean, pAuditFormat, null);
        }
        
        /// <remarks/>
        public void exportGetAuditB64Async(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat, object userState) {
            if ((this.exportGetAuditB64OperationCompleted == null)) {
                this.exportGetAuditB64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportGetAuditB64OperationCompleted);
            }
            this.InvokeAsync("exportGetAuditB64", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat}, this.exportGetAuditB64OperationCompleted, userState);
        }
        
        private void OnexportGetAuditB64OperationCompleted(object arg) {
            if ((this.exportGetAuditB64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportGetAuditB64Completed(this, new exportGetAuditB64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void exportGetAuditDIME(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            this.Invoke("exportGetAuditDIME", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat});
        }
        
        /// <remarks/>
        public void exportGetAuditDIMEAsync(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            this.exportGetAuditDIMEAsync(pAuthToken, pJobBean, pAuditFormat, null);
        }
        
        /// <remarks/>
        public void exportGetAuditDIMEAsync(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat, object userState) {
            if ((this.exportGetAuditDIMEOperationCompleted == null)) {
                this.exportGetAuditDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportGetAuditDIMEOperationCompleted);
            }
            this.InvokeAsync("exportGetAuditDIME", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat}, this.exportGetAuditDIMEOperationCompleted, userState);
        }
        
        private void OnexportGetAuditDIMEOperationCompleted(object arg) {
            if ((this.exportGetAuditDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportGetAuditDIMECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void exportGetAuditSwA(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            this.Invoke("exportGetAuditSwA", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat});
        }
        
        /// <remarks/>
        public void exportGetAuditSwAAsync(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            this.exportGetAuditSwAAsync(pAuthToken, pJobBean, pAuditFormat, null);
        }
        
        /// <remarks/>
        public void exportGetAuditSwAAsync(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat, object userState) {
            if ((this.exportGetAuditSwAOperationCompleted == null)) {
                this.exportGetAuditSwAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportGetAuditSwAOperationCompleted);
            }
            this.InvokeAsync("exportGetAuditSwA", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat}, this.exportGetAuditSwAOperationCompleted, userState);
        }
        
        private void OnexportGetAuditSwAOperationCompleted(object arg) {
            if ((this.exportGetAuditSwACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportGetAuditSwACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("exportGetLatestAuditMsgReturn")]
        public AuditMsg exportGetLatestAuditMsg(AuthToken pAuthToken, ImpExpJob pJobBean) {
            object[] results = this.Invoke("exportGetLatestAuditMsg", new object[] {
                        pAuthToken,
                        pJobBean});
            return ((AuditMsg)(results[0]));
        }
        
        /// <remarks/>
        public void exportGetLatestAuditMsgAsync(AuthToken pAuthToken, ImpExpJob pJobBean) {
            this.exportGetLatestAuditMsgAsync(pAuthToken, pJobBean, null);
        }
        
        /// <remarks/>
        public void exportGetLatestAuditMsgAsync(AuthToken pAuthToken, ImpExpJob pJobBean, object userState) {
            if ((this.exportGetLatestAuditMsgOperationCompleted == null)) {
                this.exportGetLatestAuditMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportGetLatestAuditMsgOperationCompleted);
            }
            this.InvokeAsync("exportGetLatestAuditMsg", new object[] {
                        pAuthToken,
                        pJobBean}, this.exportGetLatestAuditMsgOperationCompleted, userState);
        }
        
        private void OnexportGetLatestAuditMsgOperationCompleted(object arg) {
            if ((this.exportGetLatestAuditMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportGetLatestAuditMsgCompleted(this, new exportGetLatestAuditMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("importGetAuditB64Return", DataType="base64Binary")]
        public byte[] importGetAuditB64(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            object[] results = this.Invoke("importGetAuditB64", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void importGetAuditB64Async(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            this.importGetAuditB64Async(pAuthToken, pJobBean, pAuditFormat, null);
        }
        
        /// <remarks/>
        public void importGetAuditB64Async(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat, object userState) {
            if ((this.importGetAuditB64OperationCompleted == null)) {
                this.importGetAuditB64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportGetAuditB64OperationCompleted);
            }
            this.InvokeAsync("importGetAuditB64", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat}, this.importGetAuditB64OperationCompleted, userState);
        }
        
        private void OnimportGetAuditB64OperationCompleted(object arg) {
            if ((this.importGetAuditB64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importGetAuditB64Completed(this, new importGetAuditB64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void importGetAuditDIME(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            this.Invoke("importGetAuditDIME", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat});
        }
        
        /// <remarks/>
        public void importGetAuditDIMEAsync(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            this.importGetAuditDIMEAsync(pAuthToken, pJobBean, pAuditFormat, null);
        }
        
        /// <remarks/>
        public void importGetAuditDIMEAsync(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat, object userState) {
            if ((this.importGetAuditDIMEOperationCompleted == null)) {
                this.importGetAuditDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportGetAuditDIMEOperationCompleted);
            }
            this.InvokeAsync("importGetAuditDIME", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat}, this.importGetAuditDIMEOperationCompleted, userState);
        }
        
        private void OnimportGetAuditDIMEOperationCompleted(object arg) {
            if ((this.importGetAuditDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importGetAuditDIMECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void importGetAuditSwA(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            this.Invoke("importGetAuditSwA", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat});
        }
        
        /// <remarks/>
        public void importGetAuditSwAAsync(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat) {
            this.importGetAuditSwAAsync(pAuthToken, pJobBean, pAuditFormat, null);
        }
        
        /// <remarks/>
        public void importGetAuditSwAAsync(AuthToken pAuthToken, ImpExpJob pJobBean, string pAuditFormat, object userState) {
            if ((this.importGetAuditSwAOperationCompleted == null)) {
                this.importGetAuditSwAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportGetAuditSwAOperationCompleted);
            }
            this.InvokeAsync("importGetAuditSwA", new object[] {
                        pAuthToken,
                        pJobBean,
                        pAuditFormat}, this.importGetAuditSwAOperationCompleted, userState);
        }
        
        private void OnimportGetAuditSwAOperationCompleted(object arg) {
            if ((this.importGetAuditSwACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importGetAuditSwACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("importGetLatestAuditMsgReturn")]
        public AuditMsg importGetLatestAuditMsg(AuthToken pAuthToken, ImpExpJob pJobBean) {
            object[] results = this.Invoke("importGetLatestAuditMsg", new object[] {
                        pAuthToken,
                        pJobBean});
            return ((AuditMsg)(results[0]));
        }
        
        /// <remarks/>
        public void importGetLatestAuditMsgAsync(AuthToken pAuthToken, ImpExpJob pJobBean) {
            this.importGetLatestAuditMsgAsync(pAuthToken, pJobBean, null);
        }
        
        /// <remarks/>
        public void importGetLatestAuditMsgAsync(AuthToken pAuthToken, ImpExpJob pJobBean, object userState) {
            if ((this.importGetLatestAuditMsgOperationCompleted == null)) {
                this.importGetLatestAuditMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportGetLatestAuditMsgOperationCompleted);
            }
            this.InvokeAsync("importGetLatestAuditMsg", new object[] {
                        pAuthToken,
                        pJobBean}, this.importGetLatestAuditMsgOperationCompleted, userState);
        }
        
        private void OnimportGetLatestAuditMsgOperationCompleted(object arg) {
            if ((this.importGetLatestAuditMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importGetLatestAuditMsgCompleted(this, new importGetLatestAuditMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("exportStatusReturn")]
        public ImpExpJob exportStatus(AuthToken pAuthToken, ImpExpJob pJob) {
            object[] results = this.Invoke("exportStatus", new object[] {
                        pAuthToken,
                        pJob});
            return ((ImpExpJob)(results[0]));
        }
        
        /// <remarks/>
        public void exportStatusAsync(AuthToken pAuthToken, ImpExpJob pJob) {
            this.exportStatusAsync(pAuthToken, pJob, null);
        }
        
        /// <remarks/>
        public void exportStatusAsync(AuthToken pAuthToken, ImpExpJob pJob, object userState) {
            if ((this.exportStatusOperationCompleted == null)) {
                this.exportStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportStatusOperationCompleted);
            }
            this.InvokeAsync("exportStatus", new object[] {
                        pAuthToken,
                        pJob}, this.exportStatusOperationCompleted, userState);
        }
        
        private void OnexportStatusOperationCompleted(object arg) {
            if ((this.exportStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportStatusCompleted(this, new exportStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void exportKill(AuthToken pAuthToken, ImpExpJob pJob) {
            this.Invoke("exportKill", new object[] {
                        pAuthToken,
                        pJob});
        }
        
        /// <remarks/>
        public void exportKillAsync(AuthToken pAuthToken, ImpExpJob pJob) {
            this.exportKillAsync(pAuthToken, pJob, null);
        }
        
        /// <remarks/>
        public void exportKillAsync(AuthToken pAuthToken, ImpExpJob pJob, object userState) {
            if ((this.exportKillOperationCompleted == null)) {
                this.exportKillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportKillOperationCompleted);
            }
            this.InvokeAsync("exportKill", new object[] {
                        pAuthToken,
                        pJob}, this.exportKillOperationCompleted, userState);
        }
        
        private void OnexportKillOperationCompleted(object arg) {
            if ((this.exportKillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportKillCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("exportGetResultsB64Return", DataType="base64Binary")]
        public byte[] exportGetResultsB64(AuthToken pAuthToken, ImpExpJob pJob) {
            object[] results = this.Invoke("exportGetResultsB64", new object[] {
                        pAuthToken,
                        pJob});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void exportGetResultsB64Async(AuthToken pAuthToken, ImpExpJob pJob) {
            this.exportGetResultsB64Async(pAuthToken, pJob, null);
        }
        
        /// <remarks/>
        public void exportGetResultsB64Async(AuthToken pAuthToken, ImpExpJob pJob, object userState) {
            if ((this.exportGetResultsB64OperationCompleted == null)) {
                this.exportGetResultsB64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportGetResultsB64OperationCompleted);
            }
            this.InvokeAsync("exportGetResultsB64", new object[] {
                        pAuthToken,
                        pJob}, this.exportGetResultsB64OperationCompleted, userState);
        }
        
        private void OnexportGetResultsB64OperationCompleted(object arg) {
            if ((this.exportGetResultsB64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportGetResultsB64Completed(this, new exportGetResultsB64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void exportGetResultsDIME(AuthToken pAuthToken, ImpExpJob pJob) {
            this.Invoke("exportGetResultsDIME", new object[] {
                        pAuthToken,
                        pJob});
        }
        
        /// <remarks/>
        public void exportGetResultsDIMEAsync(AuthToken pAuthToken, ImpExpJob pJob) {
            this.exportGetResultsDIMEAsync(pAuthToken, pJob, null);
        }
        
        /// <remarks/>
        public void exportGetResultsDIMEAsync(AuthToken pAuthToken, ImpExpJob pJob, object userState) {
            if ((this.exportGetResultsDIMEOperationCompleted == null)) {
                this.exportGetResultsDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportGetResultsDIMEOperationCompleted);
            }
            this.InvokeAsync("exportGetResultsDIME", new object[] {
                        pAuthToken,
                        pJob}, this.exportGetResultsDIMEOperationCompleted, userState);
        }
        
        private void OnexportGetResultsDIMEOperationCompleted(object arg) {
            if ((this.exportGetResultsDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportGetResultsDIMECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void exportGetResultsSwA(AuthToken pAuthToken, ImpExpJob pJob) {
            this.Invoke("exportGetResultsSwA", new object[] {
                        pAuthToken,
                        pJob});
        }
        
        /// <remarks/>
        public void exportGetResultsSwAAsync(AuthToken pAuthToken, ImpExpJob pJob) {
            this.exportGetResultsSwAAsync(pAuthToken, pJob, null);
        }
        
        /// <remarks/>
        public void exportGetResultsSwAAsync(AuthToken pAuthToken, ImpExpJob pJob, object userState) {
            if ((this.exportGetResultsSwAOperationCompleted == null)) {
                this.exportGetResultsSwAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportGetResultsSwAOperationCompleted);
            }
            this.InvokeAsync("exportGetResultsSwA", new object[] {
                        pAuthToken,
                        pJob}, this.exportGetResultsSwAOperationCompleted, userState);
        }
        
        private void OnexportGetResultsSwAOperationCompleted(object arg) {
            if ((this.exportGetResultsSwACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportGetResultsSwACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void exportCleanup(AuthToken pAuthToken, ImpExpJob pJob) {
            this.Invoke("exportCleanup", new object[] {
                        pAuthToken,
                        pJob});
        }
        
        /// <remarks/>
        public void exportCleanupAsync(AuthToken pAuthToken, ImpExpJob pJob) {
            this.exportCleanupAsync(pAuthToken, pJob, null);
        }
        
        /// <remarks/>
        public void exportCleanupAsync(AuthToken pAuthToken, ImpExpJob pJob, object userState) {
            if ((this.exportCleanupOperationCompleted == null)) {
                this.exportCleanupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportCleanupOperationCompleted);
            }
            this.InvokeAsync("exportCleanup", new object[] {
                        pAuthToken,
                        pJob}, this.exportCleanupOperationCompleted, userState);
        }
        
        private void OnexportCleanupOperationCompleted(object arg) {
            if ((this.exportCleanupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportCleanupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("importListJobsReturn")]
        public ImpExpJob[] importListJobs(AuthToken pAuthToken) {
            object[] results = this.Invoke("importListJobs", new object[] {
                        pAuthToken});
            return ((ImpExpJob[])(results[0]));
        }
        
        /// <remarks/>
        public void importListJobsAsync(AuthToken pAuthToken) {
            this.importListJobsAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void importListJobsAsync(AuthToken pAuthToken, object userState) {
            if ((this.importListJobsOperationCompleted == null)) {
                this.importListJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportListJobsOperationCompleted);
            }
            this.InvokeAsync("importListJobs", new object[] {
                        pAuthToken}, this.importListJobsOperationCompleted, userState);
        }
        
        private void OnimportListJobsOperationCompleted(object arg) {
            if ((this.importListJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importListJobsCompleted(this, new importListJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("importExecuteReturn")]
        public ImpExpJob importExecute(AuthToken pAuthToken, string pImportFormat, string[] pImportFormatQualifiers, string pDesc, [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] pPayload) {
            object[] results = this.Invoke("importExecute", new object[] {
                        pAuthToken,
                        pImportFormat,
                        pImportFormatQualifiers,
                        pDesc,
                        pPayload});
            return ((ImpExpJob)(results[0]));
        }
        
        /// <remarks/>
        public void importExecuteAsync(AuthToken pAuthToken, string pImportFormat, string[] pImportFormatQualifiers, string pDesc, byte[] pPayload) {
            this.importExecuteAsync(pAuthToken, pImportFormat, pImportFormatQualifiers, pDesc, pPayload, null);
        }
        
        /// <remarks/>
        public void importExecuteAsync(AuthToken pAuthToken, string pImportFormat, string[] pImportFormatQualifiers, string pDesc, byte[] pPayload, object userState) {
            if ((this.importExecuteOperationCompleted == null)) {
                this.importExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportExecuteOperationCompleted);
            }
            this.InvokeAsync("importExecute", new object[] {
                        pAuthToken,
                        pImportFormat,
                        pImportFormatQualifiers,
                        pDesc,
                        pPayload}, this.importExecuteOperationCompleted, userState);
        }
        
        private void OnimportExecuteOperationCompleted(object arg) {
            if ((this.importExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importExecuteCompleted(this, new importExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("importStatusReturn")]
        public ImpExpJob importStatus(AuthToken pAuthToken, ImpExpJob pJob) {
            object[] results = this.Invoke("importStatus", new object[] {
                        pAuthToken,
                        pJob});
            return ((ImpExpJob)(results[0]));
        }
        
        /// <remarks/>
        public void importStatusAsync(AuthToken pAuthToken, ImpExpJob pJob) {
            this.importStatusAsync(pAuthToken, pJob, null);
        }
        
        /// <remarks/>
        public void importStatusAsync(AuthToken pAuthToken, ImpExpJob pJob, object userState) {
            if ((this.importStatusOperationCompleted == null)) {
                this.importStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportStatusOperationCompleted);
            }
            this.InvokeAsync("importStatus", new object[] {
                        pAuthToken,
                        pJob}, this.importStatusOperationCompleted, userState);
        }
        
        private void OnimportStatusOperationCompleted(object arg) {
            if ((this.importStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importStatusCompleted(this, new importStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void importKill(AuthToken pAuthToken, ImpExpJob pJob) {
            this.Invoke("importKill", new object[] {
                        pAuthToken,
                        pJob});
        }
        
        /// <remarks/>
        public void importKillAsync(AuthToken pAuthToken, ImpExpJob pJob) {
            this.importKillAsync(pAuthToken, pJob, null);
        }
        
        /// <remarks/>
        public void importKillAsync(AuthToken pAuthToken, ImpExpJob pJob, object userState) {
            if ((this.importKillOperationCompleted == null)) {
                this.importKillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportKillOperationCompleted);
            }
            this.InvokeAsync("importKill", new object[] {
                        pAuthToken,
                        pJob}, this.importKillOperationCompleted, userState);
        }
        
        private void OnimportKillOperationCompleted(object arg) {
            if ((this.importKillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importKillCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void importCheckPermission(AuthToken pAuthToken) {
            this.Invoke("importCheckPermission", new object[] {
                        pAuthToken});
        }
        
        /// <remarks/>
        public void importCheckPermissionAsync(AuthToken pAuthToken) {
            this.importCheckPermissionAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void importCheckPermissionAsync(AuthToken pAuthToken, object userState) {
            if ((this.importCheckPermissionOperationCompleted == null)) {
                this.importCheckPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportCheckPermissionOperationCompleted);
            }
            this.InvokeAsync("importCheckPermission", new object[] {
                        pAuthToken}, this.importCheckPermissionOperationCompleted, userState);
        }
        
        private void OnimportCheckPermissionOperationCompleted(object arg) {
            if ((this.importCheckPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importCheckPermissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void exportCheckPermission(AuthToken pAuthToken) {
            this.Invoke("exportCheckPermission", new object[] {
                        pAuthToken});
        }
        
        /// <remarks/>
        public void exportCheckPermissionAsync(AuthToken pAuthToken) {
            this.exportCheckPermissionAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void exportCheckPermissionAsync(AuthToken pAuthToken, object userState) {
            if ((this.exportCheckPermissionOperationCompleted == null)) {
                this.exportCheckPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportCheckPermissionOperationCompleted);
            }
            this.InvokeAsync("exportCheckPermission", new object[] {
                        pAuthToken}, this.exportCheckPermissionOperationCompleted, userState);
        }
        
        private void OnexportCheckPermissionOperationCompleted(object arg) {
            if ((this.exportCheckPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportCheckPermissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void importCleanup(AuthToken pAuthToken, ImpExpJob pJob) {
            this.Invoke("importCleanup", new object[] {
                        pAuthToken,
                        pJob});
        }
        
        /// <remarks/>
        public void importCleanupAsync(AuthToken pAuthToken, ImpExpJob pJob) {
            this.importCleanupAsync(pAuthToken, pJob, null);
        }
        
        /// <remarks/>
        public void importCleanupAsync(AuthToken pAuthToken, ImpExpJob pJob, object userState) {
            if ((this.importCleanupOperationCompleted == null)) {
                this.importCleanupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportCleanupOperationCompleted);
            }
            this.InvokeAsync("importCleanup", new object[] {
                        pAuthToken,
                        pJob}, this.importCleanupOperationCompleted, userState);
        }
        
        private void OnimportCleanupOperationCompleted(object arg) {
            if ((this.importCleanupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importCleanupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testClearCache(AuthToken pAuthToken, string pCacheName) {
            this.Invoke("testClearCache", new object[] {
                        pAuthToken,
                        pCacheName});
        }
        
        /// <remarks/>
        public void testClearCacheAsync(AuthToken pAuthToken, string pCacheName) {
            this.testClearCacheAsync(pAuthToken, pCacheName, null);
        }
        
        /// <remarks/>
        public void testClearCacheAsync(AuthToken pAuthToken, string pCacheName, object userState) {
            if ((this.testClearCacheOperationCompleted == null)) {
                this.testClearCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestClearCacheOperationCompleted);
            }
            this.InvokeAsync("testClearCache", new object[] {
                        pAuthToken,
                        pCacheName}, this.testClearCacheOperationCompleted, userState);
        }
        
        private void OntestClearCacheOperationCompleted(object arg) {
            if ((this.testClearCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testClearCacheCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testUpdateAssetDate(AuthToken pAuthToken, long pAssetID, string pDateField, System.DateTime pNewDate) {
            this.Invoke("testUpdateAssetDate", new object[] {
                        pAuthToken,
                        pAssetID,
                        pDateField,
                        pNewDate});
        }
        
        /// <remarks/>
        public void testUpdateAssetDateAsync(AuthToken pAuthToken, long pAssetID, string pDateField, System.DateTime pNewDate) {
            this.testUpdateAssetDateAsync(pAuthToken, pAssetID, pDateField, pNewDate, null);
        }
        
        /// <remarks/>
        public void testUpdateAssetDateAsync(AuthToken pAuthToken, long pAssetID, string pDateField, System.DateTime pNewDate, object userState) {
            if ((this.testUpdateAssetDateOperationCompleted == null)) {
                this.testUpdateAssetDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestUpdateAssetDateOperationCompleted);
            }
            this.InvokeAsync("testUpdateAssetDate", new object[] {
                        pAuthToken,
                        pAssetID,
                        pDateField,
                        pNewDate}, this.testUpdateAssetDateOperationCompleted, userState);
        }
        
        private void OntestUpdateAssetDateOperationCompleted(object arg) {
            if ((this.testUpdateAssetDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testUpdateAssetDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testUpdateTabStatus(AuthToken pAuthToken, bool pApproved, long pUserID, string pTab, long pAssetID, System.DateTime pDate) {
            this.Invoke("testUpdateTabStatus", new object[] {
                        pAuthToken,
                        pApproved,
                        pUserID,
                        pTab,
                        pAssetID,
                        pDate});
        }
        
        /// <remarks/>
        public void testUpdateTabStatusAsync(AuthToken pAuthToken, bool pApproved, long pUserID, string pTab, long pAssetID, System.DateTime pDate) {
            this.testUpdateTabStatusAsync(pAuthToken, pApproved, pUserID, pTab, pAssetID, pDate, null);
        }
        
        /// <remarks/>
        public void testUpdateTabStatusAsync(AuthToken pAuthToken, bool pApproved, long pUserID, string pTab, long pAssetID, System.DateTime pDate, object userState) {
            if ((this.testUpdateTabStatusOperationCompleted == null)) {
                this.testUpdateTabStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestUpdateTabStatusOperationCompleted);
            }
            this.InvokeAsync("testUpdateTabStatus", new object[] {
                        pAuthToken,
                        pApproved,
                        pUserID,
                        pTab,
                        pAssetID,
                        pDate}, this.testUpdateTabStatusOperationCompleted, userState);
        }
        
        private void OntestUpdateTabStatusOperationCompleted(object arg) {
            if ((this.testUpdateTabStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testUpdateTabStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testCreateCustomAccessSetting(AuthToken pAuthToken, string pType, string pRoleContextName, bool pIsDefault) {
            this.Invoke("testCreateCustomAccessSetting", new object[] {
                        pAuthToken,
                        pType,
                        pRoleContextName,
                        pIsDefault});
        }
        
        /// <remarks/>
        public void testCreateCustomAccessSettingAsync(AuthToken pAuthToken, string pType, string pRoleContextName, bool pIsDefault) {
            this.testCreateCustomAccessSettingAsync(pAuthToken, pType, pRoleContextName, pIsDefault, null);
        }
        
        /// <remarks/>
        public void testCreateCustomAccessSettingAsync(AuthToken pAuthToken, string pType, string pRoleContextName, bool pIsDefault, object userState) {
            if ((this.testCreateCustomAccessSettingOperationCompleted == null)) {
                this.testCreateCustomAccessSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestCreateCustomAccessSettingOperationCompleted);
            }
            this.InvokeAsync("testCreateCustomAccessSetting", new object[] {
                        pAuthToken,
                        pType,
                        pRoleContextName,
                        pIsDefault}, this.testCreateCustomAccessSettingOperationCompleted, userState);
        }
        
        private void OntestCreateCustomAccessSettingOperationCompleted(object arg) {
            if ((this.testCreateCustomAccessSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCreateCustomAccessSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAssetMaxIDReturn")]
        public long getAssetMaxID() {
            object[] results = this.Invoke("getAssetMaxID", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void getAssetMaxIDAsync() {
            this.getAssetMaxIDAsync(null);
        }
        
        /// <remarks/>
        public void getAssetMaxIDAsync(object userState) {
            if ((this.getAssetMaxIDOperationCompleted == null)) {
                this.getAssetMaxIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssetMaxIDOperationCompleted);
            }
            this.InvokeAsync("getAssetMaxID", new object[0], this.getAssetMaxIDOperationCompleted, userState);
        }
        
        private void OngetAssetMaxIDOperationCompleted(object arg) {
            if ((this.getAssetMaxIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAssetMaxIDCompleted(this, new getAssetMaxIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testThrowOpenAPIException() {
            this.Invoke("testThrowOpenAPIException", new object[0]);
        }
        
        /// <remarks/>
        public void testThrowOpenAPIExceptionAsync() {
            this.testThrowOpenAPIExceptionAsync(null);
        }
        
        /// <remarks/>
        public void testThrowOpenAPIExceptionAsync(object userState) {
            if ((this.testThrowOpenAPIExceptionOperationCompleted == null)) {
                this.testThrowOpenAPIExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestThrowOpenAPIExceptionOperationCompleted);
            }
            this.InvokeAsync("testThrowOpenAPIException", new object[0], this.testThrowOpenAPIExceptionOperationCompleted, userState);
        }
        
        private void OntestThrowOpenAPIExceptionOperationCompleted(object arg) {
            if ((this.testThrowOpenAPIExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testThrowOpenAPIExceptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testSetSetting(string pSettingName, string pSettingValue) {
            this.Invoke("testSetSetting", new object[] {
                        pSettingName,
                        pSettingValue});
        }
        
        /// <remarks/>
        public void testSetSettingAsync(string pSettingName, string pSettingValue) {
            this.testSetSettingAsync(pSettingName, pSettingValue, null);
        }
        
        /// <remarks/>
        public void testSetSettingAsync(string pSettingName, string pSettingValue, object userState) {
            if ((this.testSetSettingOperationCompleted == null)) {
                this.testSetSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestSetSettingOperationCompleted);
            }
            this.InvokeAsync("testSetSetting", new object[] {
                        pSettingName,
                        pSettingValue}, this.testSetSettingOperationCompleted, userState);
        }
        
        private void OntestSetSettingOperationCompleted(object arg) {
            if ((this.testSetSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testSetSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("testGetSettingValueReturn")]
        public string testGetSettingValue(string pSettingName) {
            object[] results = this.Invoke("testGetSettingValue", new object[] {
                        pSettingName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testGetSettingValueAsync(string pSettingName) {
            this.testGetSettingValueAsync(pSettingName, null);
        }
        
        /// <remarks/>
        public void testGetSettingValueAsync(string pSettingName, object userState) {
            if ((this.testGetSettingValueOperationCompleted == null)) {
                this.testGetSettingValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestGetSettingValueOperationCompleted);
            }
            this.InvokeAsync("testGetSettingValue", new object[] {
                        pSettingName}, this.testGetSettingValueOperationCompleted, userState);
        }
        
        private void OntestGetSettingValueOperationCompleted(object arg) {
            if ((this.testGetSettingValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testGetSettingValueCompleted(this, new testGetSettingValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testSetProperty(string pPropName, string pPropValue) {
            this.Invoke("testSetProperty", new object[] {
                        pPropName,
                        pPropValue});
        }
        
        /// <remarks/>
        public void testSetPropertyAsync(string pPropName, string pPropValue) {
            this.testSetPropertyAsync(pPropName, pPropValue, null);
        }
        
        /// <remarks/>
        public void testSetPropertyAsync(string pPropName, string pPropValue, object userState) {
            if ((this.testSetPropertyOperationCompleted == null)) {
                this.testSetPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestSetPropertyOperationCompleted);
            }
            this.InvokeAsync("testSetProperty", new object[] {
                        pPropName,
                        pPropValue}, this.testSetPropertyOperationCompleted, userState);
        }
        
        private void OntestSetPropertyOperationCompleted(object arg) {
            if ((this.testSetPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testSetPropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testDeleteAsset(AuthToken pAuthToken, long pAssetId) {
            this.Invoke("testDeleteAsset", new object[] {
                        pAuthToken,
                        pAssetId});
        }
        
        /// <remarks/>
        public void testDeleteAssetAsync(AuthToken pAuthToken, long pAssetId) {
            this.testDeleteAssetAsync(pAuthToken, pAssetId, null);
        }
        
        /// <remarks/>
        public void testDeleteAssetAsync(AuthToken pAuthToken, long pAssetId, object userState) {
            if ((this.testDeleteAssetOperationCompleted == null)) {
                this.testDeleteAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestDeleteAssetOperationCompleted);
            }
            this.InvokeAsync("testDeleteAsset", new object[] {
                        pAuthToken,
                        pAssetId}, this.testDeleteAssetOperationCompleted, userState);
        }
        
        private void OntestDeleteAssetOperationCompleted(object arg) {
            if ((this.testDeleteAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testDeleteAssetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testDeleteUser(AuthToken pAuthToken, long pUserId) {
            this.Invoke("testDeleteUser", new object[] {
                        pAuthToken,
                        pUserId});
        }
        
        /// <remarks/>
        public void testDeleteUserAsync(AuthToken pAuthToken, long pUserId) {
            this.testDeleteUserAsync(pAuthToken, pUserId, null);
        }
        
        /// <remarks/>
        public void testDeleteUserAsync(AuthToken pAuthToken, long pUserId, object userState) {
            if ((this.testDeleteUserOperationCompleted == null)) {
                this.testDeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestDeleteUserOperationCompleted);
            }
            this.InvokeAsync("testDeleteUser", new object[] {
                        pAuthToken,
                        pUserId}, this.testDeleteUserOperationCompleted, userState);
        }
        
        private void OntestDeleteUserOperationCompleted(object arg) {
            if ((this.testDeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testDeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testDeleteProject(AuthToken pAuthToken, long pProjectId) {
            this.Invoke("testDeleteProject", new object[] {
                        pAuthToken,
                        pProjectId});
        }
        
        /// <remarks/>
        public void testDeleteProjectAsync(AuthToken pAuthToken, long pProjectId) {
            this.testDeleteProjectAsync(pAuthToken, pProjectId, null);
        }
        
        /// <remarks/>
        public void testDeleteProjectAsync(AuthToken pAuthToken, long pProjectId, object userState) {
            if ((this.testDeleteProjectOperationCompleted == null)) {
                this.testDeleteProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestDeleteProjectOperationCompleted);
            }
            this.InvokeAsync("testDeleteProject", new object[] {
                        pAuthToken,
                        pProjectId}, this.testDeleteProjectOperationCompleted, userState);
        }
        
        private void OntestDeleteProjectOperationCompleted(object arg) {
            if ((this.testDeleteProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testDeleteProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testDeleteAssetType(AuthToken pAuthToken, long pAssetId) {
            this.Invoke("testDeleteAssetType", new object[] {
                        pAuthToken,
                        pAssetId});
        }
        
        /// <remarks/>
        public void testDeleteAssetTypeAsync(AuthToken pAuthToken, long pAssetId) {
            this.testDeleteAssetTypeAsync(pAuthToken, pAssetId, null);
        }
        
        /// <remarks/>
        public void testDeleteAssetTypeAsync(AuthToken pAuthToken, long pAssetId, object userState) {
            if ((this.testDeleteAssetTypeOperationCompleted == null)) {
                this.testDeleteAssetTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestDeleteAssetTypeOperationCompleted);
            }
            this.InvokeAsync("testDeleteAssetType", new object[] {
                        pAuthToken,
                        pAssetId}, this.testDeleteAssetTypeOperationCompleted, userState);
        }
        
        private void OntestDeleteAssetTypeOperationCompleted(object arg) {
            if ((this.testDeleteAssetTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testDeleteAssetTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testRestartJobMonitor() {
            this.Invoke("testRestartJobMonitor", new object[0]);
        }
        
        /// <remarks/>
        public void testRestartJobMonitorAsync() {
            this.testRestartJobMonitorAsync(null);
        }
        
        /// <remarks/>
        public void testRestartJobMonitorAsync(object userState) {
            if ((this.testRestartJobMonitorOperationCompleted == null)) {
                this.testRestartJobMonitorOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestRestartJobMonitorOperationCompleted);
            }
            this.InvokeAsync("testRestartJobMonitor", new object[0], this.testRestartJobMonitorOperationCompleted, userState);
        }
        
        private void OntestRestartJobMonitorOperationCompleted(object arg) {
            if ((this.testRestartJobMonitorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testRestartJobMonitorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testThrowImportExportException(bool pImpExp) {
            this.Invoke("testThrowImportExportException", new object[] {
                        pImpExp});
        }
        
        /// <remarks/>
        public void testThrowImportExportExceptionAsync(bool pImpExp) {
            this.testThrowImportExportExceptionAsync(pImpExp, null);
        }
        
        /// <remarks/>
        public void testThrowImportExportExceptionAsync(bool pImpExp, object userState) {
            if ((this.testThrowImportExportExceptionOperationCompleted == null)) {
                this.testThrowImportExportExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestThrowImportExportExceptionOperationCompleted);
            }
            this.InvokeAsync("testThrowImportExportException", new object[] {
                        pImpExp}, this.testThrowImportExportExceptionOperationCompleted, userState);
        }
        
        private void OntestThrowImportExportExceptionOperationCompleted(object arg) {
            if ((this.testThrowImportExportExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testThrowImportExportExceptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("testGetLicenseStateReturn")]
        public bool testGetLicenseState() {
            object[] results = this.Invoke("testGetLicenseState", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void testGetLicenseStateAsync() {
            this.testGetLicenseStateAsync(null);
        }
        
        /// <remarks/>
        public void testGetLicenseStateAsync(object userState) {
            if ((this.testGetLicenseStateOperationCompleted == null)) {
                this.testGetLicenseStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestGetLicenseStateOperationCompleted);
            }
            this.InvokeAsync("testGetLicenseState", new object[0], this.testGetLicenseStateOperationCompleted, userState);
        }
        
        private void OntestGetLicenseStateOperationCompleted(object arg) {
            if ((this.testGetLicenseStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testGetLicenseStateCompleted(this, new testGetLicenseStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("testDetermineDBPlatformReturn")]
        public string testDetermineDBPlatform() {
            object[] results = this.Invoke("testDetermineDBPlatform", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testDetermineDBPlatformAsync() {
            this.testDetermineDBPlatformAsync(null);
        }
        
        /// <remarks/>
        public void testDetermineDBPlatformAsync(object userState) {
            if ((this.testDetermineDBPlatformOperationCompleted == null)) {
                this.testDetermineDBPlatformOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestDetermineDBPlatformOperationCompleted);
            }
            this.InvokeAsync("testDetermineDBPlatform", new object[0], this.testDetermineDBPlatformOperationCompleted, userState);
        }
        
        private void OntestDetermineDBPlatformOperationCompleted(object arg) {
            if ((this.testDetermineDBPlatformCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testDetermineDBPlatformCompleted(this, new testDetermineDBPlatformCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testSetLicenseState(bool pLicensed) {
            this.Invoke("testSetLicenseState", new object[] {
                        pLicensed});
        }
        
        /// <remarks/>
        public void testSetLicenseStateAsync(bool pLicensed) {
            this.testSetLicenseStateAsync(pLicensed, null);
        }
        
        /// <remarks/>
        public void testSetLicenseStateAsync(bool pLicensed, object userState) {
            if ((this.testSetLicenseStateOperationCompleted == null)) {
                this.testSetLicenseStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestSetLicenseStateOperationCompleted);
            }
            this.InvokeAsync("testSetLicenseState", new object[] {
                        pLicensed}, this.testSetLicenseStateOperationCompleted, userState);
        }
        
        private void OntestSetLicenseStateOperationCompleted(object arg) {
            if ((this.testSetLicenseStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testSetLicenseStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testAcceptableValueListDelete(AuthToken pAuthToken, long pID) {
            this.Invoke("testAcceptableValueListDelete", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void testAcceptableValueListDeleteAsync(AuthToken pAuthToken, long pID) {
            this.testAcceptableValueListDeleteAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void testAcceptableValueListDeleteAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.testAcceptableValueListDeleteOperationCompleted == null)) {
                this.testAcceptableValueListDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestAcceptableValueListDeleteOperationCompleted);
            }
            this.InvokeAsync("testAcceptableValueListDelete", new object[] {
                        pAuthToken,
                        pID}, this.testAcceptableValueListDeleteOperationCompleted, userState);
        }
        
        private void OntestAcceptableValueListDeleteOperationCompleted(object arg) {
            if ((this.testAcceptableValueListDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testAcceptableValueListDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testLogMessage(string pMessage) {
            this.Invoke("testLogMessage", new object[] {
                        pMessage});
        }
        
        /// <remarks/>
        public void testLogMessageAsync(string pMessage) {
            this.testLogMessageAsync(pMessage, null);
        }
        
        /// <remarks/>
        public void testLogMessageAsync(string pMessage, object userState) {
            if ((this.testLogMessageOperationCompleted == null)) {
                this.testLogMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestLogMessageOperationCompleted);
            }
            this.InvokeAsync("testLogMessage", new object[] {
                        pMessage}, this.testLogMessageOperationCompleted, userState);
        }
        
        private void OntestLogMessageOperationCompleted(object arg) {
            if ((this.testLogMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testLogMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testExtractionResetDatabaseForProject(long pProjectID) {
            this.Invoke("testExtractionResetDatabaseForProject", new object[] {
                        pProjectID});
        }
        
        /// <remarks/>
        public void testExtractionResetDatabaseForProjectAsync(long pProjectID) {
            this.testExtractionResetDatabaseForProjectAsync(pProjectID, null);
        }
        
        /// <remarks/>
        public void testExtractionResetDatabaseForProjectAsync(long pProjectID, object userState) {
            if ((this.testExtractionResetDatabaseForProjectOperationCompleted == null)) {
                this.testExtractionResetDatabaseForProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestExtractionResetDatabaseForProjectOperationCompleted);
            }
            this.InvokeAsync("testExtractionResetDatabaseForProject", new object[] {
                        pProjectID}, this.testExtractionResetDatabaseForProjectOperationCompleted, userState);
        }
        
        private void OntestExtractionResetDatabaseForProjectOperationCompleted(object arg) {
            if ((this.testExtractionResetDatabaseForProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testExtractionResetDatabaseForProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testUpdateViewAssetSetting(bool pRemove) {
            this.Invoke("testUpdateViewAssetSetting", new object[] {
                        pRemove});
        }
        
        /// <remarks/>
        public void testUpdateViewAssetSettingAsync(bool pRemove) {
            this.testUpdateViewAssetSettingAsync(pRemove, null);
        }
        
        /// <remarks/>
        public void testUpdateViewAssetSettingAsync(bool pRemove, object userState) {
            if ((this.testUpdateViewAssetSettingOperationCompleted == null)) {
                this.testUpdateViewAssetSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestUpdateViewAssetSettingOperationCompleted);
            }
            this.InvokeAsync("testUpdateViewAssetSetting", new object[] {
                        pRemove}, this.testUpdateViewAssetSettingOperationCompleted, userState);
        }
        
        private void OntestUpdateViewAssetSettingOperationCompleted(object arg) {
            if ((this.testUpdateViewAssetSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testUpdateViewAssetSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testCleanupNonRunningJobs() {
            this.Invoke("testCleanupNonRunningJobs", new object[0]);
        }
        
        /// <remarks/>
        public void testCleanupNonRunningJobsAsync() {
            this.testCleanupNonRunningJobsAsync(null);
        }
        
        /// <remarks/>
        public void testCleanupNonRunningJobsAsync(object userState) {
            if ((this.testCleanupNonRunningJobsOperationCompleted == null)) {
                this.testCleanupNonRunningJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestCleanupNonRunningJobsOperationCompleted);
            }
            this.InvokeAsync("testCleanupNonRunningJobs", new object[0], this.testCleanupNonRunningJobsOperationCompleted, userState);
        }
        
        private void OntestCleanupNonRunningJobsOperationCompleted(object arg) {
            if ((this.testCleanupNonRunningJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCleanupNonRunningJobsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testUpdateUserRole(long pUserID, bool pRemove) {
            this.Invoke("testUpdateUserRole", new object[] {
                        pUserID,
                        pRemove});
        }
        
        /// <remarks/>
        public void testUpdateUserRoleAsync(long pUserID, bool pRemove) {
            this.testUpdateUserRoleAsync(pUserID, pRemove, null);
        }
        
        /// <remarks/>
        public void testUpdateUserRoleAsync(long pUserID, bool pRemove, object userState) {
            if ((this.testUpdateUserRoleOperationCompleted == null)) {
                this.testUpdateUserRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestUpdateUserRoleOperationCompleted);
            }
            this.InvokeAsync("testUpdateUserRole", new object[] {
                        pUserID,
                        pRemove}, this.testUpdateUserRoleOperationCompleted, userState);
        }
        
        private void OntestUpdateUserRoleOperationCompleted(object arg) {
            if ((this.testUpdateUserRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testUpdateUserRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testUpdateProjectAdminRole(long pUserID, bool pRemove) {
            this.Invoke("testUpdateProjectAdminRole", new object[] {
                        pUserID,
                        pRemove});
        }
        
        /// <remarks/>
        public void testUpdateProjectAdminRoleAsync(long pUserID, bool pRemove) {
            this.testUpdateProjectAdminRoleAsync(pUserID, pRemove, null);
        }
        
        /// <remarks/>
        public void testUpdateProjectAdminRoleAsync(long pUserID, bool pRemove, object userState) {
            if ((this.testUpdateProjectAdminRoleOperationCompleted == null)) {
                this.testUpdateProjectAdminRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestUpdateProjectAdminRoleOperationCompleted);
            }
            this.InvokeAsync("testUpdateProjectAdminRole", new object[] {
                        pUserID,
                        pRemove}, this.testUpdateProjectAdminRoleOperationCompleted, userState);
        }
        
        private void OntestUpdateProjectAdminRoleOperationCompleted(object arg) {
            if ((this.testUpdateProjectAdminRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testUpdateProjectAdminRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testClearDatabase() {
            this.Invoke("testClearDatabase", new object[0]);
        }
        
        /// <remarks/>
        public void testClearDatabaseAsync() {
            this.testClearDatabaseAsync(null);
        }
        
        /// <remarks/>
        public void testClearDatabaseAsync(object userState) {
            if ((this.testClearDatabaseOperationCompleted == null)) {
                this.testClearDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestClearDatabaseOperationCompleted);
            }
            this.InvokeAsync("testClearDatabase", new object[0], this.testClearDatabaseOperationCompleted, userState);
        }
        
        private void OntestClearDatabaseOperationCompleted(object arg) {
            if ((this.testClearDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testClearDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void sfidAddToAsset(AuthToken pAuthToken, SFIDInfo pSFID, long assetID) {
            this.Invoke("sfidAddToAsset", new object[] {
                        pAuthToken,
                        pSFID,
                        assetID});
        }
        
        /// <remarks/>
        public void sfidAddToAssetAsync(AuthToken pAuthToken, SFIDInfo pSFID, long assetID) {
            this.sfidAddToAssetAsync(pAuthToken, pSFID, assetID, null);
        }
        
        /// <remarks/>
        public void sfidAddToAssetAsync(AuthToken pAuthToken, SFIDInfo pSFID, long assetID, object userState) {
            if ((this.sfidAddToAssetOperationCompleted == null)) {
                this.sfidAddToAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidAddToAssetOperationCompleted);
            }
            this.InvokeAsync("sfidAddToAsset", new object[] {
                        pAuthToken,
                        pSFID,
                        assetID}, this.sfidAddToAssetOperationCompleted, userState);
        }
        
        private void OnsfidAddToAssetOperationCompleted(object arg) {
            if ((this.sfidAddToAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidAddToAssetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void sfidRemoveAllFromAsset(AuthToken pAuthToken, long assetID) {
            this.Invoke("sfidRemoveAllFromAsset", new object[] {
                        pAuthToken,
                        assetID});
        }
        
        /// <remarks/>
        public void sfidRemoveAllFromAssetAsync(AuthToken pAuthToken, long assetID) {
            this.sfidRemoveAllFromAssetAsync(pAuthToken, assetID, null);
        }
        
        /// <remarks/>
        public void sfidRemoveAllFromAssetAsync(AuthToken pAuthToken, long assetID, object userState) {
            if ((this.sfidRemoveAllFromAssetOperationCompleted == null)) {
                this.sfidRemoveAllFromAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidRemoveAllFromAssetOperationCompleted);
            }
            this.InvokeAsync("sfidRemoveAllFromAsset", new object[] {
                        pAuthToken,
                        assetID}, this.sfidRemoveAllFromAssetOperationCompleted, userState);
        }
        
        private void OnsfidRemoveAllFromAssetOperationCompleted(object arg) {
            if ((this.sfidRemoveAllFromAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidRemoveAllFromAssetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void sfidUpdateAsset(AuthToken pAuthToken, SFIDInfo[] pSFIDs, long assetID) {
            this.Invoke("sfidUpdateAsset", new object[] {
                        pAuthToken,
                        pSFIDs,
                        assetID});
        }
        
        /// <remarks/>
        public void sfidUpdateAssetAsync(AuthToken pAuthToken, SFIDInfo[] pSFIDs, long assetID) {
            this.sfidUpdateAssetAsync(pAuthToken, pSFIDs, assetID, null);
        }
        
        /// <remarks/>
        public void sfidUpdateAssetAsync(AuthToken pAuthToken, SFIDInfo[] pSFIDs, long assetID, object userState) {
            if ((this.sfidUpdateAssetOperationCompleted == null)) {
                this.sfidUpdateAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidUpdateAssetOperationCompleted);
            }
            this.InvokeAsync("sfidUpdateAsset", new object[] {
                        pAuthToken,
                        pSFIDs,
                        assetID}, this.sfidUpdateAssetOperationCompleted, userState);
        }
        
        private void OnsfidUpdateAssetOperationCompleted(object arg) {
            if ((this.sfidUpdateAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidUpdateAssetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("sfidReadValuesByProjectReturn")]
        public string[] sfidReadValuesByProject(AuthToken pAuthToken, long projectid) {
            object[] results = this.Invoke("sfidReadValuesByProject", new object[] {
                        pAuthToken,
                        projectid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void sfidReadValuesByProjectAsync(AuthToken pAuthToken, long projectid) {
            this.sfidReadValuesByProjectAsync(pAuthToken, projectid, null);
        }
        
        /// <remarks/>
        public void sfidReadValuesByProjectAsync(AuthToken pAuthToken, long projectid, object userState) {
            if ((this.sfidReadValuesByProjectOperationCompleted == null)) {
                this.sfidReadValuesByProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidReadValuesByProjectOperationCompleted);
            }
            this.InvokeAsync("sfidReadValuesByProject", new object[] {
                        pAuthToken,
                        projectid}, this.sfidReadValuesByProjectOperationCompleted, userState);
        }
        
        private void OnsfidReadValuesByProjectOperationCompleted(object arg) {
            if ((this.sfidReadValuesByProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidReadValuesByProjectCompleted(this, new sfidReadValuesByProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("sfidQueryReturn")]
        public SFIDInfo[] sfidQuery(AuthToken pAuthToken, SFIDCriteria pCrit) {
            object[] results = this.Invoke("sfidQuery", new object[] {
                        pAuthToken,
                        pCrit});
            return ((SFIDInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void sfidQueryAsync(AuthToken pAuthToken, SFIDCriteria pCrit) {
            this.sfidQueryAsync(pAuthToken, pCrit, null);
        }
        
        /// <remarks/>
        public void sfidQueryAsync(AuthToken pAuthToken, SFIDCriteria pCrit, object userState) {
            if ((this.sfidQueryOperationCompleted == null)) {
                this.sfidQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidQueryOperationCompleted);
            }
            this.InvokeAsync("sfidQuery", new object[] {
                        pAuthToken,
                        pCrit}, this.sfidQueryOperationCompleted, userState);
        }
        
        private void OnsfidQueryOperationCompleted(object arg) {
            if ((this.sfidQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidQueryCompleted(this, new sfidQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("sfidCandidateQueryReturn")]
        public SFIDCandidate[] sfidCandidateQuery(AuthToken pAuthToken, SFIDCriteria pCrit) {
            object[] results = this.Invoke("sfidCandidateQuery", new object[] {
                        pAuthToken,
                        pCrit});
            return ((SFIDCandidate[])(results[0]));
        }
        
        /// <remarks/>
        public void sfidCandidateQueryAsync(AuthToken pAuthToken, SFIDCriteria pCrit) {
            this.sfidCandidateQueryAsync(pAuthToken, pCrit, null);
        }
        
        /// <remarks/>
        public void sfidCandidateQueryAsync(AuthToken pAuthToken, SFIDCriteria pCrit, object userState) {
            if ((this.sfidCandidateQueryOperationCompleted == null)) {
                this.sfidCandidateQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidCandidateQueryOperationCompleted);
            }
            this.InvokeAsync("sfidCandidateQuery", new object[] {
                        pAuthToken,
                        pCrit}, this.sfidCandidateQueryOperationCompleted, userState);
        }
        
        private void OnsfidCandidateQueryOperationCompleted(object arg) {
            if ((this.sfidCandidateQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidCandidateQueryCompleted(this, new sfidCandidateQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("sfidGenerateReturn")]
        public SFIDInfo[] sfidGenerate(AuthToken pAuthToken, int pMethod) {
            object[] results = this.Invoke("sfidGenerate", new object[] {
                        pAuthToken,
                        pMethod});
            return ((SFIDInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void sfidGenerateAsync(AuthToken pAuthToken, int pMethod) {
            this.sfidGenerateAsync(pAuthToken, pMethod, null);
        }
        
        /// <remarks/>
        public void sfidGenerateAsync(AuthToken pAuthToken, int pMethod, object userState) {
            if ((this.sfidGenerateOperationCompleted == null)) {
                this.sfidGenerateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidGenerateOperationCompleted);
            }
            this.InvokeAsync("sfidGenerate", new object[] {
                        pAuthToken,
                        pMethod}, this.sfidGenerateOperationCompleted, userState);
        }
        
        private void OnsfidGenerateOperationCompleted(object arg) {
            if ((this.sfidGenerateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidGenerateCompleted(this, new sfidGenerateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("sfidCandidateSubmitReturn")]
        public SFIDCandidate[] sfidCandidateSubmit(AuthToken pAuthToken, SFIDCandidate[] pCandidates) {
            object[] results = this.Invoke("sfidCandidateSubmit", new object[] {
                        pAuthToken,
                        pCandidates});
            return ((SFIDCandidate[])(results[0]));
        }
        
        /// <remarks/>
        public void sfidCandidateSubmitAsync(AuthToken pAuthToken, SFIDCandidate[] pCandidates) {
            this.sfidCandidateSubmitAsync(pAuthToken, pCandidates, null);
        }
        
        /// <remarks/>
        public void sfidCandidateSubmitAsync(AuthToken pAuthToken, SFIDCandidate[] pCandidates, object userState) {
            if ((this.sfidCandidateSubmitOperationCompleted == null)) {
                this.sfidCandidateSubmitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidCandidateSubmitOperationCompleted);
            }
            this.InvokeAsync("sfidCandidateSubmit", new object[] {
                        pAuthToken,
                        pCandidates}, this.sfidCandidateSubmitOperationCompleted, userState);
        }
        
        private void OnsfidCandidateSubmitOperationCompleted(object arg) {
            if ((this.sfidCandidateSubmitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidCandidateSubmitCompleted(this, new sfidCandidateSubmitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("sfidReadValuesForAssetReturn")]
        public string[] sfidReadValuesForAsset(AuthToken pAuthToken, long assetID) {
            object[] results = this.Invoke("sfidReadValuesForAsset", new object[] {
                        pAuthToken,
                        assetID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void sfidReadValuesForAssetAsync(AuthToken pAuthToken, long assetID) {
            this.sfidReadValuesForAssetAsync(pAuthToken, assetID, null);
        }
        
        /// <remarks/>
        public void sfidReadValuesForAssetAsync(AuthToken pAuthToken, long assetID, object userState) {
            if ((this.sfidReadValuesForAssetOperationCompleted == null)) {
                this.sfidReadValuesForAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidReadValuesForAssetOperationCompleted);
            }
            this.InvokeAsync("sfidReadValuesForAsset", new object[] {
                        pAuthToken,
                        assetID}, this.sfidReadValuesForAssetOperationCompleted, userState);
        }
        
        private void OnsfidReadValuesForAssetOperationCompleted(object arg) {
            if ((this.sfidReadValuesForAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidReadValuesForAssetCompleted(this, new sfidReadValuesForAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void sfidRegisterExtractionBySFIDValue(AuthToken pAuthToken, long projectid, string pSFID) {
            this.Invoke("sfidRegisterExtractionBySFIDValue", new object[] {
                        pAuthToken,
                        projectid,
                        pSFID});
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionBySFIDValueAsync(AuthToken pAuthToken, long projectid, string pSFID) {
            this.sfidRegisterExtractionBySFIDValueAsync(pAuthToken, projectid, pSFID, null);
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionBySFIDValueAsync(AuthToken pAuthToken, long projectid, string pSFID, object userState) {
            if ((this.sfidRegisterExtractionBySFIDValueOperationCompleted == null)) {
                this.sfidRegisterExtractionBySFIDValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidRegisterExtractionBySFIDValueOperationCompleted);
            }
            this.InvokeAsync("sfidRegisterExtractionBySFIDValue", new object[] {
                        pAuthToken,
                        projectid,
                        pSFID}, this.sfidRegisterExtractionBySFIDValueOperationCompleted, userState);
        }
        
        private void OnsfidRegisterExtractionBySFIDValueOperationCompleted(object arg) {
            if ((this.sfidRegisterExtractionBySFIDValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidRegisterExtractionBySFIDValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void sfidRegisterExtractionBySFIDValues(AuthToken pAuthToken, long projectid, string[] pSFIDs) {
            this.Invoke("sfidRegisterExtractionBySFIDValues", new object[] {
                        pAuthToken,
                        projectid,
                        pSFIDs});
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionBySFIDValuesAsync(AuthToken pAuthToken, long projectid, string[] pSFIDs) {
            this.sfidRegisterExtractionBySFIDValuesAsync(pAuthToken, projectid, pSFIDs, null);
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionBySFIDValuesAsync(AuthToken pAuthToken, long projectid, string[] pSFIDs, object userState) {
            if ((this.sfidRegisterExtractionBySFIDValuesOperationCompleted == null)) {
                this.sfidRegisterExtractionBySFIDValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidRegisterExtractionBySFIDValuesOperationCompleted);
            }
            this.InvokeAsync("sfidRegisterExtractionBySFIDValues", new object[] {
                        pAuthToken,
                        projectid,
                        pSFIDs}, this.sfidRegisterExtractionBySFIDValuesOperationCompleted, userState);
        }
        
        private void OnsfidRegisterExtractionBySFIDValuesOperationCompleted(object arg) {
            if ((this.sfidRegisterExtractionBySFIDValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidRegisterExtractionBySFIDValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("sfidRegisterExtractionBySFIDCandidatesReturn")]
        public AssetSummary[] sfidRegisterExtractionBySFIDCandidates(AuthToken pAuthToken, long projectid, SFIDCandidate[] pSFIDCandidates) {
            object[] results = this.Invoke("sfidRegisterExtractionBySFIDCandidates", new object[] {
                        pAuthToken,
                        projectid,
                        pSFIDCandidates});
            return ((AssetSummary[])(results[0]));
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionBySFIDCandidatesAsync(AuthToken pAuthToken, long projectid, SFIDCandidate[] pSFIDCandidates) {
            this.sfidRegisterExtractionBySFIDCandidatesAsync(pAuthToken, projectid, pSFIDCandidates, null);
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionBySFIDCandidatesAsync(AuthToken pAuthToken, long projectid, SFIDCandidate[] pSFIDCandidates, object userState) {
            if ((this.sfidRegisterExtractionBySFIDCandidatesOperationCompleted == null)) {
                this.sfidRegisterExtractionBySFIDCandidatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidRegisterExtractionBySFIDCandidatesOperationCompleted);
            }
            this.InvokeAsync("sfidRegisterExtractionBySFIDCandidates", new object[] {
                        pAuthToken,
                        projectid,
                        pSFIDCandidates}, this.sfidRegisterExtractionBySFIDCandidatesOperationCompleted, userState);
        }
        
        private void OnsfidRegisterExtractionBySFIDCandidatesOperationCompleted(object arg) {
            if ((this.sfidRegisterExtractionBySFIDCandidatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidRegisterExtractionBySFIDCandidatesCompleted(this, new sfidRegisterExtractionBySFIDCandidatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void sfidRegisterExtractionBySFIDCandidatesLite(AuthToken pAuthToken, long projectid, SFIDCandidate[] pSFIDCandidates) {
            this.Invoke("sfidRegisterExtractionBySFIDCandidatesLite", new object[] {
                        pAuthToken,
                        projectid,
                        pSFIDCandidates});
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionBySFIDCandidatesLiteAsync(AuthToken pAuthToken, long projectid, SFIDCandidate[] pSFIDCandidates) {
            this.sfidRegisterExtractionBySFIDCandidatesLiteAsync(pAuthToken, projectid, pSFIDCandidates, null);
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionBySFIDCandidatesLiteAsync(AuthToken pAuthToken, long projectid, SFIDCandidate[] pSFIDCandidates, object userState) {
            if ((this.sfidRegisterExtractionBySFIDCandidatesLiteOperationCompleted == null)) {
                this.sfidRegisterExtractionBySFIDCandidatesLiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidRegisterExtractionBySFIDCandidatesLiteOperationCompleted);
            }
            this.InvokeAsync("sfidRegisterExtractionBySFIDCandidatesLite", new object[] {
                        pAuthToken,
                        projectid,
                        pSFIDCandidates}, this.sfidRegisterExtractionBySFIDCandidatesLiteOperationCompleted, userState);
        }
        
        private void OnsfidRegisterExtractionBySFIDCandidatesLiteOperationCompleted(object arg) {
            if ((this.sfidRegisterExtractionBySFIDCandidatesLiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidRegisterExtractionBySFIDCandidatesLiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void sfidRegisterExtractions(AuthToken pAuthToken, long pProjectID, SFIDCandidate[] pSFIDCandidates, bool pHarvest) {
            this.Invoke("sfidRegisterExtractions", new object[] {
                        pAuthToken,
                        pProjectID,
                        pSFIDCandidates,
                        pHarvest});
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionsAsync(AuthToken pAuthToken, long pProjectID, SFIDCandidate[] pSFIDCandidates, bool pHarvest) {
            this.sfidRegisterExtractionsAsync(pAuthToken, pProjectID, pSFIDCandidates, pHarvest, null);
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionsAsync(AuthToken pAuthToken, long pProjectID, SFIDCandidate[] pSFIDCandidates, bool pHarvest, object userState) {
            if ((this.sfidRegisterExtractionsOperationCompleted == null)) {
                this.sfidRegisterExtractionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidRegisterExtractionsOperationCompleted);
            }
            this.InvokeAsync("sfidRegisterExtractions", new object[] {
                        pAuthToken,
                        pProjectID,
                        pSFIDCandidates,
                        pHarvest}, this.sfidRegisterExtractionsOperationCompleted, userState);
        }
        
        private void OnsfidRegisterExtractionsOperationCompleted(object arg) {
            if ((this.sfidRegisterExtractionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidRegisterExtractionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("sfidRegisterExtractionBySFIDValuesResultsReturn")]
        public AssetSummary[] sfidRegisterExtractionBySFIDValuesResults(AuthToken pAuthToken, long projectid, string[] pSFIDs) {
            object[] results = this.Invoke("sfidRegisterExtractionBySFIDValuesResults", new object[] {
                        pAuthToken,
                        projectid,
                        pSFIDs});
            return ((AssetSummary[])(results[0]));
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionBySFIDValuesResultsAsync(AuthToken pAuthToken, long projectid, string[] pSFIDs) {
            this.sfidRegisterExtractionBySFIDValuesResultsAsync(pAuthToken, projectid, pSFIDs, null);
        }
        
        /// <remarks/>
        public void sfidRegisterExtractionBySFIDValuesResultsAsync(AuthToken pAuthToken, long projectid, string[] pSFIDs, object userState) {
            if ((this.sfidRegisterExtractionBySFIDValuesResultsOperationCompleted == null)) {
                this.sfidRegisterExtractionBySFIDValuesResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsfidRegisterExtractionBySFIDValuesResultsOperationCompleted);
            }
            this.InvokeAsync("sfidRegisterExtractionBySFIDValuesResults", new object[] {
                        pAuthToken,
                        projectid,
                        pSFIDs}, this.sfidRegisterExtractionBySFIDValuesResultsOperationCompleted, userState);
        }
        
        private void OnsfidRegisterExtractionBySFIDValuesResultsOperationCompleted(object arg) {
            if ((this.sfidRegisterExtractionBySFIDValuesResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sfidRegisterExtractionBySFIDValuesResultsCompleted(this, new sfidRegisterExtractionBySFIDValuesResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("reuseDTOReadReturn")]
        public ReuseDTO reuseDTORead() {
            object[] results = this.Invoke("reuseDTORead", new object[0]);
            return ((ReuseDTO)(results[0]));
        }
        
        /// <remarks/>
        public void reuseDTOReadAsync() {
            this.reuseDTOReadAsync(null);
        }
        
        /// <remarks/>
        public void reuseDTOReadAsync(object userState) {
            if ((this.reuseDTOReadOperationCompleted == null)) {
                this.reuseDTOReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreuseDTOReadOperationCompleted);
            }
            this.InvokeAsync("reuseDTORead", new object[0], this.reuseDTOReadOperationCompleted, userState);
        }
        
        private void OnreuseDTOReadOperationCompleted(object arg) {
            if ((this.reuseDTOReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reuseDTOReadCompleted(this, new reuseDTOReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetMetadataCreateDIME(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.Invoke("assetMetadataCreateDIME", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary});
        }
        
        /// <remarks/>
        public void assetMetadataCreateDIMEAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.assetMetadataCreateDIMEAsync(pAuthToken, pMetadataEntrySummary, null);
        }
        
        /// <remarks/>
        public void assetMetadataCreateDIMEAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary, object userState) {
            if ((this.assetMetadataCreateDIMEOperationCompleted == null)) {
                this.assetMetadataCreateDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetMetadataCreateDIMEOperationCompleted);
            }
            this.InvokeAsync("assetMetadataCreateDIME", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary}, this.assetMetadataCreateDIMEOperationCompleted, userState);
        }
        
        private void OnassetMetadataCreateDIMEOperationCompleted(object arg) {
            if ((this.assetMetadataCreateDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetMetadataCreateDIMECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetMetadataCreateSwA(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.Invoke("assetMetadataCreateSwA", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary});
        }
        
        /// <remarks/>
        public void assetMetadataCreateSwAAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.assetMetadataCreateSwAAsync(pAuthToken, pMetadataEntrySummary, null);
        }
        
        /// <remarks/>
        public void assetMetadataCreateSwAAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary, object userState) {
            if ((this.assetMetadataCreateSwAOperationCompleted == null)) {
                this.assetMetadataCreateSwAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetMetadataCreateSwAOperationCompleted);
            }
            this.InvokeAsync("assetMetadataCreateSwA", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary}, this.assetMetadataCreateSwAOperationCompleted, userState);
        }
        
        private void OnassetMetadataCreateSwAOperationCompleted(object arg) {
            if ((this.assetMetadataCreateSwACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetMetadataCreateSwACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetMetadataReadReturn")]
        public MetadataEntrySummary[] assetMetadataRead(AuthToken pAuthToken, long pAssetID) {
            object[] results = this.Invoke("assetMetadataRead", new object[] {
                        pAuthToken,
                        pAssetID});
            return ((MetadataEntrySummary[])(results[0]));
        }
        
        /// <remarks/>
        public void assetMetadataReadAsync(AuthToken pAuthToken, long pAssetID) {
            this.assetMetadataReadAsync(pAuthToken, pAssetID, null);
        }
        
        /// <remarks/>
        public void assetMetadataReadAsync(AuthToken pAuthToken, long pAssetID, object userState) {
            if ((this.assetMetadataReadOperationCompleted == null)) {
                this.assetMetadataReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetMetadataReadOperationCompleted);
            }
            this.InvokeAsync("assetMetadataRead", new object[] {
                        pAuthToken,
                        pAssetID}, this.assetMetadataReadOperationCompleted, userState);
        }
        
        private void OnassetMetadataReadOperationCompleted(object arg) {
            if ((this.assetMetadataReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetMetadataReadCompleted(this, new assetMetadataReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetMetadataReadDIMEReturn")]
        public MetadataEntrySummary[] assetMetadataReadDIME(AuthToken pAuthToken, long pAssetID) {
            object[] results = this.Invoke("assetMetadataReadDIME", new object[] {
                        pAuthToken,
                        pAssetID});
            return ((MetadataEntrySummary[])(results[0]));
        }
        
        /// <remarks/>
        public void assetMetadataReadDIMEAsync(AuthToken pAuthToken, long pAssetID) {
            this.assetMetadataReadDIMEAsync(pAuthToken, pAssetID, null);
        }
        
        /// <remarks/>
        public void assetMetadataReadDIMEAsync(AuthToken pAuthToken, long pAssetID, object userState) {
            if ((this.assetMetadataReadDIMEOperationCompleted == null)) {
                this.assetMetadataReadDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetMetadataReadDIMEOperationCompleted);
            }
            this.InvokeAsync("assetMetadataReadDIME", new object[] {
                        pAuthToken,
                        pAssetID}, this.assetMetadataReadDIMEOperationCompleted, userState);
        }
        
        private void OnassetMetadataReadDIMEOperationCompleted(object arg) {
            if ((this.assetMetadataReadDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetMetadataReadDIMECompleted(this, new assetMetadataReadDIMECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("assetMetadataReadSwAReturn")]
        public MetadataEntrySummary[] assetMetadataReadSwA(AuthToken pAuthToken, long pAssetID) {
            object[] results = this.Invoke("assetMetadataReadSwA", new object[] {
                        pAuthToken,
                        pAssetID});
            return ((MetadataEntrySummary[])(results[0]));
        }
        
        /// <remarks/>
        public void assetMetadataReadSwAAsync(AuthToken pAuthToken, long pAssetID) {
            this.assetMetadataReadSwAAsync(pAuthToken, pAssetID, null);
        }
        
        /// <remarks/>
        public void assetMetadataReadSwAAsync(AuthToken pAuthToken, long pAssetID, object userState) {
            if ((this.assetMetadataReadSwAOperationCompleted == null)) {
                this.assetMetadataReadSwAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetMetadataReadSwAOperationCompleted);
            }
            this.InvokeAsync("assetMetadataReadSwA", new object[] {
                        pAuthToken,
                        pAssetID}, this.assetMetadataReadSwAOperationCompleted, userState);
        }
        
        private void OnassetMetadataReadSwAOperationCompleted(object arg) {
            if ((this.assetMetadataReadSwACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetMetadataReadSwACompleted(this, new assetMetadataReadSwACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetMetadataUpdate(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.Invoke("assetMetadataUpdate", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary});
        }
        
        /// <remarks/>
        public void assetMetadataUpdateAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.assetMetadataUpdateAsync(pAuthToken, pMetadataEntrySummary, null);
        }
        
        /// <remarks/>
        public void assetMetadataUpdateAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary, object userState) {
            if ((this.assetMetadataUpdateOperationCompleted == null)) {
                this.assetMetadataUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetMetadataUpdateOperationCompleted);
            }
            this.InvokeAsync("assetMetadataUpdate", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary}, this.assetMetadataUpdateOperationCompleted, userState);
        }
        
        private void OnassetMetadataUpdateOperationCompleted(object arg) {
            if ((this.assetMetadataUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetMetadataUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetMetadataUpdateDIME(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.Invoke("assetMetadataUpdateDIME", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary});
        }
        
        /// <remarks/>
        public void assetMetadataUpdateDIMEAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.assetMetadataUpdateDIMEAsync(pAuthToken, pMetadataEntrySummary, null);
        }
        
        /// <remarks/>
        public void assetMetadataUpdateDIMEAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary, object userState) {
            if ((this.assetMetadataUpdateDIMEOperationCompleted == null)) {
                this.assetMetadataUpdateDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetMetadataUpdateDIMEOperationCompleted);
            }
            this.InvokeAsync("assetMetadataUpdateDIME", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary}, this.assetMetadataUpdateDIMEOperationCompleted, userState);
        }
        
        private void OnassetMetadataUpdateDIMEOperationCompleted(object arg) {
            if ((this.assetMetadataUpdateDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetMetadataUpdateDIMECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetMetadataUpdateSwA(AuthToken pAuthToken, long pAssetID, MetadataEntrySummary pMetadataEntrySummary) {
            this.Invoke("assetMetadataUpdateSwA", new object[] {
                        pAuthToken,
                        pAssetID,
                        pMetadataEntrySummary});
        }
        
        /// <remarks/>
        public void assetMetadataUpdateSwAAsync(AuthToken pAuthToken, long pAssetID, MetadataEntrySummary pMetadataEntrySummary) {
            this.assetMetadataUpdateSwAAsync(pAuthToken, pAssetID, pMetadataEntrySummary, null);
        }
        
        /// <remarks/>
        public void assetMetadataUpdateSwAAsync(AuthToken pAuthToken, long pAssetID, MetadataEntrySummary pMetadataEntrySummary, object userState) {
            if ((this.assetMetadataUpdateSwAOperationCompleted == null)) {
                this.assetMetadataUpdateSwAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetMetadataUpdateSwAOperationCompleted);
            }
            this.InvokeAsync("assetMetadataUpdateSwA", new object[] {
                        pAuthToken,
                        pAssetID,
                        pMetadataEntrySummary}, this.assetMetadataUpdateSwAOperationCompleted, userState);
        }
        
        private void OnassetMetadataUpdateSwAOperationCompleted(object arg) {
            if ((this.assetMetadataUpdateSwACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetMetadataUpdateSwACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetMetadataEntryDelete(AuthToken pAuthToken, long pMetadataEntryID) {
            this.Invoke("assetMetadataEntryDelete", new object[] {
                        pAuthToken,
                        pMetadataEntryID});
        }
        
        /// <remarks/>
        public void assetMetadataEntryDeleteAsync(AuthToken pAuthToken, long pMetadataEntryID) {
            this.assetMetadataEntryDeleteAsync(pAuthToken, pMetadataEntryID, null);
        }
        
        /// <remarks/>
        public void assetMetadataEntryDeleteAsync(AuthToken pAuthToken, long pMetadataEntryID, object userState) {
            if ((this.assetMetadataEntryDeleteOperationCompleted == null)) {
                this.assetMetadataEntryDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetMetadataEntryDeleteOperationCompleted);
            }
            this.InvokeAsync("assetMetadataEntryDelete", new object[] {
                        pAuthToken,
                        pMetadataEntryID}, this.assetMetadataEntryDeleteOperationCompleted, userState);
        }
        
        private void OnassetMetadataEntryDeleteOperationCompleted(object arg) {
            if ((this.assetMetadataEntryDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetMetadataEntryDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void assetMetadataAccept(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.Invoke("assetMetadataAccept", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary});
        }
        
        /// <remarks/>
        public void assetMetadataAcceptAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.assetMetadataAcceptAsync(pAuthToken, pMetadataEntrySummary, null);
        }
        
        /// <remarks/>
        public void assetMetadataAcceptAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary, object userState) {
            if ((this.assetMetadataAcceptOperationCompleted == null)) {
                this.assetMetadataAcceptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassetMetadataAcceptOperationCompleted);
            }
            this.InvokeAsync("assetMetadataAccept", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary}, this.assetMetadataAcceptOperationCompleted, userState);
        }
        
        private void OnassetMetadataAcceptOperationCompleted(object arg) {
            if ((this.assetMetadataAcceptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assetMetadataAcceptCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryTypeCreateReturn")]
        public MetadataEntryTypeSummary metadataEntryTypeCreate(AuthToken pAuthToken, string pName) {
            object[] results = this.Invoke("metadataEntryTypeCreate", new object[] {
                        pAuthToken,
                        pName});
            return ((MetadataEntryTypeSummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryTypeCreateAsync(AuthToken pAuthToken, string pName) {
            this.metadataEntryTypeCreateAsync(pAuthToken, pName, null);
        }
        
        /// <remarks/>
        public void metadataEntryTypeCreateAsync(AuthToken pAuthToken, string pName, object userState) {
            if ((this.metadataEntryTypeCreateOperationCompleted == null)) {
                this.metadataEntryTypeCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryTypeCreateOperationCompleted);
            }
            this.InvokeAsync("metadataEntryTypeCreate", new object[] {
                        pAuthToken,
                        pName}, this.metadataEntryTypeCreateOperationCompleted, userState);
        }
        
        private void OnmetadataEntryTypeCreateOperationCompleted(object arg) {
            if ((this.metadataEntryTypeCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryTypeCreateCompleted(this, new metadataEntryTypeCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryTypeReadReturn")]
        public MetadataEntryTypeSummary metadataEntryTypeRead(AuthToken pAuthToken, long pID) {
            object[] results = this.Invoke("metadataEntryTypeRead", new object[] {
                        pAuthToken,
                        pID});
            return ((MetadataEntryTypeSummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryTypeReadAsync(AuthToken pAuthToken, long pID) {
            this.metadataEntryTypeReadAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void metadataEntryTypeReadAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.metadataEntryTypeReadOperationCompleted == null)) {
                this.metadataEntryTypeReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryTypeReadOperationCompleted);
            }
            this.InvokeAsync("metadataEntryTypeRead", new object[] {
                        pAuthToken,
                        pID}, this.metadataEntryTypeReadOperationCompleted, userState);
        }
        
        private void OnmetadataEntryTypeReadOperationCompleted(object arg) {
            if ((this.metadataEntryTypeReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryTypeReadCompleted(this, new metadataEntryTypeReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryTypeUpdateReturn")]
        public MetadataEntryTypeSummary metadataEntryTypeUpdate(AuthToken pAuthToken, MetadataEntryTypeSummary pMetadataEntryType) {
            object[] results = this.Invoke("metadataEntryTypeUpdate", new object[] {
                        pAuthToken,
                        pMetadataEntryType});
            return ((MetadataEntryTypeSummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryTypeUpdateAsync(AuthToken pAuthToken, MetadataEntryTypeSummary pMetadataEntryType) {
            this.metadataEntryTypeUpdateAsync(pAuthToken, pMetadataEntryType, null);
        }
        
        /// <remarks/>
        public void metadataEntryTypeUpdateAsync(AuthToken pAuthToken, MetadataEntryTypeSummary pMetadataEntryType, object userState) {
            if ((this.metadataEntryTypeUpdateOperationCompleted == null)) {
                this.metadataEntryTypeUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryTypeUpdateOperationCompleted);
            }
            this.InvokeAsync("metadataEntryTypeUpdate", new object[] {
                        pAuthToken,
                        pMetadataEntryType}, this.metadataEntryTypeUpdateOperationCompleted, userState);
        }
        
        private void OnmetadataEntryTypeUpdateOperationCompleted(object arg) {
            if ((this.metadataEntryTypeUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryTypeUpdateCompleted(this, new metadataEntryTypeUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void metadataEntryTypeDelete(AuthToken pAuthToken, long pID) {
            this.Invoke("metadataEntryTypeDelete", new object[] {
                        pAuthToken,
                        pID});
        }
        
        /// <remarks/>
        public void metadataEntryTypeDeleteAsync(AuthToken pAuthToken, long pID) {
            this.metadataEntryTypeDeleteAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void metadataEntryTypeDeleteAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.metadataEntryTypeDeleteOperationCompleted == null)) {
                this.metadataEntryTypeDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryTypeDeleteOperationCompleted);
            }
            this.InvokeAsync("metadataEntryTypeDelete", new object[] {
                        pAuthToken,
                        pID}, this.metadataEntryTypeDeleteOperationCompleted, userState);
        }
        
        private void OnmetadataEntryTypeDeleteOperationCompleted(object arg) {
            if ((this.metadataEntryTypeDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryTypeDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryTypeQueryReturn")]
        public MetadataEntryTypeSummary[] metadataEntryTypeQuery(AuthToken pAuthToken, MetadataEntryTypeCriteria pQuery) {
            object[] results = this.Invoke("metadataEntryTypeQuery", new object[] {
                        pAuthToken,
                        pQuery});
            return ((MetadataEntryTypeSummary[])(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryTypeQueryAsync(AuthToken pAuthToken, MetadataEntryTypeCriteria pQuery) {
            this.metadataEntryTypeQueryAsync(pAuthToken, pQuery, null);
        }
        
        /// <remarks/>
        public void metadataEntryTypeQueryAsync(AuthToken pAuthToken, MetadataEntryTypeCriteria pQuery, object userState) {
            if ((this.metadataEntryTypeQueryOperationCompleted == null)) {
                this.metadataEntryTypeQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryTypeQueryOperationCompleted);
            }
            this.InvokeAsync("metadataEntryTypeQuery", new object[] {
                        pAuthToken,
                        pQuery}, this.metadataEntryTypeQueryOperationCompleted, userState);
        }
        
        private void OnmetadataEntryTypeQueryOperationCompleted(object arg) {
            if ((this.metadataEntryTypeQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryTypeQueryCompleted(this, new metadataEntryTypeQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryCreateDIMEReturn")]
        public MetadataEntrySummary metadataEntryCreateDIME(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            object[] results = this.Invoke("metadataEntryCreateDIME", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary});
            return ((MetadataEntrySummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryCreateDIMEAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.metadataEntryCreateDIMEAsync(pAuthToken, pMetadataEntrySummary, null);
        }
        
        /// <remarks/>
        public void metadataEntryCreateDIMEAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary, object userState) {
            if ((this.metadataEntryCreateDIMEOperationCompleted == null)) {
                this.metadataEntryCreateDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryCreateDIMEOperationCompleted);
            }
            this.InvokeAsync("metadataEntryCreateDIME", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary}, this.metadataEntryCreateDIMEOperationCompleted, userState);
        }
        
        private void OnmetadataEntryCreateDIMEOperationCompleted(object arg) {
            if ((this.metadataEntryCreateDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryCreateDIMECompleted(this, new metadataEntryCreateDIMECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryCreateSwAReturn")]
        public MetadataEntrySummary metadataEntryCreateSwA(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            object[] results = this.Invoke("metadataEntryCreateSwA", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary});
            return ((MetadataEntrySummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryCreateSwAAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.metadataEntryCreateSwAAsync(pAuthToken, pMetadataEntrySummary, null);
        }
        
        /// <remarks/>
        public void metadataEntryCreateSwAAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary, object userState) {
            if ((this.metadataEntryCreateSwAOperationCompleted == null)) {
                this.metadataEntryCreateSwAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryCreateSwAOperationCompleted);
            }
            this.InvokeAsync("metadataEntryCreateSwA", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary}, this.metadataEntryCreateSwAOperationCompleted, userState);
        }
        
        private void OnmetadataEntryCreateSwAOperationCompleted(object arg) {
            if ((this.metadataEntryCreateSwACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryCreateSwACompleted(this, new metadataEntryCreateSwACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryReadDIMEReturn")]
        public MetadataEntrySummary metadataEntryReadDIME(AuthToken pAuthToken, long pID) {
            object[] results = this.Invoke("metadataEntryReadDIME", new object[] {
                        pAuthToken,
                        pID});
            return ((MetadataEntrySummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryReadDIMEAsync(AuthToken pAuthToken, long pID) {
            this.metadataEntryReadDIMEAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void metadataEntryReadDIMEAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.metadataEntryReadDIMEOperationCompleted == null)) {
                this.metadataEntryReadDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryReadDIMEOperationCompleted);
            }
            this.InvokeAsync("metadataEntryReadDIME", new object[] {
                        pAuthToken,
                        pID}, this.metadataEntryReadDIMEOperationCompleted, userState);
        }
        
        private void OnmetadataEntryReadDIMEOperationCompleted(object arg) {
            if ((this.metadataEntryReadDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryReadDIMECompleted(this, new metadataEntryReadDIMECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="metadataEntryReadDIME1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryReadDIMEReturn")]
        public MetadataEntrySummary metadataEntryReadDIME(AuthToken pAuthToken, EntityUUID pEntityUUID) {
            object[] results = this.Invoke("metadataEntryReadDIME1", new object[] {
                        pAuthToken,
                        pEntityUUID});
            return ((MetadataEntrySummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryReadDIME1Async(AuthToken pAuthToken, EntityUUID pEntityUUID) {
            this.metadataEntryReadDIME1Async(pAuthToken, pEntityUUID, null);
        }
        
        /// <remarks/>
        public void metadataEntryReadDIME1Async(AuthToken pAuthToken, EntityUUID pEntityUUID, object userState) {
            if ((this.metadataEntryReadDIME1OperationCompleted == null)) {
                this.metadataEntryReadDIME1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryReadDIME1OperationCompleted);
            }
            this.InvokeAsync("metadataEntryReadDIME1", new object[] {
                        pAuthToken,
                        pEntityUUID}, this.metadataEntryReadDIME1OperationCompleted, userState);
        }
        
        private void OnmetadataEntryReadDIME1OperationCompleted(object arg) {
            if ((this.metadataEntryReadDIME1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryReadDIME1Completed(this, new metadataEntryReadDIME1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryReadSwAReturn")]
        public MetadataEntrySummary metadataEntryReadSwA(AuthToken pAuthToken, long pID) {
            object[] results = this.Invoke("metadataEntryReadSwA", new object[] {
                        pAuthToken,
                        pID});
            return ((MetadataEntrySummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryReadSwAAsync(AuthToken pAuthToken, long pID) {
            this.metadataEntryReadSwAAsync(pAuthToken, pID, null);
        }
        
        /// <remarks/>
        public void metadataEntryReadSwAAsync(AuthToken pAuthToken, long pID, object userState) {
            if ((this.metadataEntryReadSwAOperationCompleted == null)) {
                this.metadataEntryReadSwAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryReadSwAOperationCompleted);
            }
            this.InvokeAsync("metadataEntryReadSwA", new object[] {
                        pAuthToken,
                        pID}, this.metadataEntryReadSwAOperationCompleted, userState);
        }
        
        private void OnmetadataEntryReadSwAOperationCompleted(object arg) {
            if ((this.metadataEntryReadSwACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryReadSwACompleted(this, new metadataEntryReadSwACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="metadataEntryReadSwA1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryReadSwAReturn")]
        public MetadataEntrySummary metadataEntryReadSwA(AuthToken pAuthToken, EntityUUID pEntityUUID) {
            object[] results = this.Invoke("metadataEntryReadSwA1", new object[] {
                        pAuthToken,
                        pEntityUUID});
            return ((MetadataEntrySummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryReadSwA1Async(AuthToken pAuthToken, EntityUUID pEntityUUID) {
            this.metadataEntryReadSwA1Async(pAuthToken, pEntityUUID, null);
        }
        
        /// <remarks/>
        public void metadataEntryReadSwA1Async(AuthToken pAuthToken, EntityUUID pEntityUUID, object userState) {
            if ((this.metadataEntryReadSwA1OperationCompleted == null)) {
                this.metadataEntryReadSwA1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryReadSwA1OperationCompleted);
            }
            this.InvokeAsync("metadataEntryReadSwA1", new object[] {
                        pAuthToken,
                        pEntityUUID}, this.metadataEntryReadSwA1OperationCompleted, userState);
        }
        
        private void OnmetadataEntryReadSwA1OperationCompleted(object arg) {
            if ((this.metadataEntryReadSwA1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryReadSwA1Completed(this, new metadataEntryReadSwA1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryUpdateDIMEReturn")]
        public MetadataEntrySummary metadataEntryUpdateDIME(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            object[] results = this.Invoke("metadataEntryUpdateDIME", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary});
            return ((MetadataEntrySummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryUpdateDIMEAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.metadataEntryUpdateDIMEAsync(pAuthToken, pMetadataEntrySummary, null);
        }
        
        /// <remarks/>
        public void metadataEntryUpdateDIMEAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary, object userState) {
            if ((this.metadataEntryUpdateDIMEOperationCompleted == null)) {
                this.metadataEntryUpdateDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryUpdateDIMEOperationCompleted);
            }
            this.InvokeAsync("metadataEntryUpdateDIME", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary}, this.metadataEntryUpdateDIMEOperationCompleted, userState);
        }
        
        private void OnmetadataEntryUpdateDIMEOperationCompleted(object arg) {
            if ((this.metadataEntryUpdateDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryUpdateDIMECompleted(this, new metadataEntryUpdateDIMECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryUpdateSwAReturn")]
        public MetadataEntrySummary metadataEntryUpdateSwA(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            object[] results = this.Invoke("metadataEntryUpdateSwA", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary});
            return ((MetadataEntrySummary)(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryUpdateSwAAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary) {
            this.metadataEntryUpdateSwAAsync(pAuthToken, pMetadataEntrySummary, null);
        }
        
        /// <remarks/>
        public void metadataEntryUpdateSwAAsync(AuthToken pAuthToken, MetadataEntrySummary pMetadataEntrySummary, object userState) {
            if ((this.metadataEntryUpdateSwAOperationCompleted == null)) {
                this.metadataEntryUpdateSwAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryUpdateSwAOperationCompleted);
            }
            this.InvokeAsync("metadataEntryUpdateSwA", new object[] {
                        pAuthToken,
                        pMetadataEntrySummary}, this.metadataEntryUpdateSwAOperationCompleted, userState);
        }
        
        private void OnmetadataEntryUpdateSwAOperationCompleted(object arg) {
            if ((this.metadataEntryUpdateSwACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryUpdateSwACompleted(this, new metadataEntryUpdateSwACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void metadataEntryDelete(AuthToken pAuthToken, EntityUUID pEntityUUID) {
            this.Invoke("metadataEntryDelete", new object[] {
                        pAuthToken,
                        pEntityUUID});
        }
        
        /// <remarks/>
        public void metadataEntryDeleteAsync(AuthToken pAuthToken, EntityUUID pEntityUUID) {
            this.metadataEntryDeleteAsync(pAuthToken, pEntityUUID, null);
        }
        
        /// <remarks/>
        public void metadataEntryDeleteAsync(AuthToken pAuthToken, EntityUUID pEntityUUID, object userState) {
            if ((this.metadataEntryDeleteOperationCompleted == null)) {
                this.metadataEntryDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryDeleteOperationCompleted);
            }
            this.InvokeAsync("metadataEntryDelete", new object[] {
                        pAuthToken,
                        pEntityUUID}, this.metadataEntryDeleteOperationCompleted, userState);
        }
        
        private void OnmetadataEntryDeleteOperationCompleted(object arg) {
            if ((this.metadataEntryDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("metadataEntryQueryReturn")]
        public MetadataEntrySummary[] metadataEntryQuery(AuthToken pAuthToken, MetadataEntryCriteria pQuery) {
            object[] results = this.Invoke("metadataEntryQuery", new object[] {
                        pAuthToken,
                        pQuery});
            return ((MetadataEntrySummary[])(results[0]));
        }
        
        /// <remarks/>
        public void metadataEntryQueryAsync(AuthToken pAuthToken, MetadataEntryCriteria pQuery) {
            this.metadataEntryQueryAsync(pAuthToken, pQuery, null);
        }
        
        /// <remarks/>
        public void metadataEntryQueryAsync(AuthToken pAuthToken, MetadataEntryCriteria pQuery, object userState) {
            if ((this.metadataEntryQueryOperationCompleted == null)) {
                this.metadataEntryQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetadataEntryQueryOperationCompleted);
            }
            this.InvokeAsync("metadataEntryQuery", new object[] {
                        pAuthToken,
                        pQuery}, this.metadataEntryQueryOperationCompleted, userState);
        }
        
        private void OnmetadataEntryQueryOperationCompleted(object arg) {
            if ((this.metadataEntryQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.metadataEntryQueryCompleted(this, new metadataEntryQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testCasDelete(AuthToken pAuthToken, string pCasName) {
            this.Invoke("testCasDelete", new object[] {
                        pAuthToken,
                        pCasName});
        }
        
        /// <remarks/>
        public void testCasDeleteAsync(AuthToken pAuthToken, string pCasName) {
            this.testCasDeleteAsync(pAuthToken, pCasName, null);
        }
        
        /// <remarks/>
        public void testCasDeleteAsync(AuthToken pAuthToken, string pCasName, object userState) {
            if ((this.testCasDeleteOperationCompleted == null)) {
                this.testCasDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestCasDeleteOperationCompleted);
            }
            this.InvokeAsync("testCasDelete", new object[] {
                        pAuthToken,
                        pCasName}, this.testCasDeleteOperationCompleted, userState);
        }
        
        private void OntestCasDeleteOperationCompleted(object arg) {
            if ((this.testCasDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCasDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testCasCreate(AuthToken pAuthToken, string pCasName, string pCasType) {
            this.Invoke("testCasCreate", new object[] {
                        pAuthToken,
                        pCasName,
                        pCasType});
        }
        
        /// <remarks/>
        public void testCasCreateAsync(AuthToken pAuthToken, string pCasName, string pCasType) {
            this.testCasCreateAsync(pAuthToken, pCasName, pCasType, null);
        }
        
        /// <remarks/>
        public void testCasCreateAsync(AuthToken pAuthToken, string pCasName, string pCasType, object userState) {
            if ((this.testCasCreateOperationCompleted == null)) {
                this.testCasCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestCasCreateOperationCompleted);
            }
            this.InvokeAsync("testCasCreate", new object[] {
                        pAuthToken,
                        pCasName,
                        pCasType}, this.testCasCreateOperationCompleted, userState);
        }
        
        private void OntestCasCreateOperationCompleted(object arg) {
            if ((this.testCasCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCasCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testRoleContextAddRole(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator) {
            this.Invoke("testRoleContextAddRole", new object[] {
                        pAuthToken,
                        pRoleContextName,
                        pRoleName,
                        pRoleOperator});
        }
        
        /// <remarks/>
        public void testRoleContextAddRoleAsync(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator) {
            this.testRoleContextAddRoleAsync(pAuthToken, pRoleContextName, pRoleName, pRoleOperator, null);
        }
        
        /// <remarks/>
        public void testRoleContextAddRoleAsync(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator, object userState) {
            if ((this.testRoleContextAddRoleOperationCompleted == null)) {
                this.testRoleContextAddRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestRoleContextAddRoleOperationCompleted);
            }
            this.InvokeAsync("testRoleContextAddRole", new object[] {
                        pAuthToken,
                        pRoleContextName,
                        pRoleName,
                        pRoleOperator}, this.testRoleContextAddRoleOperationCompleted, userState);
        }
        
        private void OntestRoleContextAddRoleOperationCompleted(object arg) {
            if ((this.testRoleContextAddRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testRoleContextAddRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testRoleContextSetPermission(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator, PermissionValue pPermissionValueBean) {
            this.Invoke("testRoleContextSetPermission", new object[] {
                        pAuthToken,
                        pRoleContextName,
                        pRoleName,
                        pRoleOperator,
                        pPermissionValueBean});
        }
        
        /// <remarks/>
        public void testRoleContextSetPermissionAsync(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator, PermissionValue pPermissionValueBean) {
            this.testRoleContextSetPermissionAsync(pAuthToken, pRoleContextName, pRoleName, pRoleOperator, pPermissionValueBean, null);
        }
        
        /// <remarks/>
        public void testRoleContextSetPermissionAsync(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator, PermissionValue pPermissionValueBean, object userState) {
            if ((this.testRoleContextSetPermissionOperationCompleted == null)) {
                this.testRoleContextSetPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestRoleContextSetPermissionOperationCompleted);
            }
            this.InvokeAsync("testRoleContextSetPermission", new object[] {
                        pAuthToken,
                        pRoleContextName,
                        pRoleName,
                        pRoleOperator,
                        pPermissionValueBean}, this.testRoleContextSetPermissionOperationCompleted, userState);
        }
        
        private void OntestRoleContextSetPermissionOperationCompleted(object arg) {
            if ((this.testRoleContextSetPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testRoleContextSetPermissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testRoleContextSetPermissions(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator, PermissionValue[] pPermssionValueBeans) {
            this.Invoke("testRoleContextSetPermissions", new object[] {
                        pAuthToken,
                        pRoleContextName,
                        pRoleName,
                        pRoleOperator,
                        pPermssionValueBeans});
        }
        
        /// <remarks/>
        public void testRoleContextSetPermissionsAsync(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator, PermissionValue[] pPermssionValueBeans) {
            this.testRoleContextSetPermissionsAsync(pAuthToken, pRoleContextName, pRoleName, pRoleOperator, pPermssionValueBeans, null);
        }
        
        /// <remarks/>
        public void testRoleContextSetPermissionsAsync(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator, PermissionValue[] pPermssionValueBeans, object userState) {
            if ((this.testRoleContextSetPermissionsOperationCompleted == null)) {
                this.testRoleContextSetPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestRoleContextSetPermissionsOperationCompleted);
            }
            this.InvokeAsync("testRoleContextSetPermissions", new object[] {
                        pAuthToken,
                        pRoleContextName,
                        pRoleName,
                        pRoleOperator,
                        pPermssionValueBeans}, this.testRoleContextSetPermissionsOperationCompleted, userState);
        }
        
        private void OntestRoleContextSetPermissionsOperationCompleted(object arg) {
            if ((this.testRoleContextSetPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testRoleContextSetPermissionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testRoleContextApplySecuritySettingToExisting(AuthToken pAuthToken, string pRoleContextName) {
            this.Invoke("testRoleContextApplySecuritySettingToExisting", new object[] {
                        pAuthToken,
                        pRoleContextName});
        }
        
        /// <remarks/>
        public void testRoleContextApplySecuritySettingToExistingAsync(AuthToken pAuthToken, string pRoleContextName) {
            this.testRoleContextApplySecuritySettingToExistingAsync(pAuthToken, pRoleContextName, null);
        }
        
        /// <remarks/>
        public void testRoleContextApplySecuritySettingToExistingAsync(AuthToken pAuthToken, string pRoleContextName, object userState) {
            if ((this.testRoleContextApplySecuritySettingToExistingOperationCompleted == null)) {
                this.testRoleContextApplySecuritySettingToExistingOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestRoleContextApplySecuritySettingToExistingOperationCompleted);
            }
            this.InvokeAsync("testRoleContextApplySecuritySettingToExisting", new object[] {
                        pAuthToken,
                        pRoleContextName}, this.testRoleContextApplySecuritySettingToExistingOperationCompleted, userState);
        }
        
        private void OntestRoleContextApplySecuritySettingToExistingOperationCompleted(object arg) {
            if ((this.testRoleContextApplySecuritySettingToExistingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testRoleContextApplySecuritySettingToExistingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("testRoleContextGetAllRolesReturn")]
        public string[] testRoleContextGetAllRoles(AuthToken pAuthToken, string pRoleContextName) {
            object[] results = this.Invoke("testRoleContextGetAllRoles", new object[] {
                        pAuthToken,
                        pRoleContextName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void testRoleContextGetAllRolesAsync(AuthToken pAuthToken, string pRoleContextName) {
            this.testRoleContextGetAllRolesAsync(pAuthToken, pRoleContextName, null);
        }
        
        /// <remarks/>
        public void testRoleContextGetAllRolesAsync(AuthToken pAuthToken, string pRoleContextName, object userState) {
            if ((this.testRoleContextGetAllRolesOperationCompleted == null)) {
                this.testRoleContextGetAllRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestRoleContextGetAllRolesOperationCompleted);
            }
            this.InvokeAsync("testRoleContextGetAllRoles", new object[] {
                        pAuthToken,
                        pRoleContextName}, this.testRoleContextGetAllRolesOperationCompleted, userState);
        }
        
        private void OntestRoleContextGetAllRolesOperationCompleted(object arg) {
            if ((this.testRoleContextGetAllRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testRoleContextGetAllRolesCompleted(this, new testRoleContextGetAllRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("testRoleContextGetPermissionFromRoleReturn")]
        public string testRoleContextGetPermissionFromRole(AuthToken pAuthToken, string pRoleContextName, string pPermissionName, string pRoleName, string pRoleOperator) {
            object[] results = this.Invoke("testRoleContextGetPermissionFromRole", new object[] {
                        pAuthToken,
                        pRoleContextName,
                        pPermissionName,
                        pRoleName,
                        pRoleOperator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testRoleContextGetPermissionFromRoleAsync(AuthToken pAuthToken, string pRoleContextName, string pPermissionName, string pRoleName, string pRoleOperator) {
            this.testRoleContextGetPermissionFromRoleAsync(pAuthToken, pRoleContextName, pPermissionName, pRoleName, pRoleOperator, null);
        }
        
        /// <remarks/>
        public void testRoleContextGetPermissionFromRoleAsync(AuthToken pAuthToken, string pRoleContextName, string pPermissionName, string pRoleName, string pRoleOperator, object userState) {
            if ((this.testRoleContextGetPermissionFromRoleOperationCompleted == null)) {
                this.testRoleContextGetPermissionFromRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestRoleContextGetPermissionFromRoleOperationCompleted);
            }
            this.InvokeAsync("testRoleContextGetPermissionFromRole", new object[] {
                        pAuthToken,
                        pRoleContextName,
                        pPermissionName,
                        pRoleName,
                        pRoleOperator}, this.testRoleContextGetPermissionFromRoleOperationCompleted, userState);
        }
        
        private void OntestRoleContextGetPermissionFromRoleOperationCompleted(object arg) {
            if ((this.testRoleContextGetPermissionFromRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testRoleContextGetPermissionFromRoleCompleted(this, new testRoleContextGetPermissionFromRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testRoleContextClearRoles(AuthToken pAuthToken, string pRoleContextName) {
            this.Invoke("testRoleContextClearRoles", new object[] {
                        pAuthToken,
                        pRoleContextName});
        }
        
        /// <remarks/>
        public void testRoleContextClearRolesAsync(AuthToken pAuthToken, string pRoleContextName) {
            this.testRoleContextClearRolesAsync(pAuthToken, pRoleContextName, null);
        }
        
        /// <remarks/>
        public void testRoleContextClearRolesAsync(AuthToken pAuthToken, string pRoleContextName, object userState) {
            if ((this.testRoleContextClearRolesOperationCompleted == null)) {
                this.testRoleContextClearRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestRoleContextClearRolesOperationCompleted);
            }
            this.InvokeAsync("testRoleContextClearRoles", new object[] {
                        pAuthToken,
                        pRoleContextName}, this.testRoleContextClearRolesOperationCompleted, userState);
        }
        
        private void OntestRoleContextClearRolesOperationCompleted(object arg) {
            if ((this.testRoleContextClearRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testRoleContextClearRolesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void testRoleContextRemoveRole(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator) {
            this.Invoke("testRoleContextRemoveRole", new object[] {
                        pAuthToken,
                        pRoleContextName,
                        pRoleName,
                        pRoleOperator});
        }
        
        /// <remarks/>
        public void testRoleContextRemoveRoleAsync(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator) {
            this.testRoleContextRemoveRoleAsync(pAuthToken, pRoleContextName, pRoleName, pRoleOperator, null);
        }
        
        /// <remarks/>
        public void testRoleContextRemoveRoleAsync(AuthToken pAuthToken, string pRoleContextName, string pRoleName, string pRoleOperator, object userState) {
            if ((this.testRoleContextRemoveRoleOperationCompleted == null)) {
                this.testRoleContextRemoveRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestRoleContextRemoveRoleOperationCompleted);
            }
            this.InvokeAsync("testRoleContextRemoveRole", new object[] {
                        pAuthToken,
                        pRoleContextName,
                        pRoleName,
                        pRoleOperator}, this.testRoleContextRemoveRoleOperationCompleted, userState);
        }
        
        private void OntestRoleContextRemoveRoleOperationCompleted(object arg) {
            if ((this.testRoleContextRemoveRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testRoleContextRemoveRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("testDoSQLReturn")]
        public int testDoSQL(string pSQL) {
            object[] results = this.Invoke("testDoSQL", new object[] {
                        pSQL});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void testDoSQLAsync(string pSQL) {
            this.testDoSQLAsync(pSQL, null);
        }
        
        /// <remarks/>
        public void testDoSQLAsync(string pSQL, object userState) {
            if ((this.testDoSQLOperationCompleted == null)) {
                this.testDoSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestDoSQLOperationCompleted);
            }
            this.InvokeAsync("testDoSQL", new object[] {
                        pSQL}, this.testDoSQLOperationCompleted, userState);
        }
        
        private void OntestDoSQLOperationCompleted(object arg) {
            if ((this.testDoSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testDoSQLCompleted(this, new testDoSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("testHasSufficientAssetsReturn")]
        public bool testHasSufficientAssets() {
            object[] results = this.Invoke("testHasSufficientAssets", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void testHasSufficientAssetsAsync() {
            this.testHasSufficientAssetsAsync(null);
        }
        
        /// <remarks/>
        public void testHasSufficientAssetsAsync(object userState) {
            if ((this.testHasSufficientAssetsOperationCompleted == null)) {
                this.testHasSufficientAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestHasSufficientAssetsOperationCompleted);
            }
            this.InvokeAsync("testHasSufficientAssets", new object[0], this.testHasSufficientAssetsOperationCompleted, userState);
        }
        
        private void OntestHasSufficientAssetsOperationCompleted(object arg) {
            if ((this.testHasSufficientAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testHasSufficientAssetsCompleted(this, new testHasSufficientAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("testDoSimpleQueryReturn")]
        public string[] testDoSimpleQuery(string[] pArgs, string pColumnName, string pQuery) {
            object[] results = this.Invoke("testDoSimpleQuery", new object[] {
                        pArgs,
                        pColumnName,
                        pQuery});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void testDoSimpleQueryAsync(string[] pArgs, string pColumnName, string pQuery) {
            this.testDoSimpleQueryAsync(pArgs, pColumnName, pQuery, null);
        }
        
        /// <remarks/>
        public void testDoSimpleQueryAsync(string[] pArgs, string pColumnName, string pQuery, object userState) {
            if ((this.testDoSimpleQueryOperationCompleted == null)) {
                this.testDoSimpleQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestDoSimpleQueryOperationCompleted);
            }
            this.InvokeAsync("testDoSimpleQuery", new object[] {
                        pArgs,
                        pColumnName,
                        pQuery}, this.testDoSimpleQueryOperationCompleted, userState);
        }
        
        private void OntestDoSimpleQueryOperationCompleted(object arg) {
            if ((this.testDoSimpleQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testDoSimpleQueryCompleted(this, new testDoSimpleQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void subscriptionCreate(AuthToken pAuthToken, long[] pAssetIDs, bool pFailOnAnyError) {
            this.Invoke("subscriptionCreate", new object[] {
                        pAuthToken,
                        pAssetIDs,
                        pFailOnAnyError});
        }
        
        /// <remarks/>
        public void subscriptionCreateAsync(AuthToken pAuthToken, long[] pAssetIDs, bool pFailOnAnyError) {
            this.subscriptionCreateAsync(pAuthToken, pAssetIDs, pFailOnAnyError, null);
        }
        
        /// <remarks/>
        public void subscriptionCreateAsync(AuthToken pAuthToken, long[] pAssetIDs, bool pFailOnAnyError, object userState) {
            if ((this.subscriptionCreateOperationCompleted == null)) {
                this.subscriptionCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscriptionCreateOperationCompleted);
            }
            this.InvokeAsync("subscriptionCreate", new object[] {
                        pAuthToken,
                        pAssetIDs,
                        pFailOnAnyError}, this.subscriptionCreateOperationCompleted, userState);
        }
        
        private void OnsubscriptionCreateOperationCompleted(object arg) {
            if ((this.subscriptionCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscriptionCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void subscriptionDelete(AuthToken pAuthToken, long[] pAssetIDs) {
            this.Invoke("subscriptionDelete", new object[] {
                        pAuthToken,
                        pAssetIDs});
        }
        
        /// <remarks/>
        public void subscriptionDeleteAsync(AuthToken pAuthToken, long[] pAssetIDs) {
            this.subscriptionDeleteAsync(pAuthToken, pAssetIDs, null);
        }
        
        /// <remarks/>
        public void subscriptionDeleteAsync(AuthToken pAuthToken, long[] pAssetIDs, object userState) {
            if ((this.subscriptionDeleteOperationCompleted == null)) {
                this.subscriptionDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscriptionDeleteOperationCompleted);
            }
            this.InvokeAsync("subscriptionDelete", new object[] {
                        pAuthToken,
                        pAssetIDs}, this.subscriptionDeleteOperationCompleted, userState);
        }
        
        private void OnsubscriptionDeleteOperationCompleted(object arg) {
            if ((this.subscriptionDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscriptionDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("subscriptionReadSubscribedAssetsReturn")]
        public long[] subscriptionReadSubscribedAssets(AuthToken pAuthToken) {
            object[] results = this.Invoke("subscriptionReadSubscribedAssets", new object[] {
                        pAuthToken});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void subscriptionReadSubscribedAssetsAsync(AuthToken pAuthToken) {
            this.subscriptionReadSubscribedAssetsAsync(pAuthToken, null);
        }
        
        /// <remarks/>
        public void subscriptionReadSubscribedAssetsAsync(AuthToken pAuthToken, object userState) {
            if ((this.subscriptionReadSubscribedAssetsOperationCompleted == null)) {
                this.subscriptionReadSubscribedAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscriptionReadSubscribedAssetsOperationCompleted);
            }
            this.InvokeAsync("subscriptionReadSubscribedAssets", new object[] {
                        pAuthToken}, this.subscriptionReadSubscribedAssetsOperationCompleted, userState);
        }
        
        private void OnsubscriptionReadSubscribedAssetsOperationCompleted(object arg) {
            if ((this.subscriptionReadSubscribedAssetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscriptionReadSubscribedAssetsCompleted(this, new subscriptionReadSubscribedAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("subscriptionReadUsersSubscribedToAssetReturn")]
        public RegistryUser[] subscriptionReadUsersSubscribedToAsset(AuthToken pAuthTokenBean, long pAssetID) {
            object[] results = this.Invoke("subscriptionReadUsersSubscribedToAsset", new object[] {
                        pAuthTokenBean,
                        pAssetID});
            return ((RegistryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void subscriptionReadUsersSubscribedToAssetAsync(AuthToken pAuthTokenBean, long pAssetID) {
            this.subscriptionReadUsersSubscribedToAssetAsync(pAuthTokenBean, pAssetID, null);
        }
        
        /// <remarks/>
        public void subscriptionReadUsersSubscribedToAssetAsync(AuthToken pAuthTokenBean, long pAssetID, object userState) {
            if ((this.subscriptionReadUsersSubscribedToAssetOperationCompleted == null)) {
                this.subscriptionReadUsersSubscribedToAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscriptionReadUsersSubscribedToAssetOperationCompleted);
            }
            this.InvokeAsync("subscriptionReadUsersSubscribedToAsset", new object[] {
                        pAuthTokenBean,
                        pAssetID}, this.subscriptionReadUsersSubscribedToAssetOperationCompleted, userState);
        }
        
        private void OnsubscriptionReadUsersSubscribedToAssetOperationCompleted(object arg) {
            if ((this.subscriptionReadUsersSubscribedToAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscriptionReadUsersSubscribedToAssetCompleted(this, new subscriptionReadUsersSubscribedToAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("retrieveRootArtifactsReturn")]
        public Asset[] retrieveRootArtifacts(AuthToken pAuthToken, long pAbstractAssetId) {
            object[] results = this.Invoke("retrieveRootArtifacts", new object[] {
                        pAuthToken,
                        pAbstractAssetId});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void retrieveRootArtifactsAsync(AuthToken pAuthToken, long pAbstractAssetId) {
            this.retrieveRootArtifactsAsync(pAuthToken, pAbstractAssetId, null);
        }
        
        /// <remarks/>
        public void retrieveRootArtifactsAsync(AuthToken pAuthToken, long pAbstractAssetId, object userState) {
            if ((this.retrieveRootArtifactsOperationCompleted == null)) {
                this.retrieveRootArtifactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveRootArtifactsOperationCompleted);
            }
            this.InvokeAsync("retrieveRootArtifacts", new object[] {
                        pAuthToken,
                        pAbstractAssetId}, this.retrieveRootArtifactsOperationCompleted, userState);
        }
        
        private void OnretrieveRootArtifactsOperationCompleted(object arg) {
            if ((this.retrieveRootArtifactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveRootArtifactsCompleted(this, new retrieveRootArtifactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("retrieveRootArtifactsWithCustomRelationshipReturn")]
        public Asset[] retrieveRootArtifactsWithCustomRelationship(AuthToken pAuthToken, long pAbstractAssetId, string pDefineRelationshipTypeName) {
            object[] results = this.Invoke("retrieveRootArtifactsWithCustomRelationship", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pDefineRelationshipTypeName});
            return ((Asset[])(results[0]));
        }
        
        /// <remarks/>
        public void retrieveRootArtifactsWithCustomRelationshipAsync(AuthToken pAuthToken, long pAbstractAssetId, string pDefineRelationshipTypeName) {
            this.retrieveRootArtifactsWithCustomRelationshipAsync(pAuthToken, pAbstractAssetId, pDefineRelationshipTypeName, null);
        }
        
        /// <remarks/>
        public void retrieveRootArtifactsWithCustomRelationshipAsync(AuthToken pAuthToken, long pAbstractAssetId, string pDefineRelationshipTypeName, object userState) {
            if ((this.retrieveRootArtifactsWithCustomRelationshipOperationCompleted == null)) {
                this.retrieveRootArtifactsWithCustomRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveRootArtifactsWithCustomRelationshipOperationCompleted);
            }
            this.InvokeAsync("retrieveRootArtifactsWithCustomRelationship", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pDefineRelationshipTypeName}, this.retrieveRootArtifactsWithCustomRelationshipOperationCompleted, userState);
        }
        
        private void OnretrieveRootArtifactsWithCustomRelationshipOperationCompleted(object arg) {
            if ((this.retrieveRootArtifactsWithCustomRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveRootArtifactsWithCustomRelationshipCompleted(this, new retrieveRootArtifactsWithCustomRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("retrieveLatestRootArtifactReturn")]
        public Asset retrieveLatestRootArtifact(AuthToken pAuthToken, long pAbstractAssetId) {
            object[] results = this.Invoke("retrieveLatestRootArtifact", new object[] {
                        pAuthToken,
                        pAbstractAssetId});
            return ((Asset)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveLatestRootArtifactAsync(AuthToken pAuthToken, long pAbstractAssetId) {
            this.retrieveLatestRootArtifactAsync(pAuthToken, pAbstractAssetId, null);
        }
        
        /// <remarks/>
        public void retrieveLatestRootArtifactAsync(AuthToken pAuthToken, long pAbstractAssetId, object userState) {
            if ((this.retrieveLatestRootArtifactOperationCompleted == null)) {
                this.retrieveLatestRootArtifactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveLatestRootArtifactOperationCompleted);
            }
            this.InvokeAsync("retrieveLatestRootArtifact", new object[] {
                        pAuthToken,
                        pAbstractAssetId}, this.retrieveLatestRootArtifactOperationCompleted, userState);
        }
        
        private void OnretrieveLatestRootArtifactOperationCompleted(object arg) {
            if ((this.retrieveLatestRootArtifactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveLatestRootArtifactCompleted(this, new retrieveLatestRootArtifactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void retrieveArtifactCollectionAsDIME(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId) {
            this.Invoke("retrieveArtifactCollectionAsDIME", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId});
        }
        
        /// <remarks/>
        public void retrieveArtifactCollectionAsDIMEAsync(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId) {
            this.retrieveArtifactCollectionAsDIMEAsync(pAuthToken, pAbstractAssetId, pArtifactRootId, null);
        }
        
        /// <remarks/>
        public void retrieveArtifactCollectionAsDIMEAsync(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, object userState) {
            if ((this.retrieveArtifactCollectionAsDIMEOperationCompleted == null)) {
                this.retrieveArtifactCollectionAsDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveArtifactCollectionAsDIMEOperationCompleted);
            }
            this.InvokeAsync("retrieveArtifactCollectionAsDIME", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId}, this.retrieveArtifactCollectionAsDIMEOperationCompleted, userState);
        }
        
        private void OnretrieveArtifactCollectionAsDIMEOperationCompleted(object arg) {
            if ((this.retrieveArtifactCollectionAsDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveArtifactCollectionAsDIMECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void retrieveAndRecordUsageOfArtifactCollectionAsDIME(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId) {
            this.Invoke("retrieveAndRecordUsageOfArtifactCollectionAsDIME", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId,
                        pProjectId});
        }
        
        /// <remarks/>
        public void retrieveAndRecordUsageOfArtifactCollectionAsDIMEAsync(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId) {
            this.retrieveAndRecordUsageOfArtifactCollectionAsDIMEAsync(pAuthToken, pAbstractAssetId, pArtifactRootId, pProjectId, null);
        }
        
        /// <remarks/>
        public void retrieveAndRecordUsageOfArtifactCollectionAsDIMEAsync(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId, object userState) {
            if ((this.retrieveAndRecordUsageOfArtifactCollectionAsDIMEOperationCompleted == null)) {
                this.retrieveAndRecordUsageOfArtifactCollectionAsDIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveAndRecordUsageOfArtifactCollectionAsDIMEOperationCompleted);
            }
            this.InvokeAsync("retrieveAndRecordUsageOfArtifactCollectionAsDIME", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId,
                        pProjectId}, this.retrieveAndRecordUsageOfArtifactCollectionAsDIMEOperationCompleted, userState);
        }
        
        private void OnretrieveAndRecordUsageOfArtifactCollectionAsDIMEOperationCompleted(object arg) {
            if ((this.retrieveAndRecordUsageOfArtifactCollectionAsDIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveAndRecordUsageOfArtifactCollectionAsDIMECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="retrieveAndRecordUsageOfArtifactCollectionAsDIME1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void retrieveAndRecordUsageOfArtifactCollectionAsDIME(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId, RegistryUser pRbacRegistrySecUserBean) {
            this.Invoke("retrieveAndRecordUsageOfArtifactCollectionAsDIME1", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId,
                        pProjectId,
                        pRbacRegistrySecUserBean});
        }
        
        /// <remarks/>
        public void retrieveAndRecordUsageOfArtifactCollectionAsDIME1Async(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId, RegistryUser pRbacRegistrySecUserBean) {
            this.retrieveAndRecordUsageOfArtifactCollectionAsDIME1Async(pAuthToken, pAbstractAssetId, pArtifactRootId, pProjectId, pRbacRegistrySecUserBean, null);
        }
        
        /// <remarks/>
        public void retrieveAndRecordUsageOfArtifactCollectionAsDIME1Async(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId, RegistryUser pRbacRegistrySecUserBean, object userState) {
            if ((this.retrieveAndRecordUsageOfArtifactCollectionAsDIME1OperationCompleted == null)) {
                this.retrieveAndRecordUsageOfArtifactCollectionAsDIME1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveAndRecordUsageOfArtifactCollectionAsDIME1OperationCompleted);
            }
            this.InvokeAsync("retrieveAndRecordUsageOfArtifactCollectionAsDIME1", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId,
                        pProjectId,
                        pRbacRegistrySecUserBean}, this.retrieveAndRecordUsageOfArtifactCollectionAsDIME1OperationCompleted, userState);
        }
        
        private void OnretrieveAndRecordUsageOfArtifactCollectionAsDIME1OperationCompleted(object arg) {
            if ((this.retrieveAndRecordUsageOfArtifactCollectionAsDIME1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveAndRecordUsageOfArtifactCollectionAsDIME1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void retrieveArtifactCollectionAsSwa(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId) {
            this.Invoke("retrieveArtifactCollectionAsSwa", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId});
        }
        
        /// <remarks/>
        public void retrieveArtifactCollectionAsSwaAsync(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId) {
            this.retrieveArtifactCollectionAsSwaAsync(pAuthToken, pAbstractAssetId, pArtifactRootId, null);
        }
        
        /// <remarks/>
        public void retrieveArtifactCollectionAsSwaAsync(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, object userState) {
            if ((this.retrieveArtifactCollectionAsSwaOperationCompleted == null)) {
                this.retrieveArtifactCollectionAsSwaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveArtifactCollectionAsSwaOperationCompleted);
            }
            this.InvokeAsync("retrieveArtifactCollectionAsSwa", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId}, this.retrieveArtifactCollectionAsSwaOperationCompleted, userState);
        }
        
        private void OnretrieveArtifactCollectionAsSwaOperationCompleted(object arg) {
            if ((this.retrieveArtifactCollectionAsSwaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveArtifactCollectionAsSwaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void retrieveAndRecordUsageOfArtifactCollectionAsSwa(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId) {
            this.Invoke("retrieveAndRecordUsageOfArtifactCollectionAsSwa", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId,
                        pProjectId});
        }
        
        /// <remarks/>
        public void retrieveAndRecordUsageOfArtifactCollectionAsSwaAsync(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId) {
            this.retrieveAndRecordUsageOfArtifactCollectionAsSwaAsync(pAuthToken, pAbstractAssetId, pArtifactRootId, pProjectId, null);
        }
        
        /// <remarks/>
        public void retrieveAndRecordUsageOfArtifactCollectionAsSwaAsync(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId, object userState) {
            if ((this.retrieveAndRecordUsageOfArtifactCollectionAsSwaOperationCompleted == null)) {
                this.retrieveAndRecordUsageOfArtifactCollectionAsSwaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveAndRecordUsageOfArtifactCollectionAsSwaOperationCompleted);
            }
            this.InvokeAsync("retrieveAndRecordUsageOfArtifactCollectionAsSwa", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId,
                        pProjectId}, this.retrieveAndRecordUsageOfArtifactCollectionAsSwaOperationCompleted, userState);
        }
        
        private void OnretrieveAndRecordUsageOfArtifactCollectionAsSwaOperationCompleted(object arg) {
            if ((this.retrieveAndRecordUsageOfArtifactCollectionAsSwaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveAndRecordUsageOfArtifactCollectionAsSwaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="retrieveAndRecordUsageOfArtifactCollectionAsSwa1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        public void retrieveAndRecordUsageOfArtifactCollectionAsSwa(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId, RegistryUser pRbacRegistrySecUserBean) {
            this.Invoke("retrieveAndRecordUsageOfArtifactCollectionAsSwa1", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId,
                        pProjectId,
                        pRbacRegistrySecUserBean});
        }
        
        /// <remarks/>
        public void retrieveAndRecordUsageOfArtifactCollectionAsSwa1Async(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId, RegistryUser pRbacRegistrySecUserBean) {
            this.retrieveAndRecordUsageOfArtifactCollectionAsSwa1Async(pAuthToken, pAbstractAssetId, pArtifactRootId, pProjectId, pRbacRegistrySecUserBean, null);
        }
        
        /// <remarks/>
        public void retrieveAndRecordUsageOfArtifactCollectionAsSwa1Async(AuthToken pAuthToken, long pAbstractAssetId, long pArtifactRootId, long pProjectId, RegistryUser pRbacRegistrySecUserBean, object userState) {
            if ((this.retrieveAndRecordUsageOfArtifactCollectionAsSwa1OperationCompleted == null)) {
                this.retrieveAndRecordUsageOfArtifactCollectionAsSwa1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveAndRecordUsageOfArtifactCollectionAsSwa1OperationCompleted);
            }
            this.InvokeAsync("retrieveAndRecordUsageOfArtifactCollectionAsSwa1", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pArtifactRootId,
                        pProjectId,
                        pRbacRegistrySecUserBean}, this.retrieveAndRecordUsageOfArtifactCollectionAsSwa1OperationCompleted, userState);
        }
        
        private void OnretrieveAndRecordUsageOfArtifactCollectionAsSwa1OperationCompleted(object arg) {
            if ((this.retrieveAndRecordUsageOfArtifactCollectionAsSwa1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveAndRecordUsageOfArtifactCollectionAsSwa1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("getLatestArtifactsReturn")]
        public FileInfo[] getLatestArtifacts(AuthToken pAuthToken, long pAbstractAssetId, bool pIsService) {
            object[] results = this.Invoke("getLatestArtifacts", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pIsService});
            return ((FileInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getLatestArtifactsAsync(AuthToken pAuthToken, long pAbstractAssetId, bool pIsService) {
            this.getLatestArtifactsAsync(pAuthToken, pAbstractAssetId, pIsService, null);
        }
        
        /// <remarks/>
        public void getLatestArtifactsAsync(AuthToken pAuthToken, long pAbstractAssetId, bool pIsService, object userState) {
            if ((this.getLatestArtifactsOperationCompleted == null)) {
                this.getLatestArtifactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLatestArtifactsOperationCompleted);
            }
            this.InvokeAsync("getLatestArtifacts", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pIsService}, this.getLatestArtifactsOperationCompleted, userState);
        }
        
        private void OngetLatestArtifactsOperationCompleted(object arg) {
            if ((this.getLatestArtifactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLatestArtifactsCompleted(this, new getLatestArtifactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.openapi.registry.flashline.com/v300", ResponseNamespace="http://service.openapi.registry.flashline.com/v300")]
        [return: System.Xml.Serialization.SoapElementAttribute("getLatestArtifactsCustomRelationshipTypesReturn")]
        public FileInfo[] getLatestArtifactsCustomRelationshipTypes(AuthToken pAuthToken, long pAbstractAssetId, bool pIsService, string pEndpointRelType, string pInterfaceRelType, string pDefineRelationshipTypeName) {
            object[] results = this.Invoke("getLatestArtifactsCustomRelationshipTypes", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pIsService,
                        pEndpointRelType,
                        pInterfaceRelType,
                        pDefineRelationshipTypeName});
            return ((FileInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getLatestArtifactsCustomRelationshipTypesAsync(AuthToken pAuthToken, long pAbstractAssetId, bool pIsService, string pEndpointRelType, string pInterfaceRelType, string pDefineRelationshipTypeName) {
            this.getLatestArtifactsCustomRelationshipTypesAsync(pAuthToken, pAbstractAssetId, pIsService, pEndpointRelType, pInterfaceRelType, pDefineRelationshipTypeName, null);
        }
        
        /// <remarks/>
        public void getLatestArtifactsCustomRelationshipTypesAsync(AuthToken pAuthToken, long pAbstractAssetId, bool pIsService, string pEndpointRelType, string pInterfaceRelType, string pDefineRelationshipTypeName, object userState) {
            if ((this.getLatestArtifactsCustomRelationshipTypesOperationCompleted == null)) {
                this.getLatestArtifactsCustomRelationshipTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLatestArtifactsCustomRelationshipTypesOperationCompleted);
            }
            this.InvokeAsync("getLatestArtifactsCustomRelationshipTypes", new object[] {
                        pAuthToken,
                        pAbstractAssetId,
                        pIsService,
                        pEndpointRelType,
                        pInterfaceRelType,
                        pDefineRelationshipTypeName}, this.getLatestArtifactsCustomRelationshipTypesOperationCompleted, userState);
        }
        
        private void OngetLatestArtifactsCustomRelationshipTypesOperationCompleted(object arg) {
            if ((this.getLatestArtifactsCustomRelationshipTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLatestArtifactsCustomRelationshipTypesCompleted(this, new getLatestArtifactsCustomRelationshipTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class AuthToken {
        
        private string applicationTokenField;
        
        private string tokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string applicationToken {
            get {
                return this.applicationTokenField;
            }
            set {
                this.applicationTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ImportExportException))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(APIValidationException))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ImportExportCanceledException))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://base.openapi.registry.flashline.com")]
    public partial class OpenAPIException {
        
        private string[] messageArgumentsField;
        
        private int serverErrorCodeField;
        
        private string serverMessageField;
        
        private string serverStackTraceField;
        
        private string severityField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] messageArguments {
            get {
                return this.messageArgumentsField;
            }
            set {
                this.messageArgumentsField = value;
            }
        }
        
        /// <remarks/>
        public int serverErrorCode {
            get {
                return this.serverErrorCodeField;
            }
            set {
                this.serverErrorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string serverMessage {
            get {
                return this.serverMessageField;
            }
            set {
                this.serverMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string serverStackTrace {
            get {
                return this.serverStackTraceField;
            }
            set {
                this.serverStackTraceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://base.openapi.registry.flashline.com")]
    public partial class ImportExportException : OpenAPIException {
        
        private ImpExpJob jobField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ImpExpJob job {
            get {
                return this.jobField;
            }
            set {
                this.jobField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ImpExpJob {
        
        private long idField;
        
        private AuditMsg auditMsgField;
        
        private string descField;
        
        private string displayNameField;
        
        private string errorMsgField;
        
        private int numCompleteField;
        
        private int numTotalField;
        
        private string resultStatusField;
        
        private System.Nullable<System.DateTime> startTimeField;
        
        private string stateField;
        
        private int typeField;
        
        private System.Nullable<System.DateTime> updateTimeField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        private long userIDField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AuditMsg auditMsg {
            get {
                return this.auditMsgField;
            }
            set {
                this.auditMsgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string desc {
            get {
                return this.descField;
            }
            set {
                this.descField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string errorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        public int numComplete {
            get {
                return this.numCompleteField;
            }
            set {
                this.numCompleteField = value;
            }
        }
        
        /// <remarks/>
        public int numTotal {
            get {
                return this.numTotalField;
            }
            set {
                this.numTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string resultStatus {
            get {
                return this.resultStatusField;
            }
            set {
                this.resultStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updateTime {
            get {
                return this.updateTimeField;
            }
            set {
                this.updateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
        
        /// <remarks/>
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class AuditMsg {
        
        private long idField;
        
        private long auditIDField;
        
        private long createdByField;
        
        private System.Nullable<System.DateTime> createdDateField;
        
        private string messageField;
        
        private int severityField;
        
        private string summaryField;
        
        private string[] summaryArgsField;
        
        private int summaryIDField;
        
        private int typeField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public long auditID {
            get {
                return this.auditIDField;
            }
            set {
                this.auditIDField = value;
            }
        }
        
        /// <remarks/>
        public long createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public int severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] summaryArgs {
            get {
                return this.summaryArgsField;
            }
            set {
                this.summaryArgsField = value;
            }
        }
        
        /// <remarks/>
        public int summaryID {
            get {
                return this.summaryIDField;
            }
            set {
                this.summaryIDField = value;
            }
        }
        
        /// <remarks/>
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://base.openapi.registry.flashline.com")]
    public partial class APIValidationException : OpenAPIException {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://base.openapi.registry.flashline.com")]
    public partial class ImportExportCanceledException : OpenAPIException {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.oracle.com")]
    public partial class EntityArtifactRule {
        
        private bool automaticUsageField;
        
        private string displayNamePluralField;
        
        private string displayNameSingularField;
        
        private bool displayOnlyField;
        
        private long entityTypeIdField;
        
        private bool finalDestinationField;
        
        private string groupDescriptionField;
        
        private bool mutuallyExclusiveField;
        
        private bool parentSelectedByDefaultField;
        
        private string relatedEntityUUIDField;
        
        private string relationshipDirectionField;
        
        private RelationshipType relationshipTypeField;
        
        private string secondaryDisplayField;
        
        private bool selectedByDefaultField;
        
        private bool sourceField;
        
        private string startingEntityUUIDField;
        
        /// <remarks/>
        public bool automaticUsage {
            get {
                return this.automaticUsageField;
            }
            set {
                this.automaticUsageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayNamePlural {
            get {
                return this.displayNamePluralField;
            }
            set {
                this.displayNamePluralField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayNameSingular {
            get {
                return this.displayNameSingularField;
            }
            set {
                this.displayNameSingularField = value;
            }
        }
        
        /// <remarks/>
        public bool displayOnly {
            get {
                return this.displayOnlyField;
            }
            set {
                this.displayOnlyField = value;
            }
        }
        
        /// <remarks/>
        public long entityTypeId {
            get {
                return this.entityTypeIdField;
            }
            set {
                this.entityTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public bool finalDestination {
            get {
                return this.finalDestinationField;
            }
            set {
                this.finalDestinationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string groupDescription {
            get {
                return this.groupDescriptionField;
            }
            set {
                this.groupDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool mutuallyExclusive {
            get {
                return this.mutuallyExclusiveField;
            }
            set {
                this.mutuallyExclusiveField = value;
            }
        }
        
        /// <remarks/>
        public bool parentSelectedByDefault {
            get {
                return this.parentSelectedByDefaultField;
            }
            set {
                this.parentSelectedByDefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string relatedEntityUUID {
            get {
                return this.relatedEntityUUIDField;
            }
            set {
                this.relatedEntityUUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string relationshipDirection {
            get {
                return this.relationshipDirectionField;
            }
            set {
                this.relationshipDirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RelationshipType relationshipType {
            get {
                return this.relationshipTypeField;
            }
            set {
                this.relationshipTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string secondaryDisplay {
            get {
                return this.secondaryDisplayField;
            }
            set {
                this.secondaryDisplayField = value;
            }
        }
        
        /// <remarks/>
        public bool selectedByDefault {
            get {
                return this.selectedByDefaultField;
            }
            set {
                this.selectedByDefaultField = value;
            }
        }
        
        /// <remarks/>
        public bool source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string startingEntityUUID {
            get {
                return this.startingEntityUUIDField;
            }
            set {
                this.startingEntityUUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class RelationshipType {
        
        private long idField;
        
        private string directionField;
        
        private string displayNameField;
        
        private string displayPrimaryField;
        
        private string displaySecondaryField;
        
        private bool extractableField;
        
        private bool handledByPluginField;
        
        private bool immutableField;
        
        private string nameField;
        
        private long[] primaryIDsField;
        
        private bool promptNotifyPrimaryField;
        
        private bool promptNotifySecondaryField;
        
        private long[] secondaryIDsField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayPrimary {
            get {
                return this.displayPrimaryField;
            }
            set {
                this.displayPrimaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displaySecondary {
            get {
                return this.displaySecondaryField;
            }
            set {
                this.displaySecondaryField = value;
            }
        }
        
        /// <remarks/>
        public bool extractable {
            get {
                return this.extractableField;
            }
            set {
                this.extractableField = value;
            }
        }
        
        /// <remarks/>
        public bool handledByPlugin {
            get {
                return this.handledByPluginField;
            }
            set {
                this.handledByPluginField = value;
            }
        }
        
        /// <remarks/>
        public bool immutable {
            get {
                return this.immutableField;
            }
            set {
                this.immutableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public long[] primaryIDs {
            get {
                return this.primaryIDsField;
            }
            set {
                this.primaryIDsField = value;
            }
        }
        
        /// <remarks/>
        public bool promptNotifyPrimary {
            get {
                return this.promptNotifyPrimaryField;
            }
            set {
                this.promptNotifyPrimaryField = value;
            }
        }
        
        /// <remarks/>
        public bool promptNotifySecondary {
            get {
                return this.promptNotifySecondaryField;
            }
            set {
                this.promptNotifySecondaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public long[] secondaryIDs {
            get {
                return this.secondaryIDsField;
            }
            set {
                this.secondaryIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public abstract partial class ISearchElement {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SFIDCandidateCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Or))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(And))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MetadataEntryCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MetadataEntryTypeCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SFIDCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(VendorCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RelationshipTypeCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RoleCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(UserCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SystemSettingsCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AssetTypeCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AcceptableValueListCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(DepartmentCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProjectCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ContactCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CategorizationTypeCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AssetCriteria))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactStoreCriteria))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class SearchTermGroup {
        
        private string[] orderByField;
        
        private string qualifierField;
        
        private SearchTermGroup[] searchTermGroupsField;
        
        private SearchTerm[] searchTermsField;
        
        private string[] supportedKeysField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] orderBy {
            get {
                return this.orderByField;
            }
            set {
                this.orderByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SearchTermGroup[] searchTermGroups {
            get {
                return this.searchTermGroupsField;
            }
            set {
                this.searchTermGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SearchTerm[] searchTerms {
            get {
                return this.searchTermsField;
            }
            set {
                this.searchTermsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] supportedKeys {
            get {
                return this.supportedKeysField;
            }
            set {
                this.supportedKeysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(DateRangeSearchTerm))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TabStatusSearchTerm))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPNOTIN))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPNEQ))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPLTE))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPLT))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPLIKE))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPIN))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPGTE))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPGT))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPEQIC))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPEQ))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(OPBTW))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class SearchTerm {
        
        private string keyField;
        
        private string operatorField;
        
        private string qualifierField;
        
        private string valueField;
        
        private string valueTypeField;
        
        private string[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string valueType {
            get {
                return this.valueTypeField;
            }
            set {
                this.valueTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TabStatusSearchTerm))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class DateRangeSearchTerm : SearchTerm {
        
        private string beginDateField;
        
        private string beginOperatorField;
        
        private string dateFieldField;
        
        private string dateFormatField;
        
        private string endDateField;
        
        private string endOperatorField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string beginDate {
            get {
                return this.beginDateField;
            }
            set {
                this.beginDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string beginOperator {
            get {
                return this.beginOperatorField;
            }
            set {
                this.beginOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string dateField {
            get {
                return this.dateFieldField;
            }
            set {
                this.dateFieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string dateFormat {
            get {
                return this.dateFormatField;
            }
            set {
                this.dateFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string endOperator {
            get {
                return this.endOperatorField;
            }
            set {
                this.endOperatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class TabStatusSearchTerm : DateRangeSearchTerm {
        
        private bool approvedField;
        
        private long[] tabIDsField;
        
        private string[] tabNamesField;
        
        /// <remarks/>
        public bool approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public long[] tabIDs {
            get {
                return this.tabIDsField;
            }
            set {
                this.tabIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] tabNames {
            get {
                return this.tabNamesField;
            }
            set {
                this.tabNamesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPNOTIN : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPNEQ : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPLTE : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPLT : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPLIKE : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPIN : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPGTE : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPGT : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPEQIC : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPEQ : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class OPBTW : SearchTerm {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class SFIDCandidateCriteria : SearchTermGroup {
        
        private string[] sFIDValueCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] SFIDValueCriteria {
            get {
                return this.sFIDValueCriteriaField;
            }
            set {
                this.sFIDValueCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class Or : SearchTermGroup {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class And : SearchTermGroup {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class MetadataEntryCriteria : SearchTermGroup {
        
        private KeyValuePair entityCriteriaField;
        
        private long entryTypeCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public KeyValuePair entityCriteria {
            get {
                return this.entityCriteriaField;
            }
            set {
                this.entityCriteriaField = value;
            }
        }
        
        /// <remarks/>
        public long entryTypeCriteria {
            get {
                return this.entryTypeCriteriaField;
            }
            set {
                this.entryTypeCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class KeyValuePair {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class MetadataEntryTypeCriteria : SearchTermGroup {
        
        private string nameCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class SFIDCriteria : SearchTermGroup {
        
        private long assetIDCriteriaField;
        
        private long projectIDCriteriaField;
        
        private string valueCriteriaField;
        
        /// <remarks/>
        public long assetIDCriteria {
            get {
                return this.assetIDCriteriaField;
            }
            set {
                this.assetIDCriteriaField = value;
            }
        }
        
        /// <remarks/>
        public long projectIDCriteria {
            get {
                return this.projectIDCriteriaField;
            }
            set {
                this.projectIDCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string valueCriteria {
            get {
                return this.valueCriteriaField;
            }
            set {
                this.valueCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class VendorCriteria : SearchTermGroup {
        
        private string nameCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class RelationshipTypeCriteria : SearchTermGroup {
        
        private string nameCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class RoleCriteria : SearchTermGroup {
        
        private string nameCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class UserCriteria : SearchTermGroup {
        
        private string deptCriteriaField;
        
        private string nameCriteriaField;
        
        private string roleCriteriaField;
        
        private string statusCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string deptCriteria {
            get {
                return this.deptCriteriaField;
            }
            set {
                this.deptCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string roleCriteria {
            get {
                return this.roleCriteriaField;
            }
            set {
                this.roleCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string statusCriteria {
            get {
                return this.statusCriteriaField;
            }
            set {
                this.statusCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class SystemSettingsCriteria : SearchTermGroup {
        
        private string nameCriteriaField;
        
        private string sectionCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sectionCriteria {
            get {
                return this.sectionCriteriaField;
            }
            set {
                this.sectionCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class AssetTypeCriteria : SearchTermGroup {
        
        private string archeTypeCriteriaField;
        
        private string nameCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string archeTypeCriteria {
            get {
                return this.archeTypeCriteriaField;
            }
            set {
                this.archeTypeCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class AcceptableValueListCriteria : SearchTermGroup {
        
        private string nameCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class DepartmentCriteria : SearchTermGroup {
        
        private string nameCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class ProjectCriteria : SearchTermGroup {
        
        private string categorizationCriteriaField;
        
        private string departmentCriteriaField;
        
        private string exactMatchCriteriaField;
        
        private string nameCriteriaField;
        
        private string statusCriteriaField;
        
        private long userCriteriaField;
        
        private long userHasCriteriaField;
        
        private long userLeadByCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string categorizationCriteria {
            get {
                return this.categorizationCriteriaField;
            }
            set {
                this.categorizationCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string departmentCriteria {
            get {
                return this.departmentCriteriaField;
            }
            set {
                this.departmentCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string exactMatchCriteria {
            get {
                return this.exactMatchCriteriaField;
            }
            set {
                this.exactMatchCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string statusCriteria {
            get {
                return this.statusCriteriaField;
            }
            set {
                this.statusCriteriaField = value;
            }
        }
        
        /// <remarks/>
        public long userCriteria {
            get {
                return this.userCriteriaField;
            }
            set {
                this.userCriteriaField = value;
            }
        }
        
        /// <remarks/>
        public long userHasCriteria {
            get {
                return this.userHasCriteriaField;
            }
            set {
                this.userHasCriteriaField = value;
            }
        }
        
        /// <remarks/>
        public long userLeadByCriteria {
            get {
                return this.userLeadByCriteriaField;
            }
            set {
                this.userLeadByCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class ContactCriteria : SearchTermGroup {
        
        private string nameCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class CategorizationTypeCriteria : SearchTermGroup {
        
        private string nameCriteriaField;
        
        private string projectAssignCriteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectAssignCriteria {
            get {
                return this.projectAssignCriteriaField;
            }
            set {
                this.projectAssignCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class AssetCriteria : SearchTermGroup {
        
        private long iDCriteriaField;
        
        private string[] sFIDCriteriaField;
        
        private string uUIDCriteriaField;
        
        private long assetTypeCriteriaField;
        
        private string browsableOnlyCriteriaField;
        
        private Categorization categorizationCriteriaField;
        
        private string descriptionCriteriaField;
        
        private string exactMatchCriteriaField;
        
        private string generalCriteriaField;
        
        private string keywordCriteriaField;
        
        private string nameCriteriaField;
        
        private string uniqueElementCriteriaField;
        
        private string versionCriteriaField;
        
        /// <remarks/>
        public long IDCriteria {
            get {
                return this.iDCriteriaField;
            }
            set {
                this.iDCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] SFIDCriteria {
            get {
                return this.sFIDCriteriaField;
            }
            set {
                this.sFIDCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string UUIDCriteria {
            get {
                return this.uUIDCriteriaField;
            }
            set {
                this.uUIDCriteriaField = value;
            }
        }
        
        /// <remarks/>
        public long assetTypeCriteria {
            get {
                return this.assetTypeCriteriaField;
            }
            set {
                this.assetTypeCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string browsableOnlyCriteria {
            get {
                return this.browsableOnlyCriteriaField;
            }
            set {
                this.browsableOnlyCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Categorization categorizationCriteria {
            get {
                return this.categorizationCriteriaField;
            }
            set {
                this.categorizationCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string descriptionCriteria {
            get {
                return this.descriptionCriteriaField;
            }
            set {
                this.descriptionCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string exactMatchCriteria {
            get {
                return this.exactMatchCriteriaField;
            }
            set {
                this.exactMatchCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string generalCriteria {
            get {
                return this.generalCriteriaField;
            }
            set {
                this.generalCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string keywordCriteria {
            get {
                return this.keywordCriteriaField;
            }
            set {
                this.keywordCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string nameCriteria {
            get {
                return this.nameCriteriaField;
            }
            set {
                this.nameCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string uniqueElementCriteria {
            get {
                return this.uniqueElementCriteriaField;
            }
            set {
                this.uniqueElementCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string versionCriteria {
            get {
                return this.versionCriteriaField;
            }
            set {
                this.versionCriteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Categorization {
        
        private long idField;
        
        private int activeStatusField;
        
        private bool deletedField;
        
        private string displayNameField;
        
        private long levelField;
        
        private string nameField;
        
        private string recursiveNameField;
        
        private Categorization superField;
        
        private long typeIDField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public long level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string recursiveName {
            get {
                return this.recursiveNameField;
            }
            set {
                this.recursiveNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Categorization super {
            get {
                return this.superField;
            }
            set {
                this.superField = value;
            }
        }
        
        /// <remarks/>
        public long typeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://query.openapi.registry.flashline.com")]
    public partial class ArtifactStoreCriteria : SearchTermGroup {
        
        private string basepathCriteriaField;
        
        private string downloadBasepathCriteriaField;
        
        private string hostCriteriaField;
        
        private string typeCriteriaField;
        
        private string versionSpecifierField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string basepathCriteria {
            get {
                return this.basepathCriteriaField;
            }
            set {
                this.basepathCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string downloadBasepathCriteria {
            get {
                return this.downloadBasepathCriteriaField;
            }
            set {
                this.downloadBasepathCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string hostCriteria {
            get {
                return this.hostCriteriaField;
            }
            set {
                this.hostCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string typeCriteria {
            get {
                return this.typeCriteriaField;
            }
            set {
                this.typeCriteriaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string versionSpecifier {
            get {
                return this.versionSpecifierField;
            }
            set {
                this.versionSpecifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public abstract partial class ISortableEntity {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class AssetMetadataTableElement {
        
        private string displayNameField;
        
        private AssetMetadataElement[] elementsField;
        
        private string xmlMappingField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AssetMetadataElement[] elements {
            get {
                return this.elementsField;
            }
            set {
                this.elementsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string xmlMapping {
            get {
                return this.xmlMappingField;
            }
            set {
                this.xmlMappingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class AssetMetadataElement {
        
        private string displayNameField;
        
        private object valueField;
        
        private string xmlMappingField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string xmlMapping {
            get {
                return this.xmlMappingField;
            }
            set {
                this.xmlMappingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public abstract partial class IHtmlSelectItem {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public abstract partial class IEntity {
        
        private long idField;
        
        private int activeStatusField;
        
        private string displayNameField;
        
        private string entityTypeField;
        
        private string keyField;
        
        private bool overWriteFlagField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string entityType {
            get {
                return this.entityTypeField;
            }
            set {
                this.entityTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public bool overWriteFlag {
            get {
                return this.overWriteFlagField;
            }
            set {
                this.overWriteFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public abstract partial class IData {
        
        private long idField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class PermissionValue {
        
        private string permissionNameField;
        
        private string permissionValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string permissionName {
            get {
                return this.permissionNameField;
            }
            set {
                this.permissionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string permissionValue {
            get {
                return this.permissionValueField;
            }
            set {
                this.permissionValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class MetadataEntryTypeSummary {
        
        private long idField;
        
        private string contentTypeField;
        
        private string escapingField;
        
        private bool indexedField;
        
        private string indexingClassArgsField;
        
        private string indexingClassnameField;
        
        private string nameField;
        
        private bool validatedField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string contentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string escaping {
            get {
                return this.escapingField;
            }
            set {
                this.escapingField = value;
            }
        }
        
        /// <remarks/>
        public bool indexed {
            get {
                return this.indexedField;
            }
            set {
                this.indexedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string indexingClassArgs {
            get {
                return this.indexingClassArgsField;
            }
            set {
                this.indexingClassArgsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string indexingClassname {
            get {
                return this.indexingClassnameField;
            }
            set {
                this.indexingClassnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool validated {
            get {
                return this.validatedField;
            }
            set {
                this.validatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MetadataEntryImpl))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class MetadataEntrySummary {
        
        private long idField;
        
        private string sFIDField;
        
        private EntityUUID[] uUIDsField;
        
        private long entityIDField;
        
        private string entityTypeDefField;
        
        private string entryTypeField;
        
        private string nameField;
        
        private string[] tagsField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string SFID {
            get {
                return this.sFIDField;
            }
            set {
                this.sFIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public EntityUUID[] UUIDs {
            get {
                return this.uUIDsField;
            }
            set {
                this.uUIDsField = value;
            }
        }
        
        /// <remarks/>
        public long entityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string entityTypeDef {
            get {
                return this.entityTypeDefField;
            }
            set {
                this.entityTypeDefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string entryType {
            get {
                return this.entryTypeField;
            }
            set {
                this.entryTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class EntityUUID {
        
        private string uUIDField;
        
        private long entityIDField;
        
        private long entityTypeIDField;
        
        private string idSpaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string UUID {
            get {
                return this.uUIDField;
            }
            set {
                this.uUIDField = value;
            }
        }
        
        /// <remarks/>
        public long entityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
            }
        }
        
        /// <remarks/>
        public long entityTypeID {
            get {
                return this.entityTypeIDField;
            }
            set {
                this.entityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string idSpace {
            get {
                return this.idSpaceField;
            }
            set {
                this.idSpaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class MetadataEntryImpl : MetadataEntrySummary {
        
        private long entityTypeIDField;
        
        private string namespaceField;
        
        private int sizeField;
        
        /// <remarks/>
        public long entityTypeID {
            get {
                return this.entityTypeIDField;
            }
            set {
                this.entityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        public int size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ReuseDTO {
        
        private int assetPortfolioInvestmentCountField;
        
        private long assetPortfolioInvestmentValueField;
        
        private int assetPortfolioValueCountField;
        
        private long assetPortfolioValueValueField;
        
        private int assetsInProgressCountField;
        
        private int assetsRegisteredCountField;
        
        private int projectsParticipatingCountField;
        
        /// <remarks/>
        public int assetPortfolioInvestmentCount {
            get {
                return this.assetPortfolioInvestmentCountField;
            }
            set {
                this.assetPortfolioInvestmentCountField = value;
            }
        }
        
        /// <remarks/>
        public long assetPortfolioInvestmentValue {
            get {
                return this.assetPortfolioInvestmentValueField;
            }
            set {
                this.assetPortfolioInvestmentValueField = value;
            }
        }
        
        /// <remarks/>
        public int assetPortfolioValueCount {
            get {
                return this.assetPortfolioValueCountField;
            }
            set {
                this.assetPortfolioValueCountField = value;
            }
        }
        
        /// <remarks/>
        public long assetPortfolioValueValue {
            get {
                return this.assetPortfolioValueValueField;
            }
            set {
                this.assetPortfolioValueValueField = value;
            }
        }
        
        /// <remarks/>
        public int assetsInProgressCount {
            get {
                return this.assetsInProgressCountField;
            }
            set {
                this.assetsInProgressCountField = value;
            }
        }
        
        /// <remarks/>
        public int assetsRegisteredCount {
            get {
                return this.assetsRegisteredCountField;
            }
            set {
                this.assetsRegisteredCountField = value;
            }
        }
        
        /// <remarks/>
        public int projectsParticipatingCount {
            get {
                return this.projectsParticipatingCountField;
            }
            set {
                this.projectsParticipatingCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class SFIDCandidate {
        
        private long idField;
        
        private string sFIDField;
        
        private string sFIDAlgorithmField;
        
        private int activeStatusField;
        
        private SFIDAttribute[] attributesField;
        
        private string displayNameField;
        
        private string entityTypeField;
        
        private string filepathField;
        
        private string generatedByField;
        
        private long generatedByIDField;
        
        private System.Nullable<System.DateTime> generatedDateField;
        
        private string hostIPField;
        
        private string hostnameField;
        
        private string keyField;
        
        private long numSeenField;
        
        private bool overWriteFlagField;
        
        private string sourceField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string SFID {
            get {
                return this.sFIDField;
            }
            set {
                this.sFIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string SFIDAlgorithm {
            get {
                return this.sFIDAlgorithmField;
            }
            set {
                this.sFIDAlgorithmField = value;
            }
        }
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SFIDAttribute[] attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string entityType {
            get {
                return this.entityTypeField;
            }
            set {
                this.entityTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string generatedBy {
            get {
                return this.generatedByField;
            }
            set {
                this.generatedByField = value;
            }
        }
        
        /// <remarks/>
        public long generatedByID {
            get {
                return this.generatedByIDField;
            }
            set {
                this.generatedByIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> generatedDate {
            get {
                return this.generatedDateField;
            }
            set {
                this.generatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string hostIP {
            get {
                return this.hostIPField;
            }
            set {
                this.hostIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string hostname {
            get {
                return this.hostnameField;
            }
            set {
                this.hostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public long numSeen {
            get {
                return this.numSeenField;
            }
            set {
                this.numSeenField = value;
            }
        }
        
        /// <remarks/>
        public bool overWriteFlag {
            get {
                return this.overWriteFlagField;
            }
            set {
                this.overWriteFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class SFIDAttribute {
        
        private long idField;
        
        private long candidateIDField;
        
        private string nameField;
        
        private string valueField;
        
        private string[] valuesField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public long candidateID {
            get {
                return this.candidateIDField;
            }
            set {
                this.candidateIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Vendor {
        
        private long idField;
        
        private string displayNameField;
        
        private string nameField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Question {
        
        private int activeStatusField;
        
        private string bodyField;
        
        private ChoiceList choiceListField;
        
        private long idField;
        
        private string labelField;
        
        private int sortOrderField;
        
        private long surveyIDField;
        
        private long typeIDField;
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ChoiceList choiceList {
            get {
                return this.choiceListField;
            }
            set {
                this.choiceListField = value;
            }
        }
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public int sortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        public long surveyID {
            get {
                return this.surveyIDField;
            }
            set {
                this.surveyIDField = value;
            }
        }
        
        /// <remarks/>
        public long typeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ChoiceList {
        
        private long idField;
        
        private int activeStatusField;
        
        private Choice[] choicesField;
        
        private string descriptionField;
        
        private bool emptyField;
        
        private string nameField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Choice[] choices {
            get {
                return this.choicesField;
            }
            set {
                this.choicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool empty {
            get {
                return this.emptyField;
            }
            set {
                this.emptyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Choice {
        
        private int activeStatusField;
        
        private long idField;
        
        private int sortOrderField;
        
        private string valueField;
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int sortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class SettingValue {
        
        private bool booleanValueField;
        
        private SettingsDescriptor descriptorField;
        
        private double doubleValueField;
        
        private bool falseField;
        
        private float floatValueField;
        
        private int intValueField;
        
        private System.Nullable<System.DateTime> loadTimeField;
        
        private long longValueField;
        
        private SettingsSection sectionField;
        
        private bool trueField;
        
        private string valueField;
        
        /// <remarks/>
        public bool booleanValue {
            get {
                return this.booleanValueField;
            }
            set {
                this.booleanValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SettingsDescriptor descriptor {
            get {
                return this.descriptorField;
            }
            set {
                this.descriptorField = value;
            }
        }
        
        /// <remarks/>
        public double doubleValue {
            get {
                return this.doubleValueField;
            }
            set {
                this.doubleValueField = value;
            }
        }
        
        /// <remarks/>
        public bool @false {
            get {
                return this.falseField;
            }
            set {
                this.falseField = value;
            }
        }
        
        /// <remarks/>
        public float floatValue {
            get {
                return this.floatValueField;
            }
            set {
                this.floatValueField = value;
            }
        }
        
        /// <remarks/>
        public int intValue {
            get {
                return this.intValueField;
            }
            set {
                this.intValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> loadTime {
            get {
                return this.loadTimeField;
            }
            set {
                this.loadTimeField = value;
            }
        }
        
        /// <remarks/>
        public long longValue {
            get {
                return this.longValueField;
            }
            set {
                this.longValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SettingsSection section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public bool @true {
            get {
                return this.trueField;
            }
            set {
                this.trueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class SettingsDescriptor {
        
        private string defaultField;
        
        private string descriptionField;
        
        private string displayNameField;
        
        private string featureField;
        
        private string nameField;
        
        private string suggestedValueField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string @default {
            get {
                return this.defaultField;
            }
            set {
                this.defaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string feature {
            get {
                return this.featureField;
            }
            set {
                this.featureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string suggestedValue {
            get {
                return this.suggestedValueField;
            }
            set {
                this.suggestedValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class SettingsSection {
        
        private long idField;
        
        private string displayNameField;
        
        private string nameField;
        
        private string propertyFileField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string propertyFile {
            get {
                return this.propertyFileField;
            }
            set {
                this.propertyFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class AssetType {
        
        private long idField;
        
        private bool uDDISupportField;
        
        private EntityUUID[] uUIDsField;
        
        private int activeStatusField;
        
        private long[] archeTypeIDsField;
        
        private string displayNameField;
        
        private string editorXMLField;
        
        private string iconField;
        
        private string nameField;
        
        private string schemaField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        private string viewerXMLField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool UDDISupport {
            get {
                return this.uDDISupportField;
            }
            set {
                this.uDDISupportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public EntityUUID[] UUIDs {
            get {
                return this.uUIDsField;
            }
            set {
                this.uUIDsField = value;
            }
        }
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public long[] archeTypeIDs {
            get {
                return this.archeTypeIDsField;
            }
            set {
                this.archeTypeIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string editorXML {
            get {
                return this.editorXMLField;
            }
            set {
                this.editorXMLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string schema {
            get {
                return this.schemaField;
            }
            set {
                this.schemaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string viewerXML {
            get {
                return this.viewerXMLField;
            }
            set {
                this.viewerXMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class AcceptableValueList {
        
        private long idField;
        
        private AcceptableValue[] acceptableValuesField;
        
        private string displayNameField;
        
        private string nameField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AcceptableValue[] acceptableValues {
            get {
                return this.acceptableValuesField;
            }
            set {
                this.acceptableValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class AcceptableValue {
        
        private long idField;
        
        private string displayNameField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        private string valueField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class mapItem {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class Map {
        
        private mapItem[] itemField;
        
        /// <remarks/>
        public mapItem[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Results {
        
        private KeyValuePair[] errorsField;
        
        private Map errorsAsMapField;
        
        private string headerField;
        
        private bool successField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public KeyValuePair[] errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Map errorsAsMap {
            get {
                return this.errorsAsMapField;
            }
            set {
                this.errorsAsMapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
        
        /// <remarks/>
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class RelatedEntity {
        
        private long idField;
        
        private System.Nullable<System.DateTime> entityDateField;
        
        private long entityIDField;
        
        private long entityUserIDField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> entityDate {
            get {
                return this.entityDateField;
            }
            set {
                this.entityDateField = value;
            }
        }
        
        /// <remarks/>
        public long entityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
            }
        }
        
        /// <remarks/>
        public long entityUserID {
            get {
                return this.entityUserIDField;
            }
            set {
                this.entityUserIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ProjectUserType {
        
        private string userTypeLeaderField;
        
        private string userTypeMemberField;
        
        private string[] userTypesField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string userTypeLeader {
            get {
                return this.userTypeLeaderField;
            }
            set {
                this.userTypeLeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string userTypeMember {
            get {
                return this.userTypeMemberField;
            }
            set {
                this.userTypeMemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] userTypes {
            get {
                return this.userTypesField;
            }
            set {
                this.userTypesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ProjectSummary {
        
        private long idField;
        
        private bool closedField;
        
        private long departmentIDField;
        
        private string descriptionField;
        
        private string nameField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public long departmentID {
            get {
                return this.departmentIDField;
            }
            set {
                this.departmentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ExtractionReassignmentDecision))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ExtractionDeploymentDecision))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://decision.openapi.registry.flashline.com")]
    public partial class Decision {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://decision.openapi.registry.flashline.com")]
    public partial class ExtractionReassignmentDecision : Decision {
        
        private long extractionIDField;
        
        private long projectIDField;
        
        private string reassignTypeField;
        
        private long reassignUserIDField;
        
        private long userIDField;
        
        /// <remarks/>
        public long extractionID {
            get {
                return this.extractionIDField;
            }
            set {
                this.extractionIDField = value;
            }
        }
        
        /// <remarks/>
        public long projectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string reassignType {
            get {
                return this.reassignTypeField;
            }
            set {
                this.reassignTypeField = value;
            }
        }
        
        /// <remarks/>
        public long reassignUserID {
            get {
                return this.reassignUserIDField;
            }
            set {
                this.reassignUserIDField = value;
            }
        }
        
        /// <remarks/>
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://decision.openapi.registry.flashline.com")]
    public partial class ExtractionDeploymentDecision : Decision {
        
        private long extractionIDField;
        
        private string statusField;
        
        /// <remarks/>
        public long extractionID {
            get {
                return this.extractionIDField;
            }
            set {
                this.extractionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ProjectEntities {
        
        private long idField;
        
        private string[] addedChildIDsField;
        
        private string[] addedComplianceTemplateIDsField;
        
        private string[] addedLeaderIDsField;
        
        private string[] addedMemberIDsField;
        
        private string[] addedParentIDsField;
        
        private string[] assetIDsField;
        
        private string[] childIDsField;
        
        private ExtractionDeploymentDecision[] deploymentIDsField;
        
        private string[] leaderIDsField;
        
        private string[] memberIDsField;
        
        private string[] parentIDsField;
        
        private ExtractionReassignmentDecision[] reassignIDsField;
        
        private string[] rejectedIDsField;
        
        private string[] removedAssetIDsField;
        
        private string[] removedChildIDsField;
        
        private string[] removedComplianceTemplateIDsField;
        
        private string[] removedLeaderIDsField;
        
        private string[] removedMemberIDsField;
        
        private string[] removedParentIDsField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] addedChildIDs {
            get {
                return this.addedChildIDsField;
            }
            set {
                this.addedChildIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] addedComplianceTemplateIDs {
            get {
                return this.addedComplianceTemplateIDsField;
            }
            set {
                this.addedComplianceTemplateIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] addedLeaderIDs {
            get {
                return this.addedLeaderIDsField;
            }
            set {
                this.addedLeaderIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] addedMemberIDs {
            get {
                return this.addedMemberIDsField;
            }
            set {
                this.addedMemberIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] addedParentIDs {
            get {
                return this.addedParentIDsField;
            }
            set {
                this.addedParentIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] assetIDs {
            get {
                return this.assetIDsField;
            }
            set {
                this.assetIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] childIDs {
            get {
                return this.childIDsField;
            }
            set {
                this.childIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ExtractionDeploymentDecision[] deploymentIDs {
            get {
                return this.deploymentIDsField;
            }
            set {
                this.deploymentIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] leaderIDs {
            get {
                return this.leaderIDsField;
            }
            set {
                this.leaderIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] memberIDs {
            get {
                return this.memberIDsField;
            }
            set {
                this.memberIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] parentIDs {
            get {
                return this.parentIDsField;
            }
            set {
                this.parentIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ExtractionReassignmentDecision[] reassignIDs {
            get {
                return this.reassignIDsField;
            }
            set {
                this.reassignIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] rejectedIDs {
            get {
                return this.rejectedIDsField;
            }
            set {
                this.rejectedIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] removedAssetIDs {
            get {
                return this.removedAssetIDsField;
            }
            set {
                this.removedAssetIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] removedChildIDs {
            get {
                return this.removedChildIDsField;
            }
            set {
                this.removedChildIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] removedComplianceTemplateIDs {
            get {
                return this.removedComplianceTemplateIDsField;
            }
            set {
                this.removedComplianceTemplateIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] removedLeaderIDs {
            get {
                return this.removedLeaderIDsField;
            }
            set {
                this.removedLeaderIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] removedMemberIDs {
            get {
                return this.removedMemberIDsField;
            }
            set {
                this.removedMemberIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] removedParentIDs {
            get {
                return this.removedParentIDsField;
            }
            set {
                this.removedParentIDsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class AssetUsageType {
        
        private long idField;
        
        private string displayNameField;
        
        private string nameField;
        
        private long surveyChoiceIDField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public long surveyChoiceID {
            get {
                return this.surveyChoiceIDField;
            }
            set {
                this.surveyChoiceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ProjectAssetValueSummary {
        
        private long assetIDField;
        
        private long projectIDField;
        
        private ProjectAssetValueSummaryItem[] summaryItemsField;
        
        private long totalQuantityField;
        
        private float totalValueField;
        
        /// <remarks/>
        public long assetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public long projectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ProjectAssetValueSummaryItem[] summaryItems {
            get {
                return this.summaryItemsField;
            }
            set {
                this.summaryItemsField = value;
            }
        }
        
        /// <remarks/>
        public long totalQuantity {
            get {
                return this.totalQuantityField;
            }
            set {
                this.totalQuantityField = value;
            }
        }
        
        /// <remarks/>
        public float totalValue {
            get {
                return this.totalValueField;
            }
            set {
                this.totalValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ProjectAssetValueSummaryItem {
        
        private long assetIDField;
        
        private long assetUsageTypeIDField;
        
        private string itemNameField;
        
        private int itemQuantityField;
        
        private float itemValueField;
        
        private long projectIDField;
        
        /// <remarks/>
        public long assetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        public long assetUsageTypeID {
            get {
                return this.assetUsageTypeIDField;
            }
            set {
                this.assetUsageTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string itemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public int itemQuantity {
            get {
                return this.itemQuantityField;
            }
            set {
                this.itemQuantityField = value;
            }
        }
        
        /// <remarks/>
        public float itemValue {
            get {
                return this.itemValueField;
            }
            set {
                this.itemValueField = value;
            }
        }
        
        /// <remarks/>
        public long projectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ProjectAssetValue {
        
        private long assetIDField;
        
        private string assetUsageField;
        
        private float assetValueField;
        
        private string assetValueSourceField;
        
        private string consumerFoundValueField;
        
        private string consumerUsageField;
        
        private float consumerValueField;
        
        private bool consumerValueSelectedField;
        
        private System.Nullable<System.DateTime> extractionDateField;
        
        private string extractionStatusField;
        
        private float predictedValueField;
        
        private bool predictedValueSelectedField;
        
        private long projectIDField;
        
        private string projectLeadUsageField;
        
        private float projectLeadValueField;
        
        private bool projectLeadValueSelectedField;
        
        private long userIDField;
        
        private RegistryUser userInfoField;
        
        /// <remarks/>
        public long assetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string assetUsage {
            get {
                return this.assetUsageField;
            }
            set {
                this.assetUsageField = value;
            }
        }
        
        /// <remarks/>
        public float assetValue {
            get {
                return this.assetValueField;
            }
            set {
                this.assetValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string assetValueSource {
            get {
                return this.assetValueSourceField;
            }
            set {
                this.assetValueSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string consumerFoundValue {
            get {
                return this.consumerFoundValueField;
            }
            set {
                this.consumerFoundValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string consumerUsage {
            get {
                return this.consumerUsageField;
            }
            set {
                this.consumerUsageField = value;
            }
        }
        
        /// <remarks/>
        public float consumerValue {
            get {
                return this.consumerValueField;
            }
            set {
                this.consumerValueField = value;
            }
        }
        
        /// <remarks/>
        public bool consumerValueSelected {
            get {
                return this.consumerValueSelectedField;
            }
            set {
                this.consumerValueSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> extractionDate {
            get {
                return this.extractionDateField;
            }
            set {
                this.extractionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string extractionStatus {
            get {
                return this.extractionStatusField;
            }
            set {
                this.extractionStatusField = value;
            }
        }
        
        /// <remarks/>
        public float predictedValue {
            get {
                return this.predictedValueField;
            }
            set {
                this.predictedValueField = value;
            }
        }
        
        /// <remarks/>
        public bool predictedValueSelected {
            get {
                return this.predictedValueSelectedField;
            }
            set {
                this.predictedValueSelectedField = value;
            }
        }
        
        /// <remarks/>
        public long projectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectLeadUsage {
            get {
                return this.projectLeadUsageField;
            }
            set {
                this.projectLeadUsageField = value;
            }
        }
        
        /// <remarks/>
        public float projectLeadValue {
            get {
                return this.projectLeadValueField;
            }
            set {
                this.projectLeadValueField = value;
            }
        }
        
        /// <remarks/>
        public bool projectLeadValueSelected {
            get {
                return this.projectLeadValueSelectedField;
            }
            set {
                this.projectLeadValueSelectedField = value;
            }
        }
        
        /// <remarks/>
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RegistryUser userInfo {
            get {
                return this.userInfoField;
            }
            set {
                this.userInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class RegistryUser {
        
        private long idField;
        
        private int activeStatusField;
        
        private Department[] departmentsField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private bool mustChangePasswordField;
        
        private string passwordField;
        
        private bool passwordNeverExpiresField;
        
        private string phoneNumberField;
        
        private Role[] roleTypesField;
        
        private string userNameField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Department[] departments {
            get {
                return this.departmentsField;
            }
            set {
                this.departmentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public bool mustChangePassword {
            get {
                return this.mustChangePasswordField;
            }
            set {
                this.mustChangePasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public bool passwordNeverExpires {
            get {
                return this.passwordNeverExpiresField;
            }
            set {
                this.passwordNeverExpiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Role[] roleTypes {
            get {
                return this.roleTypesField;
            }
            set {
                this.roleTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Department {
        
        private long idField;
        
        private string descriptionField;
        
        private string displayNameField;
        
        private string nameField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Role {
        
        private bool defaultForNewUserField;
        
        private string descriptionField;
        
        private string nameField;
        
        private string originalFQNameField;
        
        private int statusField;
        
        /// <remarks/>
        public bool defaultForNewUser {
            get {
                return this.defaultForNewUserField;
            }
            set {
                this.defaultForNewUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string originalFQName {
            get {
                return this.originalFQNameField;
            }
            set {
                this.originalFQNameField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class IExtraction {
        
        private string acceptedField;
        
        private string inProcessField;
        
        private string rejectedField;
        
        private string[] statesField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string accepted {
            get {
                return this.acceptedField;
            }
            set {
                this.acceptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string inProcess {
            get {
                return this.inProcessField;
            }
            set {
                this.inProcessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string rejected {
            get {
                return this.rejectedField;
            }
            set {
                this.rejectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] states {
            get {
                return this.statesField;
            }
            set {
                this.statesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class SurveyTaken {
        
        private Answer[] answersField;
        
        private long idField;
        
        private System.Nullable<System.DateTime> takenTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Answer[] answers {
            get {
                return this.answersField;
            }
            set {
                this.answersField = value;
            }
        }
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> takenTime {
            get {
                return this.takenTimeField;
            }
            set {
                this.takenTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Answer {
        
        private long choiceIdField;
        
        private long idField;
        
        private string overrideValueField;
        
        private long questionIdField;
        
        private string valueField;
        
        /// <remarks/>
        public long choiceId {
            get {
                return this.choiceIdField;
            }
            set {
                this.choiceIdField = value;
            }
        }
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string overrideValue {
            get {
                return this.overrideValueField;
            }
            set {
                this.overrideValueField = value;
            }
        }
        
        /// <remarks/>
        public long questionId {
            get {
                return this.questionIdField;
            }
            set {
                this.questionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ExtractionDownload {
        
        private long assetIDField;
        
        private string assetNameField;
        
        private bool markedForExtractionField;
        
        /// <remarks/>
        public long assetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string assetName {
            get {
                return this.assetNameField;
            }
            set {
                this.assetNameField = value;
            }
        }
        
        /// <remarks/>
        public bool markedForExtraction {
            get {
                return this.markedForExtractionField;
            }
            set {
                this.markedForExtractionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Project {
        
        private long idField;
        
        private bool addByDefaultField;
        
        private ProjectAsset[] assetsField;
        
        private CategorizationType[] categorizationTypesField;
        
        private Categorization[] categorizationsField;
        
        private bool closedField;
        
        private bool closedStorageField;
        
        private long departmentIDField;
        
        private string departmentNameField;
        
        private string descriptionField;
        
        private string displayNameField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private long estimatedHoursField;
        
        private string iconField;
        
        private string nameField;
        
        private string realIconField;
        
        private bool settleHiddenAssetsField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private string statusStringField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool addByDefault {
            get {
                return this.addByDefaultField;
            }
            set {
                this.addByDefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ProjectAsset[] assets {
            get {
                return this.assetsField;
            }
            set {
                this.assetsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public CategorizationType[] categorizationTypes {
            get {
                return this.categorizationTypesField;
            }
            set {
                this.categorizationTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Categorization[] categorizations {
            get {
                return this.categorizationsField;
            }
            set {
                this.categorizationsField = value;
            }
        }
        
        /// <remarks/>
        public bool closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public bool closedStorage {
            get {
                return this.closedStorageField;
            }
            set {
                this.closedStorageField = value;
            }
        }
        
        /// <remarks/>
        public long departmentID {
            get {
                return this.departmentIDField;
            }
            set {
                this.departmentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string departmentName {
            get {
                return this.departmentNameField;
            }
            set {
                this.departmentNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public long estimatedHours {
            get {
                return this.estimatedHoursField;
            }
            set {
                this.estimatedHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string realIcon {
            get {
                return this.realIconField;
            }
            set {
                this.realIconField = value;
            }
        }
        
        /// <remarks/>
        public bool settleHiddenAssets {
            get {
                return this.settleHiddenAssetsField;
            }
            set {
                this.settleHiddenAssetsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string statusString {
            get {
                return this.statusStringField;
            }
            set {
                this.statusStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ProjectAsset : Asset {
        
        private int extractionCountField;
        
        private Extraction[] extractionsField;
        
        private string statusField;
        
        /// <remarks/>
        public int extractionCount {
            get {
                return this.extractionCountField;
            }
            set {
                this.extractionCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Extraction[] extractions {
            get {
                return this.extractionsField;
            }
            set {
                this.extractionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Extraction {
        
        private long idField;
        
        private System.Nullable<System.DateTime> acceptedDateField;
        
        private long assetIDField;
        
        private string assetNameField;
        
        private string assetVersionField;
        
        private string certifiedSourceField;
        
        private string commentsField;
        
        private System.Nullable<System.DateTime> deploymentDateField;
        
        private string displayNameField;
        
        private System.Nullable<System.DateTime> extractionDateField;
        
        private ExtractionLogEvent[] extractionLogEventsField;
        
        private string iconField;
        
        private string[] permittedUserIDsField;
        
        private long projectIDField;
        
        private string projectNameField;
        
        private System.Nullable<System.DateTime> rejectionDateField;
        
        private long rejectionReasonField;
        
        private string statusField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        private long userIDField;
        
        private string userNameField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> acceptedDate {
            get {
                return this.acceptedDateField;
            }
            set {
                this.acceptedDateField = value;
            }
        }
        
        /// <remarks/>
        public long assetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string assetName {
            get {
                return this.assetNameField;
            }
            set {
                this.assetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string assetVersion {
            get {
                return this.assetVersionField;
            }
            set {
                this.assetVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string certifiedSource {
            get {
                return this.certifiedSourceField;
            }
            set {
                this.certifiedSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> deploymentDate {
            get {
                return this.deploymentDateField;
            }
            set {
                this.deploymentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> extractionDate {
            get {
                return this.extractionDateField;
            }
            set {
                this.extractionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ExtractionLogEvent[] extractionLogEvents {
            get {
                return this.extractionLogEventsField;
            }
            set {
                this.extractionLogEventsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] permittedUserIDs {
            get {
                return this.permittedUserIDsField;
            }
            set {
                this.permittedUserIDsField = value;
            }
        }
        
        /// <remarks/>
        public long projectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> rejectionDate {
            get {
                return this.rejectionDateField;
            }
            set {
                this.rejectionDateField = value;
            }
        }
        
        /// <remarks/>
        public long rejectionReason {
            get {
                return this.rejectionReasonField;
            }
            set {
                this.rejectionReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
        
        /// <remarks/>
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ExtractionLogEvent {
        
        private long idField;
        
        private string eventField;
        
        private System.Nullable<System.DateTime> eventDateField;
        
        private long extractionIDField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string @event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> eventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public long extractionID {
            get {
                return this.extractionIDField;
            }
            set {
                this.extractionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProjectAsset))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Asset {
        
        private long idField;
        
        private SFIDInfo[] sFIDInfosField;
        
        private string uUIDField;
        
        private string acceptedByEmailField;
        
        private long acceptedByIDField;
        
        private string acceptedByNameField;
        
        private System.Nullable<System.DateTime> acceptedDateField;
        
        private int activeStatusField;
        
        private string activeStatusBaseNameField;
        
        private long[] appliedComplianceTemplateProjectsIDsField;
        
        private SFIDInfo artifactSFIDField;
        
        private bool assignedField;
        
        private System.Nullable<System.DateTime> assignedDateField;
        
        private long assignedToIDField;
        
        private AssignedUser[] assignedUsersField;
        
        private CategorizationType[] categorizationTypesField;
        
        private Categorization[] categorizationsField;
        
        private Contact[] contactsField;
        
        private string createdByEmailField;
        
        private long createdByIDField;
        
        private string createdByNameField;
        
        private System.Nullable<System.DateTime> createdDateField;
        
        private string[] customAccessSettingsField;
        
        private string customDataField;
        
        private bool deletedField;
        
        private string descriptionField;
        
        private string displayNameField;
        
        private bool extractableField;
        
        private FileInfo[] filesField;
        
        private bool fullAssetField;
        
        private bool inactiveField;
        
        private string[] keywordsField;
        
        private System.Nullable<System.DateTime> loadedDateField;
        
        private string longNameField;
        
        private string nameField;
        
        private string notificationEmailField;
        
        private bool notifyUpdatedRelationshipsField;
        
        private PolicyAssertionResult[] policyAssertionResultsField;
        
        private PolicyAssertion[] policyAssertionsField;
        
        private long[] producingProjectsIDsField;
        
        private bool quickSubmitField;
        
        private string registeredByEmailField;
        
        private long registeredByIDField;
        
        private string registeredByNameField;
        
        private System.Nullable<System.DateTime> registeredDateField;
        
        private int registrationStatusField;
        
        private string registrationStatusBaseNameField;
        
        private bool registrationStatusRegisteredField;
        
        private bool registrationStatusRejectedField;
        
        private bool registrationStatusSubmittedPendingReviewField;
        
        private bool registrationStatusSubmittedUnderReviewField;
        
        private bool registrationStatusUnsubmittedField;
        
        private RelationshipType[] relationshipTypesField;
        
        private bool retiredField;
        
        private SubmissionFileInfo[] submissionFilesField;
        
        private string submittedByEmailField;
        
        private long submittedByIDField;
        
        private string submittedByNameField;
        
        private System.Nullable<System.DateTime> submittedDateField;
        
        private RegistryUser[] subscribersField;
        
        private long typeIDField;
        
        private string typeIconField;
        
        private string typeNameField;
        
        private UniqueElement uniqueElementField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        private long vendorIDField;
        
        private string vendorNameField;
        
        private string versionField;
        
        private bool visibleField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SFIDInfo[] SFIDInfos {
            get {
                return this.sFIDInfosField;
            }
            set {
                this.sFIDInfosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string UUID {
            get {
                return this.uUIDField;
            }
            set {
                this.uUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string acceptedByEmail {
            get {
                return this.acceptedByEmailField;
            }
            set {
                this.acceptedByEmailField = value;
            }
        }
        
        /// <remarks/>
        public long acceptedByID {
            get {
                return this.acceptedByIDField;
            }
            set {
                this.acceptedByIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string acceptedByName {
            get {
                return this.acceptedByNameField;
            }
            set {
                this.acceptedByNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> acceptedDate {
            get {
                return this.acceptedDateField;
            }
            set {
                this.acceptedDateField = value;
            }
        }
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string activeStatusBaseName {
            get {
                return this.activeStatusBaseNameField;
            }
            set {
                this.activeStatusBaseNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public long[] appliedComplianceTemplateProjectsIDs {
            get {
                return this.appliedComplianceTemplateProjectsIDsField;
            }
            set {
                this.appliedComplianceTemplateProjectsIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SFIDInfo artifactSFID {
            get {
                return this.artifactSFIDField;
            }
            set {
                this.artifactSFIDField = value;
            }
        }
        
        /// <remarks/>
        public bool assigned {
            get {
                return this.assignedField;
            }
            set {
                this.assignedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> assignedDate {
            get {
                return this.assignedDateField;
            }
            set {
                this.assignedDateField = value;
            }
        }
        
        /// <remarks/>
        public long assignedToID {
            get {
                return this.assignedToIDField;
            }
            set {
                this.assignedToIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AssignedUser[] assignedUsers {
            get {
                return this.assignedUsersField;
            }
            set {
                this.assignedUsersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public CategorizationType[] categorizationTypes {
            get {
                return this.categorizationTypesField;
            }
            set {
                this.categorizationTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Categorization[] categorizations {
            get {
                return this.categorizationsField;
            }
            set {
                this.categorizationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Contact[] contacts {
            get {
                return this.contactsField;
            }
            set {
                this.contactsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string createdByEmail {
            get {
                return this.createdByEmailField;
            }
            set {
                this.createdByEmailField = value;
            }
        }
        
        /// <remarks/>
        public long createdByID {
            get {
                return this.createdByIDField;
            }
            set {
                this.createdByIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string createdByName {
            get {
                return this.createdByNameField;
            }
            set {
                this.createdByNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] customAccessSettings {
            get {
                return this.customAccessSettingsField;
            }
            set {
                this.customAccessSettingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public bool extractable {
            get {
                return this.extractableField;
            }
            set {
                this.extractableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public FileInfo[] files {
            get {
                return this.filesField;
            }
            set {
                this.filesField = value;
            }
        }
        
        /// <remarks/>
        public bool fullAsset {
            get {
                return this.fullAssetField;
            }
            set {
                this.fullAssetField = value;
            }
        }
        
        /// <remarks/>
        public bool inactive {
            get {
                return this.inactiveField;
            }
            set {
                this.inactiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> loadedDate {
            get {
                return this.loadedDateField;
            }
            set {
                this.loadedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string longName {
            get {
                return this.longNameField;
            }
            set {
                this.longNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string notificationEmail {
            get {
                return this.notificationEmailField;
            }
            set {
                this.notificationEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool notifyUpdatedRelationships {
            get {
                return this.notifyUpdatedRelationshipsField;
            }
            set {
                this.notifyUpdatedRelationshipsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public PolicyAssertionResult[] policyAssertionResults {
            get {
                return this.policyAssertionResultsField;
            }
            set {
                this.policyAssertionResultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public PolicyAssertion[] policyAssertions {
            get {
                return this.policyAssertionsField;
            }
            set {
                this.policyAssertionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public long[] producingProjectsIDs {
            get {
                return this.producingProjectsIDsField;
            }
            set {
                this.producingProjectsIDsField = value;
            }
        }
        
        /// <remarks/>
        public bool quickSubmit {
            get {
                return this.quickSubmitField;
            }
            set {
                this.quickSubmitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string registeredByEmail {
            get {
                return this.registeredByEmailField;
            }
            set {
                this.registeredByEmailField = value;
            }
        }
        
        /// <remarks/>
        public long registeredByID {
            get {
                return this.registeredByIDField;
            }
            set {
                this.registeredByIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string registeredByName {
            get {
                return this.registeredByNameField;
            }
            set {
                this.registeredByNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> registeredDate {
            get {
                return this.registeredDateField;
            }
            set {
                this.registeredDateField = value;
            }
        }
        
        /// <remarks/>
        public int registrationStatus {
            get {
                return this.registrationStatusField;
            }
            set {
                this.registrationStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string registrationStatusBaseName {
            get {
                return this.registrationStatusBaseNameField;
            }
            set {
                this.registrationStatusBaseNameField = value;
            }
        }
        
        /// <remarks/>
        public bool registrationStatusRegistered {
            get {
                return this.registrationStatusRegisteredField;
            }
            set {
                this.registrationStatusRegisteredField = value;
            }
        }
        
        /// <remarks/>
        public bool registrationStatusRejected {
            get {
                return this.registrationStatusRejectedField;
            }
            set {
                this.registrationStatusRejectedField = value;
            }
        }
        
        /// <remarks/>
        public bool registrationStatusSubmittedPendingReview {
            get {
                return this.registrationStatusSubmittedPendingReviewField;
            }
            set {
                this.registrationStatusSubmittedPendingReviewField = value;
            }
        }
        
        /// <remarks/>
        public bool registrationStatusSubmittedUnderReview {
            get {
                return this.registrationStatusSubmittedUnderReviewField;
            }
            set {
                this.registrationStatusSubmittedUnderReviewField = value;
            }
        }
        
        /// <remarks/>
        public bool registrationStatusUnsubmitted {
            get {
                return this.registrationStatusUnsubmittedField;
            }
            set {
                this.registrationStatusUnsubmittedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RelationshipType[] relationshipTypes {
            get {
                return this.relationshipTypesField;
            }
            set {
                this.relationshipTypesField = value;
            }
        }
        
        /// <remarks/>
        public bool retired {
            get {
                return this.retiredField;
            }
            set {
                this.retiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SubmissionFileInfo[] submissionFiles {
            get {
                return this.submissionFilesField;
            }
            set {
                this.submissionFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string submittedByEmail {
            get {
                return this.submittedByEmailField;
            }
            set {
                this.submittedByEmailField = value;
            }
        }
        
        /// <remarks/>
        public long submittedByID {
            get {
                return this.submittedByIDField;
            }
            set {
                this.submittedByIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string submittedByName {
            get {
                return this.submittedByNameField;
            }
            set {
                this.submittedByNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> submittedDate {
            get {
                return this.submittedDateField;
            }
            set {
                this.submittedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RegistryUser[] subscribers {
            get {
                return this.subscribersField;
            }
            set {
                this.subscribersField = value;
            }
        }
        
        /// <remarks/>
        public long typeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string typeIcon {
            get {
                return this.typeIconField;
            }
            set {
                this.typeIconField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string typeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public UniqueElement uniqueElement {
            get {
                return this.uniqueElementField;
            }
            set {
                this.uniqueElementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
        
        /// <remarks/>
        public long vendorID {
            get {
                return this.vendorIDField;
            }
            set {
                this.vendorIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string vendorName {
            get {
                return this.vendorNameField;
            }
            set {
                this.vendorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public bool visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class SFIDInfo {
        
        private long idField;
        
        private string sFIDValueField;
        
        private int activeStatusField;
        
        private string activeStatusBaseNameField;
        
        private string commentField;
        
        private System.Nullable<System.DateTime> createdDateField;
        
        private long fileInfoIDField;
        
        private System.Nullable<System.DateTime> generatedDateField;
        
        private string sourceField;
        
        private string typeField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string SFIDValue {
            get {
                return this.sFIDValueField;
            }
            set {
                this.sFIDValueField = value;
            }
        }
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string activeStatusBaseName {
            get {
                return this.activeStatusBaseNameField;
            }
            set {
                this.activeStatusBaseNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public long fileInfoID {
            get {
                return this.fileInfoIDField;
            }
            set {
                this.fileInfoIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> generatedDate {
            get {
                return this.generatedDateField;
            }
            set {
                this.generatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class AssignedUser {
        
        private long idField;
        
        private int activeStatusField;
        
        private long assetIDField;
        
        private System.Nullable<System.DateTime> assignedDateField;
        
        private string displayNameField;
        
        private string emailAddressField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        private long userIDField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int activeStatus {
            get {
                return this.activeStatusField;
            }
            set {
                this.activeStatusField = value;
            }
        }
        
        /// <remarks/>
        public long assetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> assignedDate {
            get {
                return this.assignedDateField;
            }
            set {
                this.assignedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
        
        /// <remarks/>
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class CategorizationType {
        
        private long idField;
        
        private bool assetAssignableField;
        
        private Categorization[] categorizationsField;
        
        private string displayNameField;
        
        private string displayPluralField;
        
        private string displaySingularField;
        
        private bool exclusiveAssignField;
        
        private string[] externalIDsField;
        
        private string nameField;
        
        private bool projectAssignableField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool assetAssignable {
            get {
                return this.assetAssignableField;
            }
            set {
                this.assetAssignableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Categorization[] categorizations {
            get {
                return this.categorizationsField;
            }
            set {
                this.categorizationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayPlural {
            get {
                return this.displayPluralField;
            }
            set {
                this.displayPluralField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displaySingular {
            get {
                return this.displaySingularField;
            }
            set {
                this.displaySingularField = value;
            }
        }
        
        /// <remarks/>
        public bool exclusiveAssign {
            get {
                return this.exclusiveAssignField;
            }
            set {
                this.exclusiveAssignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] externalIDs {
            get {
                return this.externalIDsField;
            }
            set {
                this.externalIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool projectAssignable {
            get {
                return this.projectAssignableField;
            }
            set {
                this.projectAssignableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class Contact {
        
        private long idField;
        
        private string cityField;
        
        private string companyField;
        
        private string countryField;
        
        private string displayNameField;
        
        private string emailField;
        
        private string faxNumberField;
        
        private string nameField;
        
        private string phoneNumberField;
        
        private string stateField;
        
        private string street1Field;
        
        private string street2Field;
        
        private string typeField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        private string zipField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string faxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string street1 {
            get {
                return this.street1Field;
            }
            set {
                this.street1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class FileInfo {
        
        private long idField;
        
        private string uRIField;
        
        private string descriptionField;
        
        private string displayNameField;
        
        private string downloadURIField;
        
        private string fileStorageField;
        
        private FileType fileTypeField;
        
        private string fileTypeIDField;
        
        private string nameField;
        
        private string relativeUriField;
        
        private string[] securitySettingsField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string downloadURI {
            get {
                return this.downloadURIField;
            }
            set {
                this.downloadURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string fileStorage {
            get {
                return this.fileStorageField;
            }
            set {
                this.fileStorageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public FileType fileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string fileTypeID {
            get {
                return this.fileTypeIDField;
            }
            set {
                this.fileTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string relativeUri {
            get {
                return this.relativeUriField;
            }
            set {
                this.relativeUriField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] securitySettings {
            get {
                return this.securitySettingsField;
            }
            set {
                this.securitySettingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class FileType {
        
        private long idField;
        
        private string displayNameField;
        
        private string labelField;
        
        private string rulesClassField;
        
        private string typeField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string rulesClass {
            get {
                return this.rulesClassField;
            }
            set {
                this.rulesClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class PolicyAssertionResult {
        
        private long idField;
        
        private long assertionIDField;
        
        private long assetIDField;
        
        private System.Nullable<System.DateTime> evaluationDateField;
        
        private string evaluationInformationField;
        
        private string evaluationValueField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public long assertionID {
            get {
                return this.assertionIDField;
            }
            set {
                this.assertionIDField = value;
            }
        }
        
        /// <remarks/>
        public long assetID {
            get {
                return this.assetIDField;
            }
            set {
                this.assetIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> evaluationDate {
            get {
                return this.evaluationDateField;
            }
            set {
                this.evaluationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string evaluationInformation {
            get {
                return this.evaluationInformationField;
            }
            set {
                this.evaluationInformationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string evaluationValue {
            get {
                return this.evaluationValueField;
            }
            set {
                this.evaluationValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class PolicyAssertion {
        
        private long idField;
        
        private long assertionTypeIDField;
        
        private string descriptionField;
        
        private string nameField;
        
        private string technicalDefinitionField;
        
        private System.Nullable<System.DateTime> updatedDateField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public long assertionTypeID {
            get {
                return this.assertionTypeIDField;
            }
            set {
                this.assertionTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string technicalDefinition {
            get {
                return this.technicalDefinitionField;
            }
            set {
                this.technicalDefinitionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class SubmissionFileInfo {
        
        private bool importedField;
        
        private long lengthField;
        
        private bool markedForDeleteField;
        
        private bool markedForImportField;
        
        private string nameField;
        
        /// <remarks/>
        public bool imported {
            get {
                return this.importedField;
            }
            set {
                this.importedField = value;
            }
        }
        
        /// <remarks/>
        public long length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public bool markedForDelete {
            get {
                return this.markedForDeleteField;
            }
            set {
                this.markedForDeleteField = value;
            }
        }
        
        /// <remarks/>
        public bool markedForImport {
            get {
                return this.markedForImportField;
            }
            set {
                this.markedForImportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class UniqueElement {
        
        private long idField;
        
        private string valueField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class TabBean {
        
        private bool approvedField;
        
        private System.Nullable<System.DateTime> approvedDateField;
        
        private RegistryUser approverField;
        
        private long idField;
        
        private string nameField;
        
        /// <remarks/>
        public bool approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> approvedDate {
            get {
                return this.approvedDateField;
            }
            set {
                this.approvedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RegistryUser approver {
            get {
                return this.approverField;
            }
            set {
                this.approverField = value;
            }
        }
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class LogEntry {
        
        private string commentsField;
        
        private System.Nullable<System.DateTime> submittedDateField;
        
        private long submitterIDField;
        
        private int typeField;
        
        private string typeStringField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> submittedDate {
            get {
                return this.submittedDateField;
            }
            set {
                this.submittedDateField = value;
            }
        }
        
        /// <remarks/>
        public long submitterID {
            get {
                return this.submitterIDField;
            }
            set {
                this.submitterIDField = value;
            }
        }
        
        /// <remarks/>
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string typeString {
            get {
                return this.typeStringField;
            }
            set {
                this.typeStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class AssetSummary {
        
        private long idField;
        
        private string uUIDField;
        
        private string longNameField;
        
        private string nameField;
        
        private long typeIDField;
        
        private string versionField;
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string UUID {
            get {
                return this.uUIDField;
            }
            set {
                this.uUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string longName {
            get {
                return this.longNameField;
            }
            set {
                this.longNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public long typeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class ArtifactStoreBean {
        
        private string basePathField;
        
        private string downloadBasePathField;
        
        private string hostField;
        
        private long idField;
        
        private string nameField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string basePath {
            get {
                return this.basePathField;
            }
            set {
                this.basePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string downloadBasePath {
            get {
                return this.downloadBasePathField;
            }
            set {
                this.downloadBasePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class NameValue {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entity.openapi.registry.flashline.com")]
    public partial class TabTypeBean {
        
        private long idField;
        
        private string nameField;
        
        private int sortOrderField;
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int sortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetReadTabMetadataCompletedEventHandler(object sender, assetReadTabMetadataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetReadTabMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetReadTabMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetMetadataElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetMetadataElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTypeTabsReadCompletedEventHandler(object sender, assetTypeTabsReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTypeTabsReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTypeTabsReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TabTypeBean[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TabTypeBean[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTabApproveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTabUnapproveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void notificationCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void notificationSubstitutionsReadCompletedEventHandler(object sender, notificationSubstitutionsReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class notificationSubstitutionsReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal notificationSubstitutionsReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void artifactStoreQueryCompletedEventHandler(object sender, artifactStoreQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class artifactStoreQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal artifactStoreQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArtifactStoreBean[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArtifactStoreBean[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void authTokenCreateCompletedEventHandler(object sender, authTokenCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authTokenCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authTokenCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthToken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthToken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void authTokenCreateWithLicenseCompletedEventHandler(object sender, authTokenCreateWithLicenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authTokenCreateWithLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authTokenCreateWithLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthToken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthToken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void authTokenDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void authTokenValidateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetCreateCompletedEventHandler(object sender, assetCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetCreateFromXMLCompletedEventHandler(object sender, assetCreateFromXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetCreateFromXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetCreateFromXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetReadCompletedEventHandler(object sender, assetReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetReadXmlCompletedEventHandler(object sender, assetReadXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetReadXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetReadXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetReadCustomDataStringCompletedEventHandler(object sender, assetReadCustomDataStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetReadCustomDataStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetReadCustomDataStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetReadCustomDataNodeCompletedEventHandler(object sender, assetReadCustomDataNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetReadCustomDataNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetReadCustomDataNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetReadArrayCompletedEventHandler(object sender, assetReadArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetReadArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetReadArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetReadArrayFromSummaryCompletedEventHandler(object sender, assetReadArrayFromSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetReadArrayFromSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetReadArrayFromSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetUpdateCompletedEventHandler(object sender, assetUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetAddCategorizationCompletedEventHandler(object sender, assetAddCategorizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetAddCategorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetAddCategorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetGetUnacceptedFilesCompletedEventHandler(object sender, assetGetUnacceptedFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetGetUnacceptedFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetGetUnacceptedFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubmissionFileInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubmissionFileInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetAcceptFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetDeleteFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetUpdateCustomDataStringCompletedEventHandler(object sender, assetUpdateCustomDataStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetUpdateCustomDataStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetUpdateCustomDataStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetUpdateCustomDataStringArrayCompletedEventHandler(object sender, assetUpdateCustomDataStringArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetUpdateCustomDataStringArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetUpdateCustomDataStringArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetUpdateCustomDataNodeCompletedEventHandler(object sender, assetUpdateCustomDataNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetUpdateCustomDataNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetUpdateCustomDataNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetUpdateCustomDataNodeFromStringArrayCompletedEventHandler(object sender, assetUpdateCustomDataNodeFromStringArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetUpdateCustomDataNodeFromStringArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetUpdateCustomDataNodeFromStringArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetUploadFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetAddRegistrarNoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetReadRegistrarNotesCompletedEventHandler(object sender, assetReadRegistrarNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetReadRegistrarNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetReadRegistrarNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LogEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LogEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetRegisterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetUnRegisterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetAcceptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetUnAcceptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetSubmitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetUnSubmitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetActivateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetDeactivateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetRetireCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTabsReadCompletedEventHandler(object sender, assetTabsReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTabsReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTabsReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TabBean[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TabBean[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTabReadCompletedEventHandler(object sender, assetTabReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTabReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTabReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TabBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TabBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetQuerySummaryCompletedEventHandler(object sender, assetQuerySummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetQuerySummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetQuerySummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetSummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetSummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetQueryCompletedEventHandler(object sender, assetQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetQueryCountCompletedEventHandler(object sender, assetQueryCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetQueryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetQueryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetReadAppliedToProjectsCompletedEventHandler(object sender, assetReadAppliedToProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetReadAppliedToProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetReadAppliedToProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetReadAppliedPoliciesCompletedEventHandler(object sender, assetReadAppliedPoliciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetReadAppliedPoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetReadAppliedPoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetUpdateAppliedPoliciesCompletedEventHandler(object sender, assetUpdateAppliedPoliciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetUpdateAppliedPoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetUpdateAppliedPoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetEvaluateCompletedEventHandler(object sender, assetEvaluateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetEvaluateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetEvaluateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KeyValuePair Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePair)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetEvaluateAgainstAllPoliciesCompletedEventHandler(object sender, assetEvaluateAgainstAllPoliciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetEvaluateAgainstAllPoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetEvaluateAgainstAllPoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetEvaluateAgainstPolicyCompletedEventHandler(object sender, assetEvaluateAgainstPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetEvaluateAgainstPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetEvaluateAgainstPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetApplyToProjectsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetRemoveAppliedToProjectsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void repositoryFileTranslatorCompletedEventHandler(object sender, repositoryFileTranslatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class repositoryFileTranslatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal repositoryFileTranslatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationTypeCreateCompletedEventHandler(object sender, categorizationTypeCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationTypeCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationTypeCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategorizationType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategorizationType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationTypeReadCompletedEventHandler(object sender, categorizationTypeReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationTypeReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationTypeReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategorizationType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategorizationType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationTypeUpdateCompletedEventHandler(object sender, categorizationTypeUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationTypeUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationTypeUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategorizationType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategorizationType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationTypeDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationTypeQueryCompletedEventHandler(object sender, categorizationTypeQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationTypeQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationTypeQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategorizationType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategorizationType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationCreateCompletedEventHandler(object sender, categorizationCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Categorization Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Categorization)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationChildCreateCompletedEventHandler(object sender, categorizationChildCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationChildCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationChildCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Categorization Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Categorization)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationReadCompletedEventHandler(object sender, categorizationReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Categorization Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Categorization)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationReadByTypeCompletedEventHandler(object sender, categorizationReadByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationReadByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationReadByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Categorization[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Categorization[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationChildReadCompletedEventHandler(object sender, categorizationChildReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationChildReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationChildReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Categorization[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Categorization[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationUpdateCompletedEventHandler(object sender, categorizationUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Categorization Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Categorization)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationUpdateArrayCompletedEventHandler(object sender, categorizationUpdateArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationUpdateArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationUpdateArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Categorization[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Categorization[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationDeactivateCompletedEventHandler(object sender, categorizationDeactivateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationDeactivateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationDeactivateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Categorization Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Categorization)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void categorizationReactivateCompletedEventHandler(object sender, categorizationReactivateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class categorizationReactivateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal categorizationReactivateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Categorization Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Categorization)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void contactCreateCompletedEventHandler(object sender, contactCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class contactCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal contactCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void contactReadCompletedEventHandler(object sender, contactReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class contactReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal contactReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void contactUpdateCompletedEventHandler(object sender, contactUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class contactUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal contactUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void contactDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void contactQueryCompletedEventHandler(object sender, contactQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class contactQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal contactQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionCreateCompletedEventHandler(object sender, extractionCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExtractionDownload[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExtractionDownload[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionGetHiddenAssetUsersCompletedEventHandler(object sender, extractionGetHiddenAssetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionGetHiddenAssetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionGetHiddenAssetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionCreateForUserCompletedEventHandler(object sender, extractionCreateForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionCreateForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionCreateForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExtractionDownload[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExtractionDownload[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionTentativelyAcceptCompletedEventHandler(object sender, extractionTentativelyAcceptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionTentativelyAcceptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionTentativelyAcceptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionStillEvaluatingCompletedEventHandler(object sender, extractionStillEvaluatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionStillEvaluatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionStillEvaluatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionRejectCompletedEventHandler(object sender, extractionRejectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionRejectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionRejectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionUpdateSurveyCompletedEventHandler(object sender, extractionUpdateSurveyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionUpdateSurveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionUpdateSurveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionUpdateSurveyForUserCompletedEventHandler(object sender, extractionUpdateSurveyForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionUpdateSurveyForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionUpdateSurveyForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionReadCompletedEventHandler(object sender, extractionReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionReadByProjectAndAssetCompletedEventHandler(object sender, extractionReadByProjectAndAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionReadByProjectAndAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionReadByProjectAndAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionReadUserExtractionsCompletedEventHandler(object sender, extractionReadUserExtractionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionReadUserExtractionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionReadUserExtractionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionReadAssetExtractionsCompletedEventHandler(object sender, extractionReadAssetExtractionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionReadAssetExtractionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionReadAssetExtractionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionReadProjectExtractionsCompletedEventHandler(object sender, extractionReadProjectExtractionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionReadProjectExtractionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionReadProjectExtractionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionReadExtractionDownloadsCompletedEventHandler(object sender, extractionReadExtractionDownloadsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionReadExtractionDownloadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionReadExtractionDownloadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExtractionDownload[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExtractionDownload[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionReadFileInfosCompletedEventHandler(object sender, extractionReadFileInfosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionReadFileInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionReadFileInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionReadRelatedAssetsCompletedEventHandler(object sender, extractionReadRelatedAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionReadRelatedAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionReadRelatedAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionReadRejectionReasonsCompletedEventHandler(object sender, extractionReadRejectionReasonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionReadRejectionReasonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionReadRejectionReasonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Categorization[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Categorization[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionReadExtractionStatesCompletedEventHandler(object sender, extractionReadExtractionStatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extractionReadExtractionStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extractionReadExtractionStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IExtraction Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IExtraction)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void extractionResetDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectAssetValueReadForUserCompletedEventHandler(object sender, projectAssetValueReadForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectAssetValueReadForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectAssetValueReadForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectAssetValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectAssetValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectAssetValueReadCompletedEventHandler(object sender, projectAssetValueReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectAssetValueReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectAssetValueReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectAssetValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectAssetValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectAssetValueReadSummaryCompletedEventHandler(object sender, projectAssetValueReadSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectAssetValueReadSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectAssetValueReadSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectAssetValueSummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectAssetValueSummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectAssetValueReadTypesCompletedEventHandler(object sender, projectAssetValueReadTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectAssetValueReadTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectAssetValueReadTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetUsageType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetUsageType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectAssetValueUpdateCompletedEventHandler(object sender, projectAssetValueUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectAssetValueUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectAssetValueUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectAssetValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectAssetValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectCreateCompletedEventHandler(object sender, projectCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadCompletedEventHandler(object sender, projectReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadArrayCompletedEventHandler(object sender, projectReadArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadArrayFromSummaryCompletedEventHandler(object sender, projectReadArrayFromSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadArrayFromSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadArrayFromSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectUpdateCompletedEventHandler(object sender, projectUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadMembersCompletedEventHandler(object sender, projectReadMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadMemberIDsCompletedEventHandler(object sender, projectReadMemberIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadMemberIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadMemberIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadLeadersCompletedEventHandler(object sender, projectReadLeadersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadLeadersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadLeadersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadLeaderIDsCompletedEventHandler(object sender, projectReadLeaderIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadLeaderIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadLeaderIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReassignExtractionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReassignUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadUserTypesCompletedEventHandler(object sender, projectReadUserTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadUserTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadUserTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectUserType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectUserType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadParentProjectsCompletedEventHandler(object sender, projectReadParentProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadParentProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadParentProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadParentProjectIDsCompletedEventHandler(object sender, projectReadParentProjectIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadParentProjectIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadParentProjectIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadChildProjectsCompletedEventHandler(object sender, projectReadChildProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadChildProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadChildProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadChildProjectIDsCompletedEventHandler(object sender, projectReadChildProjectIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadChildProjectIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadChildProjectIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadExtractionsCompletedEventHandler(object sender, projectReadExtractionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadExtractionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadExtractionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Extraction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Extraction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadExtractionAssetIDsCompletedEventHandler(object sender, projectReadExtractionAssetIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadExtractionAssetIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadExtractionAssetIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadAssetsCompletedEventHandler(object sender, projectReadAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectAsset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectAsset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadPrescribedAssetsCompletedEventHandler(object sender, projectReadPrescribedAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadPrescribedAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadPrescribedAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadAppliedComplianceTemplatesCompletedEventHandler(object sender, projectReadAppliedComplianceTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadAppliedComplianceTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadAppliedComplianceTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelatedEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelatedEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadProducedAssetsCompletedEventHandler(object sender, projectReadProducedAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadProducedAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadProducedAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectReadProducedAssetIDsCompletedEventHandler(object sender, projectReadProducedAssetIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectReadProducedAssetIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectReadProducedAssetIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectQueryCompletedEventHandler(object sender, projectQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectQuerySummaryCompletedEventHandler(object sender, projectQuerySummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectQuerySummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectQuerySummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectSummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectSummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void projectValidateCompletedEventHandler(object sender, projectValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class projectValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal projectValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Results Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Results)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void departmentCreateCompletedEventHandler(object sender, departmentCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class departmentCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal departmentCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void departmentReadCompletedEventHandler(object sender, departmentReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class departmentReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal departmentReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void departmentUpdateCompletedEventHandler(object sender, departmentUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class departmentUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal departmentUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void departmentQueryCompletedEventHandler(object sender, departmentQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class departmentQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal departmentQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void acceptableValueListCreateCompletedEventHandler(object sender, acceptableValueListCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class acceptableValueListCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal acceptableValueListCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AcceptableValueList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcceptableValueList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void acceptableValueListReadCompletedEventHandler(object sender, acceptableValueListReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class acceptableValueListReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal acceptableValueListReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AcceptableValueList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcceptableValueList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void acceptableValueListUpdateCompletedEventHandler(object sender, acceptableValueListUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class acceptableValueListUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal acceptableValueListUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AcceptableValueList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcceptableValueList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void acceptableValueListQueryCompletedEventHandler(object sender, acceptableValueListQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class acceptableValueListQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal acceptableValueListQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AcceptableValueList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcceptableValueList[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTypeCreateCloneCompletedEventHandler(object sender, assetTypeCreateCloneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTypeCreateCloneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTypeCreateCloneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTypeCreateCompletedEventHandler(object sender, assetTypeCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTypeCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTypeCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTypeCreateComplianceTemplateCompletedEventHandler(object sender, assetTypeCreateComplianceTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTypeCreateComplianceTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTypeCreateComplianceTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTypeReadCompletedEventHandler(object sender, assetTypeReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTypeReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTypeReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTypeGetEntityArtifactRulesCompletedEventHandler(object sender, assetTypeGetEntityArtifactRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTypeGetEntityArtifactRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTypeGetEntityArtifactRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityArtifactRule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityArtifactRule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTypeUpdateCompletedEventHandler(object sender, assetTypeUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTypeUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTypeUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTypeDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTypeQueryCompletedEventHandler(object sender, assetTypeQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTypeQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTypeQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetTypeSchemaReadCompletedEventHandler(object sender, assetTypeSchemaReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetTypeSchemaReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetTypeSchemaReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void configGetWebResourcePathCompletedEventHandler(object sender, configGetWebResourcePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class configGetWebResourcePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal configGetWebResourcePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void systemSettingsAddBundleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void systemSettingsQueryCompletedEventHandler(object sender, systemSettingsQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class systemSettingsQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal systemSettingsQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SettingValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SettingValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userCreateCompletedEventHandler(object sender, userCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userReadCompletedEventHandler(object sender, userReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userReadByAuthTokenCompletedEventHandler(object sender, userReadByAuthTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userReadByAuthTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userReadByAuthTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userUpdateCompletedEventHandler(object sender, userUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userActivateCompletedEventHandler(object sender, userActivateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userActivateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userActivateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userDeactivateCompletedEventHandler(object sender, userDeactivateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userDeactivateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userDeactivateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userLockoutCompletedEventHandler(object sender, userLockoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userLockoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userLockoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userUnapproveCompletedEventHandler(object sender, userUnapproveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userUnapproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userUnapproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userQueryCompletedEventHandler(object sender, userQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userAddRoleCompletedEventHandler(object sender, userAddRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userAddRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userAddRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void userRemoveRoleCompletedEventHandler(object sender, userRemoveRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userRemoveRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userRemoveRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void unitTestUserResetDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void customAccessSettingNamesGetCompletedEventHandler(object sender, customAccessSettingNamesGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class customAccessSettingNamesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal customAccessSettingNamesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void customAccessSettingDefaultNamesGetCompletedEventHandler(object sender, customAccessSettingDefaultNamesGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class customAccessSettingDefaultNamesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal customAccessSettingDefaultNamesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void customAccessSettingTypesGetCompletedEventHandler(object sender, customAccessSettingTypesGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class customAccessSettingTypesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal customAccessSettingTypesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void rbacHasPermissionCompletedEventHandler(object sender, rbacHasPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rbacHasPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rbacHasPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void roleCreateCompletedEventHandler(object sender, roleCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class roleCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal roleCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void roleReadCompletedEventHandler(object sender, roleReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class roleReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal roleReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void roleUpdateCompletedEventHandler(object sender, roleUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class roleUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal roleUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void roleDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void roleQueryCompletedEventHandler(object sender, roleQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class roleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal roleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void relationshipTypeCreateCompletedEventHandler(object sender, relationshipTypeCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class relationshipTypeCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal relationshipTypeCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationshipType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationshipType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void relationshipTypeReadCompletedEventHandler(object sender, relationshipTypeReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class relationshipTypeReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal relationshipTypeReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationshipType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationshipType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void relationshipTypeUpdateCompletedEventHandler(object sender, relationshipTypeUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class relationshipTypeUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal relationshipTypeUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationshipType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationshipType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void relationshipTypeDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void relationshipTypeQueryCompletedEventHandler(object sender, relationshipTypeQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class relationshipTypeQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal relationshipTypeQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelationshipType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationshipType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void surveyTakenReadCompletedEventHandler(object sender, surveyTakenReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class surveyTakenReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal surveyTakenReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SurveyTaken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SurveyTaken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void surveyReadQuestionsCompletedEventHandler(object sender, surveyReadQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class surveyReadQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal surveyReadQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Question[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Question[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void surveyTakenUpdateCompletedEventHandler(object sender, surveyTakenUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class surveyTakenUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal surveyTakenUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SurveyTaken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SurveyTaken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void vendorCreateCompletedEventHandler(object sender, vendorCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class vendorCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal vendorCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void vendorReadCompletedEventHandler(object sender, vendorReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class vendorReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal vendorReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void vendorUpdateCompletedEventHandler(object sender, vendorUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class vendorUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal vendorUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void vendorDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void vendorQueryCompletedEventHandler(object sender, vendorQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class vendorQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal vendorQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportListJobsCompletedEventHandler(object sender, exportListJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportListJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportListJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpExpJob[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpExpJob[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportExecuteCompletedEventHandler(object sender, exportExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpExpJob Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpExpJob)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportGetAuditB64CompletedEventHandler(object sender, exportGetAuditB64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportGetAuditB64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportGetAuditB64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportGetAuditDIMECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportGetAuditSwACompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportGetLatestAuditMsgCompletedEventHandler(object sender, exportGetLatestAuditMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportGetLatestAuditMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportGetLatestAuditMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuditMsg Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditMsg)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void importGetAuditB64CompletedEventHandler(object sender, importGetAuditB64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importGetAuditB64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importGetAuditB64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void importGetAuditDIMECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void importGetAuditSwACompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void importGetLatestAuditMsgCompletedEventHandler(object sender, importGetLatestAuditMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importGetLatestAuditMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importGetLatestAuditMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuditMsg Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditMsg)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportStatusCompletedEventHandler(object sender, exportStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpExpJob Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpExpJob)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportKillCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportGetResultsB64CompletedEventHandler(object sender, exportGetResultsB64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportGetResultsB64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportGetResultsB64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportGetResultsDIMECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportGetResultsSwACompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportCleanupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void importListJobsCompletedEventHandler(object sender, importListJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importListJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importListJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpExpJob[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpExpJob[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void importExecuteCompletedEventHandler(object sender, importExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpExpJob Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpExpJob)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void importStatusCompletedEventHandler(object sender, importStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImpExpJob Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImpExpJob)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void importKillCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void importCheckPermissionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void exportCheckPermissionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void importCleanupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testClearCacheCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testUpdateAssetDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testUpdateTabStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testCreateCustomAccessSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getAssetMaxIDCompletedEventHandler(object sender, getAssetMaxIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAssetMaxIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAssetMaxIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testThrowOpenAPIExceptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testSetSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testGetSettingValueCompletedEventHandler(object sender, testGetSettingValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testGetSettingValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testGetSettingValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testSetPropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testDeleteAssetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testDeleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testDeleteProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testDeleteAssetTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testRestartJobMonitorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testThrowImportExportExceptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testGetLicenseStateCompletedEventHandler(object sender, testGetLicenseStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testGetLicenseStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testGetLicenseStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testDetermineDBPlatformCompletedEventHandler(object sender, testDetermineDBPlatformCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testDetermineDBPlatformCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testDetermineDBPlatformCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testSetLicenseStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testAcceptableValueListDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testLogMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testExtractionResetDatabaseForProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testUpdateViewAssetSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testCleanupNonRunningJobsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testUpdateUserRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testUpdateProjectAdminRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testClearDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidAddToAssetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidRemoveAllFromAssetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidUpdateAssetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidReadValuesByProjectCompletedEventHandler(object sender, sfidReadValuesByProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sfidReadValuesByProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sfidReadValuesByProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidQueryCompletedEventHandler(object sender, sfidQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sfidQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sfidQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SFIDInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SFIDInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidCandidateQueryCompletedEventHandler(object sender, sfidCandidateQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sfidCandidateQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sfidCandidateQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SFIDCandidate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SFIDCandidate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidGenerateCompletedEventHandler(object sender, sfidGenerateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sfidGenerateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sfidGenerateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SFIDInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SFIDInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidCandidateSubmitCompletedEventHandler(object sender, sfidCandidateSubmitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sfidCandidateSubmitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sfidCandidateSubmitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SFIDCandidate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SFIDCandidate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidReadValuesForAssetCompletedEventHandler(object sender, sfidReadValuesForAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sfidReadValuesForAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sfidReadValuesForAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidRegisterExtractionBySFIDValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidRegisterExtractionBySFIDValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidRegisterExtractionBySFIDCandidatesCompletedEventHandler(object sender, sfidRegisterExtractionBySFIDCandidatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sfidRegisterExtractionBySFIDCandidatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sfidRegisterExtractionBySFIDCandidatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetSummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetSummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidRegisterExtractionBySFIDCandidatesLiteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidRegisterExtractionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void sfidRegisterExtractionBySFIDValuesResultsCompletedEventHandler(object sender, sfidRegisterExtractionBySFIDValuesResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sfidRegisterExtractionBySFIDValuesResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sfidRegisterExtractionBySFIDValuesResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssetSummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssetSummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void reuseDTOReadCompletedEventHandler(object sender, reuseDTOReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reuseDTOReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reuseDTOReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReuseDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReuseDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetMetadataCreateDIMECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetMetadataCreateSwACompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetMetadataReadCompletedEventHandler(object sender, assetMetadataReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetMetadataReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetMetadataReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetMetadataReadDIMECompletedEventHandler(object sender, assetMetadataReadDIMECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetMetadataReadDIMECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetMetadataReadDIMECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetMetadataReadSwACompletedEventHandler(object sender, assetMetadataReadSwACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assetMetadataReadSwACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assetMetadataReadSwACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetMetadataUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetMetadataUpdateDIMECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetMetadataUpdateSwACompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetMetadataEntryDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void assetMetadataAcceptCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryTypeCreateCompletedEventHandler(object sender, metadataEntryTypeCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryTypeCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryTypeCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntryTypeSummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntryTypeSummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryTypeReadCompletedEventHandler(object sender, metadataEntryTypeReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryTypeReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryTypeReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntryTypeSummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntryTypeSummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryTypeUpdateCompletedEventHandler(object sender, metadataEntryTypeUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryTypeUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryTypeUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntryTypeSummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntryTypeSummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryTypeDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryTypeQueryCompletedEventHandler(object sender, metadataEntryTypeQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryTypeQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryTypeQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntryTypeSummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntryTypeSummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryCreateDIMECompletedEventHandler(object sender, metadataEntryCreateDIMECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryCreateDIMECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryCreateDIMECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryCreateSwACompletedEventHandler(object sender, metadataEntryCreateSwACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryCreateSwACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryCreateSwACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryReadDIMECompletedEventHandler(object sender, metadataEntryReadDIMECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryReadDIMECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryReadDIMECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryReadDIME1CompletedEventHandler(object sender, metadataEntryReadDIME1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryReadDIME1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryReadDIME1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryReadSwACompletedEventHandler(object sender, metadataEntryReadSwACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryReadSwACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryReadSwACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryReadSwA1CompletedEventHandler(object sender, metadataEntryReadSwA1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryReadSwA1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryReadSwA1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryUpdateDIMECompletedEventHandler(object sender, metadataEntryUpdateDIMECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryUpdateDIMECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryUpdateDIMECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryUpdateSwACompletedEventHandler(object sender, metadataEntryUpdateSwACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryUpdateSwACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryUpdateSwACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void metadataEntryQueryCompletedEventHandler(object sender, metadataEntryQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class metadataEntryQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal metadataEntryQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MetadataEntrySummary[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MetadataEntrySummary[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testCasDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testCasCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testRoleContextAddRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testRoleContextSetPermissionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testRoleContextSetPermissionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testRoleContextApplySecuritySettingToExistingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testRoleContextGetAllRolesCompletedEventHandler(object sender, testRoleContextGetAllRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testRoleContextGetAllRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testRoleContextGetAllRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testRoleContextGetPermissionFromRoleCompletedEventHandler(object sender, testRoleContextGetPermissionFromRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testRoleContextGetPermissionFromRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testRoleContextGetPermissionFromRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testRoleContextClearRolesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testRoleContextRemoveRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testDoSQLCompletedEventHandler(object sender, testDoSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testDoSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testDoSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testHasSufficientAssetsCompletedEventHandler(object sender, testHasSufficientAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testHasSufficientAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testHasSufficientAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void testDoSimpleQueryCompletedEventHandler(object sender, testDoSimpleQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testDoSimpleQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testDoSimpleQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void subscriptionCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void subscriptionDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void subscriptionReadSubscribedAssetsCompletedEventHandler(object sender, subscriptionReadSubscribedAssetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subscriptionReadSubscribedAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subscriptionReadSubscribedAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void subscriptionReadUsersSubscribedToAssetCompletedEventHandler(object sender, subscriptionReadUsersSubscribedToAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subscriptionReadUsersSubscribedToAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subscriptionReadUsersSubscribedToAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void retrieveRootArtifactsCompletedEventHandler(object sender, retrieveRootArtifactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveRootArtifactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveRootArtifactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void retrieveRootArtifactsWithCustomRelationshipCompletedEventHandler(object sender, retrieveRootArtifactsWithCustomRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveRootArtifactsWithCustomRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveRootArtifactsWithCustomRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void retrieveLatestRootArtifactCompletedEventHandler(object sender, retrieveLatestRootArtifactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveLatestRootArtifactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveLatestRootArtifactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Asset Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Asset)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void retrieveArtifactCollectionAsDIMECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void retrieveAndRecordUsageOfArtifactCollectionAsDIMECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void retrieveAndRecordUsageOfArtifactCollectionAsDIME1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void retrieveArtifactCollectionAsSwaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void retrieveAndRecordUsageOfArtifactCollectionAsSwaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void retrieveAndRecordUsageOfArtifactCollectionAsSwa1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getLatestArtifactsCompletedEventHandler(object sender, getLatestArtifactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLatestArtifactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLatestArtifactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getLatestArtifactsCustomRelationshipTypesCompletedEventHandler(object sender, getLatestArtifactsCustomRelationshipTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLatestArtifactsCustomRelationshipTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLatestArtifactsCustomRelationshipTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileInfo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591